{"version":3,"sources":["../node_modules/fp-ts/lib/function.js","../node_modules/fp-ts/lib/Apply.js","../node_modules/fp-ts/lib/Functor.js","../node_modules/fp-ts/lib/Applicative.js","../node_modules/fp-ts/lib/Chain.js","../node_modules/fp-ts/lib/internal.js","../node_modules/fp-ts/lib/FromEither.js","../node_modules/fp-ts/lib/Predicate.js","../node_modules/fp-ts/lib/Magma.js","../node_modules/fp-ts/lib/Eq.js","../node_modules/fp-ts/lib/Ord.js","../node_modules/fp-ts/lib/Semigroup.js","../node_modules/fp-ts/lib/Separated.js","../node_modules/fp-ts/lib/Witherable.js","../node_modules/fp-ts/lib/Zero.js","../node_modules/fp-ts/lib/Option.js","PokeApi.ts","../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","components/store.ts","initialize.ts","../node_modules/awesomplete/awesomplete.js","../node_modules/svelte/index.mjs","typings/AwesomepleteEvent.ts","components/moves/Move.svelte","components/moves/Moves.svelte","components/Member.svelte","model/effectiveness.ts","../node_modules/fp-ts/lib/ReadonlyNonEmptyArray.js","../node_modules/fp-ts/lib/NonEmptyArray.js","../node_modules/fp-ts/lib/number.js","../node_modules/fp-ts/lib/ReadonlyArray.js","../node_modules/fp-ts/lib/Array.js","components/effectiveness/index.ts","../node_modules/fp-ts/es6/function.js","../node_modules/fp-ts/es6/Apply.js","../node_modules/fp-ts/es6/Functor.js","../node_modules/fp-ts/es6/Applicative.js","../node_modules/fp-ts/es6/Chain.js","../node_modules/fp-ts/es6/internal.js","../node_modules/fp-ts/es6/FromEither.js","../node_modules/fp-ts/es6/Predicate.js","../node_modules/fp-ts/es6/Magma.js","../node_modules/fp-ts/es6/Eq.js","../node_modules/fp-ts/es6/Ord.js","../node_modules/fp-ts/es6/Semigroup.js","../node_modules/fp-ts/es6/Separated.js","../node_modules/fp-ts/es6/Witherable.js","../node_modules/fp-ts/es6/Zero.js","../node_modules/fp-ts/es6/Option.js","components/effectiveness/Effectiveness.svelte","App.svelte","index.ts"],"names":["noop","identity","x","assign","tar","src","k","is_promise","value","then","add_location","element","file","line","column","char","__svelte_meta","loc","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","not_equal","is_empty","obj","keys","length","validate_store","store","name","subscribe","Error","callbacks","unsub","unsubscribe","get_store_value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","update_slot","get_slot_changes_fn","get_all_dirty_from_scope","exclude_internal_props","props","result","compute_rest_props","rest","Set","has","compute_slots","slots","key","once","ran","args","call","null_to_empty","set_store_value","ret","set","has_prop","prop","prototype","hasOwnProperty","action_destroyer","action_result","destroy","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","set_now","set_raf","tasks","run_tasks","task","c","delete","f","size","clear_loops","clear","loop","promise","Promise","fulfill","add","abort","crossorigin","is_hydrating","start_hydrating","end_hydrating","upper_bound","low","high","mid","init_hydrate","target","hydrate_init","children","childNodes","nodeName","myChildren","node","claim_order","m","Int32Array","longest","current","seqLen","idx","newLen","lis","toMove","last","cur","reverse","sort","j","anchor","insertBefore","append","appendChild","append_styles","style_sheet_id","styles","append_styles_to","get_root_for_style","getElementById","style","id","textContent","append_stylesheet","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","sheet","head","append_hydration","actual_end_child","parentElement","firstChild","nextSibling","parentNode","insert","insert_hydration","detach","removeChild","destroy_each","iterations","detaching","d","element_is","is","object_without_properties","exclude","indexOf","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","stop_propagation","stopPropagation","self","trusted","isTrusted","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","cssText","set_svg_attributes","set_custom_element_data","xlink_attr","setAttributeNS","get_binding_group_value","group","__value","checked","Array","from","to_number","time_ranges_to_array","ranges","array","start","end","init_claim_info","nodes","claim_info","last_index","total_claimed","claim_node","predicate","processNode","createNode","dontUpdateLastIndex","resultNode","replacement","splice","claim_element_base","create_element","remove","v","claim_element","claim_svg_element","claim_text","nodeType","dataStr","startsWith","splitText","claim_space","find_comment","trim","claim_html_tag","is_svg","start_index","end_index","HtmlTagHydration","html_tag_nodes","claimed_nodes","n","set_data","wholeText","set_input_value","input","set_input_type","type","e","set_style","important","removeProperty","setProperty","select_option","select","option","selected","selectedIndex","select_options","select_value","selected_option","querySelector","select_multiple_value","map","querySelectorAll","is_crossorigin","parent","error","add_resize_listener","getComputedStyle","position","iframe","tabIndex","source","contentWindow","onload","toggle_class","toggle","classList","custom_event","detail","bubbles","cancelable","createEvent","initCustomEvent","query_selector_all","selector","body","HtmlTag","constructor","html","h","t","innerHTML","l","attribute_to_object","get_custom_elements_slots","managed_styles","Map","current_component","active","hash","str","charCodeAt","create_style_information","doc","info","stylesheet","rules","create_rule","duration","delay","ease","uid","step","keyframes","rule","get","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","deleted","join","clear_rules","deleteRule","create_animation","params","to","getBoundingClientRect","left","right","top","bottom","easing","start_time","tick","css","running","started","stop","fix_position","width","height","add_transform","transform","set_current_component","get_current_component","beforeUpdate","before_update","onMount","on_mount","afterUpdate","after_update","onDestroy","createEventDispatcher","defaultPrevented","setContext","context","getContext","getAllContexts","hasContext","bubble","dirty_components","intros","enabled","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","schedule_update","flush","add_render_callback","add_flush_callback","seen_callbacks","flushidx","saved_component","update","pop","fragment","wait","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_in_transition","animation_name","config","cleanup","go","end_time","invalidate","create_out_transition","reset","create_bidirectional_transition","intro","running_program","pending_program","clear_animation","init","program","abs","handle_promise","token","index","resolved","child_ctx","needs_flush","blocks","mount","catch","hasCatch","pending","update_await_block_branch","globals","globalThis","global","destroy_block","lookup","outro_and_destroy_block","fix_and_destroy_block","fix_and_outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","will_move","did_move","first","new_block","old_block","new_key","old_key","validate_each_keys","get_spread_update","levels","updates","to_null_out","accounted_for","get_spread_object","spread_props","boolean_attributes","void_element_names","is_void","test","toLowerCase","invalid_attribute_name_character","spread","attrs_to_add","classes_to_add","classes","styles_to_add","class","style_object_to_string","merge_ssr_styles","style_attribute","style_directive","style_object","individual_style","colon_index","escaped","escape","String","replace","match","escape_attribute_value","escape_object","each","items","missing_component","$$render","validate_component","debug","values","console","log","SvelteElement","create_ssr_component","bindings","parent_component","render","$$slots","title","code","add_attribute","boolean","toString","add_classes","add_styles","bind","bound","create_component","claim_component","parent_nodes","mount_component","customElement","new_on_destroy","destroy_component","make_dirty","fill","instance","create_fragment","on_disconnect","skip_bound","ready","hydrate","HTMLElement","attachShadow","mode","connectedCallback","slotted","attributeChangedCallback","_oldValue","newValue","disconnectedCallback","$destroy","$on","$set","$$props","$$set","SvelteComponent","dispatch_dev","version","append_dev","append_hydration_dev","insert_dev","insert_hydration_dev","detach_dev","detach_between_dev","before","after","detach_before_dev","previousSibling","detach_after_dev","listen_dev","has_prevent_default","has_stop_propagation","modifiers","dispose","attr_dev","prop_dev","property","dataset_dev","dataset","set_data_dev","validate_each_argument","arg","msg","Symbol","iterator","validate_slots","slot_key","warn","validate_dynamic_element","tag","validate_void_dynamic_element","SvelteComponentDev","$$inline","$capture_state","$inject_state","SvelteComponentTyped","loop_guard","timeout","subscriber_queue","readable","writable","subscribers","new_value","run_queue","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","sync","unsubscribers","Move","label","t0","t1","input_placeholder_value","$$self","$$invalidate","$moves","moveIndex","mymon","team","mons","moves","mon","pipe","getOrElse","knownMoves","flatten","moveId","ap","none","close","of","Awesomplete","ms","evaluate","it","includes","updated","some","bit","blur","Moves","create_if_block","ol","li0","move0","updating_index","li1","move1","updating_index_1","li2","move2","updating_index_2","t2","li3","move3","updating_index_3","move0_index_binding","move0_props","move1_index_binding","move1_props","move2_index_binding","move2_props","move3_index_binding","move3_props","move0_changes","move1_changes","move2_changes","move3_changes","if_block_anchor","if_block","$exists","exists","isSome","Member","div","input_id_value","input_list_value","moves_index_binding","moves_props","moves_changes","$thinPokedex","thinPokedex","$$value","getPokemon","newMon","getBooleanAlgebra","B","meet","y","zero","one","implies","not","getSemigroup","S","concat","g","getMonoid","M","getSemigroupM","getSemiring","mul","getRing","R","sub","apply","unsafeCoerce","constant","constTrue","constFalse","constNull","constUndefined","constVoid","flip","flow","ab","bc","cd","de","ef","fg","gh","hi","ij","arguments","tuple","_i","increment","decrement","absurd","tupled","untupled","hole","SK","getEndomorphismMonoid","second","F","G","fa","fab","gab","ga","apFirst","A","apSecond","apS","fb","_a","getApplySemigroup","curried","acc","combined","tupleConstructors","getTupleConstructor","sequenceT","fas","getRecordConstructor","sequenceS","fr","flap","bindTo","getFunctorComposition","_map","fga","getApplicativeMonoid","getApplicativeComposition","_ap","fgab","chainFirst","chain","ma","__spreadArray","il","isNone","_tag","isLeft","isRight","singleton","isNonEmpty","as","tail","emptyReadonlyArray","emptyRecord","fromReadonlyNonEmptyArray","fromOption","onNone","fromEither","fromPredicate","onFalse","fromOptionK","fromOptionF","chainOptionK","fromOptionKF","fromEitherK","chainEitherK","fromEitherKF","chainFirstEitherK","filterOrElse","contramap_","contramap","URI","getSemigroupAny","or","getMonoidAny","getSemigroupAll","and","getMonoidAll","Contravariant","filterFirst","filterSecond","endo","concatAll","startWith","reduce","fromEquals","equals","struct","eqs","every","E","eqStrict","getTupleEq","getStructEq","strictEqual","eq","eqBoolean","eqString","eqNumber","eqDate","valueOf","equalsDefault","compare","fromCompare","ords","O","ox","trivial","lt","gt","leq","geq","min","clamp","minO","maxO","between","ltO","gtO","getTupleOrd","getDualOrd","ord","strictOrd","ordBoolean","ordString","ordNumber","ordDate","date","Or","semigroups","s","intercalate","middle","semigroupVoid","getObjectSemigroup","getLastSemigroup","getFirstSemigroup","getTupleSemigroup","getStructSemigroup","getDualSemigroup","getJoinSemigroup","getMeetSemigroup","getIntercalateSemigroup","fold","concatAllS","semigroupAll","semigroupAny","getFunctionSemigroup","semigroupString","semigroupSum","semigroupProduct","separated","_mapLeft","mapLeft","_bimap","bimap","Bifunctor","Functor","flap_","wiltDefault","T","C","traverseF","traverse","wa","separate","witherDefault","compact","filterE","W","witherF","wither","guard","P","getLeft","getRight","_chain","_reduce","_foldMap","foldMapM","foldMap","_reduceRight","reduceRight","_traverse","ta","_alt","that","alt","_filter","_filterMap","filterMap","_extend","extend","_partition","partition","_partitionMap","partitionMap","getShow","show","getEq","getOrd","Pointed","Apply","Applicative","Chain","Monad","Foldable","altW","Alt","Zero","guard_","Alternative","Extend","defaultSeparated","Compactable","Filterable","sequence","Traversable","_wither","_wilt","_witherF","wilt","_wiltF","Witherable","throwError","MonadThrow","FromEither","matchW","onSome","foldW","getOrElseW","apFirst_","apSecond_","chainFirst_","duplicate","fromEitherK_","chainEitherK_","chainFirstEitherK_","fromNullable","tryCatch","tryCatchK","fromNullableK","chainNullableK","toNullable","toUndefined","elem","elemE_1","Do","bindTo_","bind_","apS_","ApT","traverseReadonlyNonEmptyArrayWithIndex","out","o_1","traverseReadonlyArrayWithIndex","traverseArrayWithIndex","traverseArray","sequenceArray","getRefinement","getOption","mapNullable","getApplySemigroup_","getApplyMonoid","getFirstMonoid","getLastMonoid","Effectiveness_1","get_each_context","tr","th","td0","t3","td1","t4","t5","td2","t6","t7","td3","t8","t9","td4","t10","t11","td5","t12","t13","t0_value","t2_value","teamEffectiveness","t4_value","t6_value","t8_value","t10_value","t12_value","table","thead","tbody","each_value","each_blocks","$typedex","typedex","Half","Effectiveness","Double","Immune","Neutral","Quadrouple","Quarter","App","member","updating_selected","member_selected_binding","member_props","new_ctx","member_changes","effectiveness","effectiveness_changes","Boolean","$team","selecteds"],"mappings":"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","file":"src.889d8a55.js","sourceRoot":"../src","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndomorphismMonoid = exports.not = exports.SK = exports.hole = exports.pipe = exports.untupled = exports.tupled = exports.absurd = exports.decrement = exports.increment = exports.tuple = exports.flow = exports.flip = exports.constVoid = exports.constUndefined = exports.constNull = exports.constFalse = exports.constTrue = exports.constant = exports.unsafeCoerce = exports.identity = exports.apply = exports.getRing = exports.getSemiring = exports.getMonoid = exports.getSemigroup = exports.getBooleanAlgebra = void 0;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getBooleanAlgebra = function (B) { return function () { return ({\n    meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n    join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n    zero: function () { return B.zero; },\n    one: function () { return B.one; },\n    implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n    not: function (x) { return function (a) { return B.not(x(a)); }; }\n}); }; };\nexports.getBooleanAlgebra = getBooleanAlgebra;\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function (S) { return function () { return ({\n    concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n}); }; };\nexports.getSemigroup = getSemigroup;\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getMonoid = function (M) {\n    var getSemigroupM = exports.getSemigroup(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\nexports.getSemiring = getSemiring;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getRing = function (R) {\n    var S = exports.getSemiring(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\nexports.getRing = getRing;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nvar apply = function (a) { return function (f) { return f(a); }; };\nexports.apply = apply;\n/**\n * @since 2.0.0\n */\nfunction identity(a) {\n    return a;\n}\nexports.identity = identity;\n/**\n * @since 2.0.0\n */\nexports.unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nfunction constant(a) {\n    return function () { return a; };\n}\nexports.constant = constant;\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexports.constTrue = \n/*#__PURE__*/\nconstant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexports.constFalse = \n/*#__PURE__*/\nconstant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexports.constNull = \n/*#__PURE__*/\nconstant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexports.constUndefined = \n/*#__PURE__*/\nconstant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexports.constVoid = exports.constUndefined;\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\nfunction flip(f) {\n    return function (b, a) { return f(a, b); };\n}\nexports.flip = flip;\nfunction flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\nexports.flow = flow;\n/**\n * @since 2.0.0\n */\nfunction tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\nexports.tuple = tuple;\n/**\n * @since 2.0.0\n */\nfunction increment(n) {\n    return n + 1;\n}\nexports.increment = increment;\n/**\n * @since 2.0.0\n */\nfunction decrement(n) {\n    return n - 1;\n}\nexports.decrement = decrement;\n/**\n * @since 2.0.0\n */\nfunction absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\nexports.absurd = absurd;\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nfunction tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\nexports.tupled = tupled;\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nfunction untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexports.untupled = untupled;\nfunction pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        default:\n            var ret = arguments[0];\n            for (var i = 1; i < arguments.length; i++) {\n                ret = arguments[i](ret);\n            }\n            return ret;\n    }\n}\nexports.pipe = pipe;\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexports.hole = absurd;\n/**\n * @since 2.11.0\n */\nvar SK = function (_, b) { return b; };\nexports.SK = SK;\n/**\n * Use `Predicate` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nfunction not(predicate) {\n    return function (a) { return !predicate(a); };\n}\nexports.not = not;\n/**\n * Use `Endomorphism` module instead.\n *\n * @category instances\n * @since 2.10.0\n * @deprecated\n */\nvar getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\nexports.getEndomorphismMonoid = getEndomorphismMonoid;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sequenceS = exports.sequenceT = exports.getApplySemigroup = exports.apS = exports.apSecond = exports.apFirst = exports.ap = void 0;\nvar function_1 = require(\"./function\");\nfunction ap(F, G) {\n    return function (fa) { return function (fab) {\n        return F.ap(F.map(fab, function (gab) { return function (ga) { return G.ap(gab, ga); }; }), fa);\n    }; };\n}\nexports.ap = ap;\nfunction apFirst(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function (a) { return function () { return a; }; }), second);\n    }; };\n}\nexports.apFirst = apFirst;\nfunction apSecond(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function () { return function (b) { return b; }; }), second);\n    }; };\n}\nexports.apSecond = apSecond;\nfunction apS(F) {\n    return function (name, fb) { return function (fa) {\n        return F.ap(F.map(fa, function (a) { return function (b) {\n            var _a;\n            return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n        }; }), fb);\n    }; };\n}\nexports.apS = apS;\nfunction getApplySemigroup(F) {\n    return function (S) { return ({\n        concat: function (first, second) {\n            return F.ap(F.map(first, function (x) { return function (y) { return S.concat(x, y); }; }), second);\n        }\n    }); };\n}\nexports.getApplySemigroup = getApplySemigroup;\nfunction curried(f, n, acc) {\n    return function (x) {\n        var combined = Array(acc.length + 1);\n        for (var i = 0; i < acc.length; i++) {\n            combined[i] = acc[i];\n        }\n        combined[acc.length] = x;\n        return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);\n    };\n}\nvar tupleConstructors = {\n    1: function (a) { return [a]; },\n    2: function (a) { return function (b) { return [a, b]; }; },\n    3: function (a) { return function (b) { return function (c) { return [a, b, c]; }; }; },\n    4: function (a) { return function (b) { return function (c) { return function (d) { return [a, b, c, d]; }; }; }; },\n    5: function (a) { return function (b) { return function (c) { return function (d) { return function (e) { return [a, b, c, d, e]; }; }; }; }; }\n};\nfunction getTupleConstructor(len) {\n    if (!tupleConstructors.hasOwnProperty(len)) {\n        tupleConstructors[len] = curried(function_1.tuple, len - 1, []);\n    }\n    return tupleConstructors[len];\n}\nfunction sequenceT(F) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var len = args.length;\n        var f = getTupleConstructor(len);\n        var fas = F.map(args[0], f);\n        for (var i = 1; i < len; i++) {\n            fas = F.ap(fas, args[i]);\n        }\n        return fas;\n    };\n}\nexports.sequenceT = sequenceT;\nfunction getRecordConstructor(keys) {\n    var len = keys.length;\n    switch (len) {\n        case 1:\n            return function (a) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a);\n            };\n        case 2:\n            return function (a) { return function (b) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a);\n            }; };\n        case 3:\n            return function (a) { return function (b) { return function (c) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a);\n            }; }; };\n        case 4:\n            return function (a) { return function (b) { return function (c) { return function (d) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a);\n            }; }; }; };\n        case 5:\n            return function (a) { return function (b) { return function (c) { return function (d) { return function (e) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a[keys[4]] = e,\n                    _a);\n            }; }; }; }; };\n        default:\n            return curried(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var r = {};\n                for (var i = 0; i < len; i++) {\n                    r[keys[i]] = args[i];\n                }\n                return r;\n            }, len - 1, []);\n    }\n}\nfunction sequenceS(F) {\n    return function (r) {\n        var keys = Object.keys(r);\n        var len = keys.length;\n        var f = getRecordConstructor(keys);\n        var fr = F.map(r[keys[0]], f);\n        for (var i = 1; i < len; i++) {\n            fr = F.ap(fr, r[keys[i]]);\n        }\n        return fr;\n    };\n}\nexports.sequenceS = sequenceS;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFunctorComposition = exports.bindTo = exports.flap = exports.map = void 0;\n/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nfunction map(F, G) {\n    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };\n}\nexports.map = map;\nfunction flap(F) {\n    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };\n}\nexports.flap = flap;\nfunction bindTo(F) {\n    return function (name) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return (_a = {}, _a[name] = a, _a);\n    }); }; };\n}\nexports.bindTo = bindTo;\n/** @deprecated */\nfunction getFunctorComposition(F, G) {\n    var _map = map(F, G);\n    return {\n        map: function (fga, f) { return function_1.pipe(fga, _map(f)); }\n    };\n}\nexports.getFunctorComposition = getFunctorComposition;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getApplicativeComposition = exports.getApplicativeMonoid = void 0;\n/**\n * The `Applicative` type class extends the `Apply` type class with a `of` function, which can be used to create values\n * of type `f a` from values of type `a`.\n *\n * Where `Apply` provides the ability to lift functions of two or more arguments to functions whose arguments are\n * wrapped using `f`, and `Functor` provides the ability to lift functions of one argument, `pure` can be seen as the\n * function which lifts functions of _zero_ arguments. That is, `Applicative` functors support a lifting operation for\n * any number of function arguments.\n *\n * Instances must satisfy the following laws in addition to the `Apply` laws:\n *\n * 1. Identity: `A.ap(A.of(a => a), fa) <-> fa`\n * 2. Homomorphism: `A.ap(A.of(ab), A.of(a)) <-> A.of(ab(a))`\n * 3. Interchange: `A.ap(fab, A.of(a)) <-> A.ap(A.of(ab => ab(a)), fab)`\n *\n * Note. `Functor`'s `map` can be derived: `A.map(x, f) = A.ap(A.of(f), x)`\n *\n * @since 2.0.0\n */\nvar Apply_1 = require(\"./Apply\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nfunction getApplicativeMonoid(F) {\n    var f = Apply_1.getApplySemigroup(F);\n    return function (M) { return ({\n        concat: f(M).concat,\n        empty: F.of(M.empty)\n    }); };\n}\nexports.getApplicativeMonoid = getApplicativeMonoid;\n/** @deprecated */\nfunction getApplicativeComposition(F, G) {\n    var map = Functor_1.getFunctorComposition(F, G).map;\n    var _ap = Apply_1.ap(F, G);\n    return {\n        map: map,\n        of: function (a) { return F.of(G.of(a)); },\n        ap: function (fgab, fga) { return function_1.pipe(fgab, _ap(fga)); }\n    };\n}\nexports.getApplicativeComposition = getApplicativeComposition;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bind = exports.chainFirst = void 0;\nfunction chainFirst(M) {\n    return function (f) { return function (first) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); }; };\n}\nexports.chainFirst = chainFirst;\nfunction bind(M) {\n    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n    }); }); }; };\n}\nexports.bind = bind;\n","\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromReadonlyNonEmptyArray = exports.has = exports.emptyRecord = exports.emptyReadonlyArray = exports.tail = exports.head = exports.isNonEmpty = exports.singleton = exports.right = exports.left = exports.isRight = exports.isLeft = exports.some = exports.none = exports.isSome = exports.isNone = void 0;\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n/** @internal */\nvar isSome = function (fa) { return fa._tag === 'Some'; };\nexports.isSome = isSome;\n/** @internal */\nexports.none = { _tag: 'None' };\n/** @internal */\nvar some = function (a) { return ({ _tag: 'Some', value: a }); };\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isLeft = function (ma) { return ma._tag === 'Left'; };\nexports.isLeft = isLeft;\n/** @internal */\nvar isRight = function (ma) { return ma._tag === 'Right'; };\nexports.isRight = isRight;\n/** @internal */\nvar left = function (e) { return ({ _tag: 'Left', left: e }); };\nexports.left = left;\n/** @internal */\nvar right = function (a) { return ({ _tag: 'Right', right: a }); };\nexports.right = right;\n// -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar singleton = function (a) { return [a]; };\nexports.singleton = singleton;\n/** @internal */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/** @internal */\nvar head = function (as) { return as[0]; };\nexports.head = head;\n/** @internal */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n// -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.emptyReadonlyArray = [];\n/** @internal */\nexports.emptyRecord = {};\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1)); };\nexports.fromReadonlyNonEmptyArray = fromReadonlyNonEmptyArray;\n","\"use strict\";\n/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterOrElse = exports.chainFirstEitherK = exports.chainEitherK = exports.fromEitherK = exports.chainOptionK = exports.fromOptionK = exports.fromPredicate = exports.fromOption = void 0;\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nfunction fromOption(F) {\n    return function (onNone) { return function (ma) { return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value)); }; };\n}\nexports.fromOption = fromOption;\nfunction fromPredicate(F) {\n    return function (predicate, onFalse) { return function (a) {\n        return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n    }; };\n}\nexports.fromPredicate = fromPredicate;\nfunction fromOptionK(F) {\n    var fromOptionF = fromOption(F);\n    return function (onNone) {\n        var from = fromOptionF(onNone);\n        return function (f) { return function_1.flow(f, from); };\n    };\n}\nexports.fromOptionK = fromOptionK;\nfunction chainOptionK(F, M) {\n    var fromOptionKF = fromOptionK(F);\n    return function (onNone) {\n        var from = fromOptionKF(onNone);\n        return function (f) { return function (ma) { return M.chain(ma, from(f)); }; };\n    };\n}\nexports.chainOptionK = chainOptionK;\nfunction fromEitherK(F) {\n    return function (f) { return function_1.flow(f, F.fromEither); };\n}\nexports.fromEitherK = fromEitherK;\nfunction chainEitherK(F, M) {\n    var fromEitherKF = fromEitherK(F);\n    return function (f) { return function (ma) { return M.chain(ma, fromEitherKF(f)); }; };\n}\nexports.chainEitherK = chainEitherK;\nfunction chainFirstEitherK(F, M) {\n    return function_1.flow(fromEitherK(F), Chain_1.chainFirst(M));\n}\nexports.chainFirstEitherK = chainFirstEitherK;\nfunction filterOrElse(F, M) {\n    return function (predicate, onFalse) { return function (ma) {\n        return M.chain(ma, function (a) { return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a))); });\n    }; };\n}\nexports.filterOrElse = filterOrElse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.and = exports.or = exports.not = exports.Contravariant = exports.getMonoidAll = exports.getSemigroupAll = exports.getMonoidAny = exports.getSemigroupAny = exports.URI = exports.contramap = void 0;\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\nvar contramap_ = function (predicate, f) { return function_1.pipe(predicate, exports.contramap(f)); };\n/**\n * @category Contravariant\n * @since 2.11.0\n */\nvar contramap = function (f) { return function (predicate) { return function_1.flow(f, predicate); }; };\nexports.contramap = contramap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.URI = 'Predicate';\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getSemigroupAny = function () { return ({\n    concat: function (first, second) { return function_1.pipe(first, exports.or(second)); }\n}); };\nexports.getSemigroupAny = getSemigroupAny;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getMonoidAny = function () { return ({\n    concat: exports.getSemigroupAny().concat,\n    empty: function_1.constFalse\n}); };\nexports.getMonoidAny = getMonoidAny;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getSemigroupAll = function () { return ({\n    concat: function (first, second) { return function_1.pipe(first, exports.and(second)); }\n}); };\nexports.getSemigroupAll = getSemigroupAll;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getMonoidAll = function () { return ({\n    concat: exports.getSemigroupAll().concat,\n    empty: function_1.constTrue\n}); };\nexports.getMonoidAll = getMonoidAll;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nvar not = function (predicate) { return function (a) { return !predicate(a); }; };\nexports.not = not;\n/**\n * @since 2.11.0\n */\nvar or = function (second) { return function (first) { return function (a) { return first(a) || second(a); }; }; };\nexports.or = or;\n/**\n * @since 2.11.0\n */\nvar and = function (second) { return function (first) { return function (a) { return first(a) && second(a); }; }; };\nexports.and = and;\n","\"use strict\";\n/**\n * A `Magma` is a pair `(A, concat)` in which `A` is a non-empty set and `concat` is a binary operation on `A`\n *\n * See [Semigroup](https://gcanti.github.io/fp-ts/modules/Semigroup.ts.html) for some instances.\n *\n * @since 2.0.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.concatAll = exports.endo = exports.filterSecond = exports.filterFirst = exports.reverse = void 0;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Magma`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse, concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(reverse(N.MagmaSub))(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), 2)\n *\n * @category combinators\n * @since 2.11.0\n */\nvar reverse = function (M) { return ({\n    concat: function (first, second) { return M.concat(second, first); }\n}); };\nexports.reverse = reverse;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar filterFirst = function (predicate) { return function (M) { return ({\n    concat: function (first, second) { return (predicate(first) ? M.concat(first, second) : second); }\n}); }; };\nexports.filterFirst = filterFirst;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar filterSecond = function (predicate) { return function (M) { return ({\n    concat: function (first, second) { return (predicate(second) ? M.concat(first, second) : first); }\n}); }; };\nexports.filterSecond = filterSecond;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar endo = function (f) { return function (M) { return ({\n    concat: function (first, second) { return M.concat(f(first), f(second)); }\n}); }; };\nexports.endo = endo;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(N.MagmaSub)(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), -6)\n *\n * @since 2.11.0\n */\nvar concatAll = function (M) { return function (startWith) { return function (as) {\n    return as.reduce(function (a, acc) { return M.concat(a, acc); }, startWith);\n}; }; };\nexports.concatAll = concatAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.eqDate = exports.eqNumber = exports.eqString = exports.eqBoolean = exports.eq = exports.strictEqual = exports.getStructEq = exports.getTupleEq = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.eqStrict = exports.URI = exports.contramap = exports.tuple = exports.struct = exports.fromEquals = void 0;\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromEquals = function (equals) { return ({\n    equals: function (x, y) { return x === y || equals(x, y); }\n}); };\nexports.fromEquals = fromEquals;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar struct = function (eqs) {\n    return exports.fromEquals(function (first, second) {\n        for (var key in eqs) {\n            if (!eqs[key].equals(first[key], second[key])) {\n                return false;\n            }\n        }\n        return true;\n    });\n};\nexports.struct = struct;\n/**\n * Given a tuple of `Eq`s returns a `Eq` for the tuple\n *\n * @example\n * import { tuple } from 'fp-ts/Eq'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import * as B from 'fp-ts/boolean'\n *\n * const E = tuple(S.Eq, N.Eq, B.Eq)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, true]), true)\n * assert.strictEqual(E.equals(['a', 1, true], ['b', 1, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 2, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, false]), false)\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var eqs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        eqs[_i] = arguments[_i];\n    }\n    return exports.fromEquals(function (first, second) { return eqs.every(function (E, i) { return E.equals(first[i], second[i]); }); });\n};\nexports.tuple = tuple;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return function_1.pipe(fa, exports.contramap(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return exports.fromEquals(function (x, y) { return fa.equals(f(x), f(y)); });\n}; };\nexports.contramap = contramap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Eq';\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.eqStrict = {\n    equals: function (a, b) { return a === b; }\n};\nvar empty = {\n    equals: function () { return true; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (x, y) { return exports.fromEquals(function (a, b) { return x.equals(a, b) && y.equals(a, b); }); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @category instances\n * @since 2.6.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: empty\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleEq = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructEq = exports.struct;\n/**\n * Use [`eqStrict`](#eqstrict) instead\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.strictEqual = exports.eqStrict.equals;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eq = exports.Contravariant;\n/**\n * Use [`Eq`](./boolean.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqBoolean = exports.eqStrict;\n/**\n * Use [`Eq`](./string.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqString = exports.eqStrict;\n/**\n * Use [`Eq`](./number.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqNumber = exports.eqStrict;\n/**\n * Use [`Eq`](./Date.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqDate = {\n    equals: function (first, second) { return first.valueOf() === second.valueOf(); }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ordDate = exports.ordNumber = exports.ordString = exports.ordBoolean = exports.ord = exports.getDualOrd = exports.getTupleOrd = exports.between = exports.clamp = exports.max = exports.min = exports.geq = exports.leq = exports.gt = exports.lt = exports.equals = exports.trivial = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.URI = exports.contramap = exports.reverse = exports.tuple = exports.fromCompare = exports.equalsDefault = void 0;\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// defaults\n// -------------------------------------------------------------------------------------\n/**\n * @category defaults\n * @since 2.10.0\n */\nvar equalsDefault = function (compare) { return function (first, second) {\n    return first === second || compare(first, second) === 0;\n}; };\nexports.equalsDefault = equalsDefault;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromCompare = function (compare) { return ({\n    equals: exports.equalsDefault(compare),\n    compare: function (first, second) { return (first === second ? 0 : compare(first, second)); }\n}); };\nexports.fromCompare = fromCompare;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Ord'\n * import * as B from 'fp-ts/boolean'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n *\n * const O = tuple(S.Ord, N.Ord, B.Ord)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var ords = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ords[_i] = arguments[_i];\n    }\n    return exports.fromCompare(function (first, second) {\n        var i = 0;\n        for (; i < ords.length - 1; i++) {\n            var r = ords[i].compare(first[i], second[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return ords[i].compare(first[i], second[i]);\n    });\n};\nexports.tuple = tuple;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar reverse = function (O) { return exports.fromCompare(function (first, second) { return O.compare(second, first); }); };\nexports.reverse = reverse;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return function_1.pipe(fa, exports.contramap(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return exports.fromCompare(function (first, second) { return fa.compare(f(first), f(second)); });\n}; };\nexports.contramap = contramap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Ord';\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) {\n        return exports.fromCompare(function (a, b) {\n            var ox = first.compare(a, b);\n            return ox !== 0 ? ox : second.compare(a, b);\n        });\n    }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, reverse, getMonoid } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as B from 'fp-ts/boolean'\n * import { pipe } from 'fp-ts/function'\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface User {\n *   readonly id: number\n *   readonly name: string\n *   readonly age: number\n *   readonly rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   S.Ord,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   N.Ord,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   B.Ord,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = concatAll(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = concatAll(M)([reverse(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: exports.fromCompare(function () { return 0; })\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexports.trivial = {\n    equals: function_1.constTrue,\n    compare: \n    /*#__PURE__*/\n    function_1.constant(0)\n};\n/**\n * @since 2.11.0\n */\nvar equals = function (O) { return function (second) { return function (first) {\n    return first === second || O.compare(first, second) === 0;\n}; }; };\nexports.equals = equals;\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\nvar lt = function (O) { return function (first, second) { return O.compare(first, second) === -1; }; };\nexports.lt = lt;\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\nvar gt = function (O) { return function (first, second) { return O.compare(first, second) === 1; }; };\nexports.gt = gt;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\nvar leq = function (O) { return function (first, second) { return O.compare(first, second) !== 1; }; };\nexports.leq = leq;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\nvar geq = function (O) { return function (first, second) { return O.compare(first, second) !== -1; }; };\nexports.geq = geq;\n// TODO: curry in v3\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nvar min = function (O) { return function (first, second) {\n    return first === second || O.compare(first, second) < 1 ? first : second;\n}; };\nexports.min = min;\n// TODO: curry in v3\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nvar max = function (O) { return function (first, second) {\n    return first === second || O.compare(first, second) > -1 ? first : second;\n}; };\nexports.max = max;\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\nvar clamp = function (O) {\n    var minO = exports.min(O);\n    var maxO = exports.max(O);\n    return function (low, hi) { return function (a) { return maxO(minO(a, hi), low); }; };\n};\nexports.clamp = clamp;\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\nvar between = function (O) {\n    var ltO = exports.lt(O);\n    var gtO = exports.gt(O);\n    return function (low, hi) { return function (a) { return (ltO(a, low) || gtO(a, hi) ? false : true); }; };\n};\nexports.between = between;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleOrd = exports.tuple;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualOrd = exports.reverse;\n/**\n * Use [`Contravariant`](#contravariant) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ord = exports.Contravariant;\n// default compare for primitive types\nfunction compare(first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n}\nvar strictOrd = {\n    equals: Eq_1.eqStrict.equals,\n    compare: compare\n};\n/**\n * Use [`Ord`](./boolean.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordBoolean = strictOrd;\n/**\n * Use [`Ord`](./string.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordString = strictOrd;\n/**\n * Use [`Ord`](./number.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordNumber = strictOrd;\n/**\n * Use [`Ord`](./Date.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordDate = \n/*#__PURE__*/\nfunction_1.pipe(exports.ordNumber, \n/*#__PURE__*/\nexports.contramap(function (date) { return date.valueOf(); }));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.semigroupProduct = exports.semigroupSum = exports.semigroupString = exports.getFunctionSemigroup = exports.semigroupAny = exports.semigroupAll = exports.fold = exports.getIntercalateSemigroup = exports.getMeetSemigroup = exports.getJoinSemigroup = exports.getDualSemigroup = exports.getStructSemigroup = exports.getTupleSemigroup = exports.getFirstSemigroup = exports.getLastSemigroup = exports.getObjectSemigroup = exports.semigroupVoid = exports.concatAll = exports.last = exports.first = exports.intercalate = exports.tuple = exports.struct = exports.reverse = exports.constant = exports.max = exports.min = void 0;\n/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nvar M = __importStar(require(\"./Magma\"));\nvar Or = __importStar(require(\"./Ord\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.min(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar min = function (O) { return ({\n    concat: Or.min(O)\n}); };\nexports.min = min;\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.max(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar max = function (O) { return ({\n    concat: Or.max(O)\n}); };\nexports.max = max;\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar constant = function (a) { return ({\n    concat: function () { return a; }\n}); };\nexports.constant = constant;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Semigroup).concat('a', 'b'), 'ba')\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.reverse = M.reverse;\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const S = struct<Point>({\n *   x: N.SemigroupSum,\n *   y: N.SemigroupSum\n * })\n *\n * assert.deepStrictEqual(S.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @category combinators\n * @since 2.10.0\n */\nvar struct = function (semigroups) { return ({\n    concat: function (first, second) {\n        var r = {};\n        for (var k in semigroups) {\n            if (_.has.call(semigroups, k)) {\n                r[k] = semigroups[k].concat(first[k], second[k]);\n            }\n        }\n        return r;\n    }\n}); };\nexports.struct = struct;\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Semigroup'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const S1 = tuple(S.Semigroup, N.SemigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = tuple(S.Semigroup, N.SemigroupSum, B.SemigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var semigroups = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        semigroups[_i] = arguments[_i];\n    }\n    return ({\n        concat: function (first, second) { return semigroups.map(function (s, i) { return s.concat(first[i], second[i]); }); }\n    });\n};\nexports.tuple = tuple;\n/**\n * Between each pair of elements insert `middle`.\n *\n * @example\n * import { intercalate } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * const S1 = pipe(S.Semigroup, intercalate(' + '))\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a + b')\n *\n * @category combinators\n * @since 2.10.0\n */\nvar intercalate = function (middle) { return function (S) { return ({\n    concat: function (x, y) { return S.concat(x, S.concat(middle, y)); }\n}); }; };\nexports.intercalate = intercalate;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.first<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nvar first = function () { return ({ concat: function_1.identity }); };\nexports.first = first;\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.last<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nvar last = function () { return ({ concat: function (_, y) { return y; } }); };\nexports.last = last;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * const sum = concatAll(N.SemigroupSum)(0)\n *\n * assert.deepStrictEqual(sum([1, 2, 3]), 6)\n * assert.deepStrictEqual(sum([]), 0)\n *\n * @since 2.10.0\n */\nexports.concatAll = M.concatAll;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `void` module instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupVoid = exports.constant(undefined);\n/**\n * Use [`getAssignSemigroup`](./struct.ts.html#getAssignSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getObjectSemigroup = function () { return ({\n    concat: function (first, second) { return Object.assign({}, first, second); }\n}); };\nexports.getObjectSemigroup = getObjectSemigroup;\n/**\n * Use [`last`](#last) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getLastSemigroup = exports.last;\n/**\n * Use [`first`](#first) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getFirstSemigroup = exports.first;\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleSemigroup = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructSemigroup = exports.struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualSemigroup = exports.reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.getJoinSemigroup = exports.max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.getMeetSemigroup = exports.min;\n/**\n * Use [`intercalate`](#intercalate) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nexports.getIntercalateSemigroup = exports.intercalate;\nfunction fold(S) {\n    var concatAllS = exports.concatAll(S);\n    return function (startWith, as) { return (as === undefined ? concatAllS(startWith) : concatAllS(startWith)(as)); };\n}\nexports.fold = fold;\n/**\n * Use [`SemigroupAll`](./boolean.ts.html#SemigroupAll) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupAll = {\n    concat: function (x, y) { return x && y; }\n};\n/**\n * Use [`SemigroupAny`](./boolean.ts.html#SemigroupAny) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupAny = {\n    concat: function (x, y) { return x || y; }\n};\n/**\n * Use [`getSemigroup`](./function.ts.html#getSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getFunctionSemigroup = function_1.getSemigroup;\n/**\n * Use [`Semigroup`](./string.ts.html#Semigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupString = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupSum`](./number.ts.html#SemigroupSum) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupSum = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupProduct`](./number.ts.html#SemigroupProduct) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupProduct = {\n    concat: function (x, y) { return x * y; }\n};\n","\"use strict\";\n/**\n * ```ts\n * interface Separated<E, A> {\n *    readonly left: E\n *    readonly right: A\n * }\n * ```\n *\n * Represents a result of separating a whole into two parts.\n *\n * @since 2.10.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.right = exports.left = exports.flap = exports.Functor = exports.Bifunctor = exports.URI = exports.bimap = exports.mapLeft = exports.map = exports.separated = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar separated = function (left, right) { return ({ left: left, right: right }); };\nexports.separated = separated;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapLeft(f)); };\nvar _bimap = function (fa, g, f) { return function_1.pipe(fa, exports.bimap(g, f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.10.0\n */\nvar map = function (f) { return function (fa) {\n    return exports.separated(exports.left(fa), f(exports.right(fa)));\n}; };\nexports.map = map;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\nvar mapLeft = function (f) { return function (fa) {\n    return exports.separated(f(exports.left(fa)), exports.right(fa));\n}; };\nexports.mapLeft = mapLeft;\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\nvar bimap = function (f, g) { return function (fa) {\n    return exports.separated(f(exports.left(fa)), g(exports.right(fa)));\n}; };\nexports.bimap = bimap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.URI = 'Separated';\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    mapLeft: _mapLeft,\n    bimap: _bimap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nvar left = function (s) { return s.left; };\nexports.left = left;\n/**\n * @since 2.10.0\n */\nvar right = function (s) { return s.right; };\nexports.right = right;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterE = exports.witherDefault = exports.wiltDefault = void 0;\nvar _ = __importStar(require(\"./internal\"));\nfunction wiltDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.separate); };\n    };\n}\nexports.wiltDefault = wiltDefault;\nfunction witherDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.compact); };\n    };\n}\nexports.witherDefault = witherDefault;\nfunction filterE(W) {\n    return function (F) {\n        var witherF = W.wither(F);\n        return function (predicate) { return function (ga) { return witherF(ga, function (a) { return F.map(predicate(a), function (b) { return (b ? _.some(a) : _.none); }); }); }; };\n    };\n}\nexports.filterE = filterE;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.guard = void 0;\nfunction guard(F, P) {\n    return function (b) { return (b ? P.of(undefined) : F.zero()); };\n}\nexports.guard = guard;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromEither = exports.MonadThrow = exports.throwError = exports.Witherable = exports.wilt = exports.wither = exports.Traversable = exports.sequence = exports.traverse = exports.Filterable = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = exports.Compactable = exports.separate = exports.compact = exports.Extend = exports.extend = exports.Alternative = exports.guard = exports.Zero = exports.zero = exports.Alt = exports.alt = exports.altW = exports.Foldable = exports.reduceRight = exports.foldMap = exports.reduce = exports.Monad = exports.Chain = exports.chain = exports.Applicative = exports.Apply = exports.ap = exports.Pointed = exports.of = exports.Functor = exports.map = exports.getMonoid = exports.getOrd = exports.getEq = exports.getShow = exports.URI = exports.getRight = exports.getLeft = exports.fromPredicate = exports.some = exports.none = void 0;\nexports.getLastMonoid = exports.getFirstMonoid = exports.getApplyMonoid = exports.getApplySemigroup = exports.option = exports.mapNullable = exports.getRefinement = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex = exports.traverseReadonlyNonEmptyArrayWithIndex = exports.ApT = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.exists = exports.elem = exports.toUndefined = exports.toNullable = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.chainFirstEitherK = exports.chainEitherK = exports.fromEitherK = exports.duplicate = exports.chainFirst = exports.flatten = exports.apSecond = exports.apFirst = exports.flap = exports.getOrElse = exports.getOrElseW = exports.fold = exports.match = exports.foldW = exports.matchW = exports.isNone = exports.isSome = exports.FromEither = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Predicate_1 = require(\"./Predicate\");\nvar Semigroup_1 = require(\"./Semigroup\");\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\nvar Zero_1 = require(\"./Zero\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.none = _.none;\n/**\n * Constructs a `Some`. Represents an optional value that exists.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.some = _.some;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? exports.some(a) : exports.none); };\n}\nexports.fromPredicate = fromPredicate;\n/**\n * Returns the `Left` value of an `Either` if possible.\n *\n * @example\n * import { getLeft, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n *\n * @category constructors\n * @since 2.0.0\n */\nvar getLeft = function (ma) { return (ma._tag === 'Right' ? exports.none : exports.some(ma.left)); };\nexports.getLeft = getLeft;\n/**\n * Returns the `Right` value of an `Either` if possible.\n *\n * @example\n * import { getRight, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(left('a')), none)\n *\n * @category constructors\n * @since 2.0.0\n */\nvar getRight = function (ma) { return (ma._tag === 'Left' ? exports.none : exports.some(ma.right)); };\nexports.getRight = getRight;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar _filter = function (fa, predicate) { return function_1.pipe(fa, exports.filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return function_1.pipe(fa, exports.partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getShow = function (S) { return ({\n    show: function (ma) { return (exports.isNone(ma) ? 'none' : \"some(\" + S.show(ma.value) + \")\"); }\n}); };\nexports.getShow = getShow;\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\nvar getEq = function (E) { return ({\n    equals: function (x, y) { return x === y || (exports.isNone(x) ? exports.isNone(y) : exports.isNone(y) ? false : E.equals(x.value, y.value)); }\n}); };\nexports.getEq = getEq;\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const O = getOrd(N.Ord)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\nvar getOrd = function (O) { return ({\n    equals: exports.getEq(O).equals,\n    compare: function (x, y) { return (x === y ? 0 : exports.isSome(x) ? (exports.isSome(y) ? O.compare(x.value, y.value) : 1) : -1); }\n}); };\nexports.getOrd = getOrd;\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(b) | some(b)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const M = getMonoid(SemigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nvar getMonoid = function (S) { return ({\n    concat: function (x, y) { return (exports.isNone(x) ? y : exports.isNone(y) ? x : exports.some(S.concat(x.value, y.value))); },\n    empty: exports.none\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) {\n    return exports.isNone(fa) ? exports.none : exports.some(f(fa.value));\n}; };\nexports.map = map;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nexports.of = exports.some;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar ap = function (fa) { return function (fab) {\n    return exports.isNone(fab) ? exports.none : exports.isNone(fa) ? exports.none : exports.some(fab.value(fa.value));\n}; };\nexports.ap = ap;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category instance operations\n * @since 2.0.0\n */\nvar chain = function (f) { return function (ma) {\n    return exports.isNone(ma) ? exports.none : f(ma.value);\n}; };\nexports.chain = chain;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return exports.isNone(fa) ? b : f(b, fa.value);\n}; };\nexports.reduce = reduce;\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) { return function (fa) {\n    return exports.isNone(fa) ? M.empty : f(fa.value);\n}; }; };\nexports.foldMap = foldMap;\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return exports.isNone(fa) ? b : f(fa.value, b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category instance operations\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) {\n    return exports.isNone(fa) ? that() : fa;\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Option` returns the left-most non-`None` value.\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('a')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('b')\n * )\n *\n * @category instance operations\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nvar zero = function () { return exports.none; };\nexports.zero = zero;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Zero = {\n    URI: exports.URI,\n    zero: exports.zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\nexports.guard = \n/*#__PURE__*/\nZero_1.guard(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return exports.isNone(wa) ? exports.none : exports.some(f(wa));\n}; };\nexports.extend = extend;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexports.compact = \n/*#__PURE__*/\nexports.chain(function_1.identity);\nvar defaultSeparated = \n/*#__PURE__*/\nSeparated_1.separated(exports.none, exports.none);\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar separate = function (ma) {\n    return exports.isNone(ma) ? defaultSeparated : Separated_1.separated(exports.getLeft(ma.value), exports.getRight(ma.value));\n};\nexports.separate = separate;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar filter = function (predicate) { return function (fa) { return (exports.isNone(fa) ? exports.none : predicate(fa.value) ? fa : exports.none); }; };\nexports.filter = filter;\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar filterMap = function (f) { return function (fa) {\n    return exports.isNone(fa) ? exports.none : f(fa.value);\n}; };\nexports.filterMap = filterMap;\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar partition = function (predicate) { return function (fa) { return Separated_1.separated(_filter(fa, Predicate_1.not(predicate)), _filter(fa, predicate)); }; };\nexports.partition = partition;\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar partitionMap = function (f) { return function_1.flow(exports.map(f), exports.separate); };\nexports.partitionMap = partitionMap;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instance operations\n * @since 2.6.3\n */\nvar traverse = function (F) { return function (f) { return function (ta) { return (exports.isNone(ta) ? F.of(exports.none) : F.map(f(ta.value), exports.some)); }; }; };\nexports.traverse = traverse;\n/**\n * @category instance operations\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) { return (exports.isNone(ta) ? F.of(exports.none) : F.map(ta.value, exports.some)); }; };\nexports.sequence = sequence;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\nvar _wither = \n/*#__PURE__*/\nWitherable_1.witherDefault(exports.Traversable, exports.Compactable);\nvar _wilt = \n/*#__PURE__*/\nWitherable_1.wiltDefault(exports.Traversable, exports.Compactable);\n/**\n * @category instance operations\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\nexports.wither = wither;\n/**\n * @category instance operations\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\nexports.wilt = wilt;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nvar throwError = function () { return exports.none; };\nexports.throwError = throwError;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    throwError: exports.throwError\n};\n/**\n * Transforms an `Either` to an `Option` discarding the error.\n *\n * Alias of [getRight](#getright)\n *\n * @category natural transformations\n * @since 2.0.0\n */\nexports.fromEither = exports.getRight;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise.\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isSome = _.isSome;\n/**\n * Returns `true` if the option is `None`, `false` otherwise.\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchW = function (onNone, onSome) { return function (ma) {\n    return exports.isNone(ma) ? onNone() : onSome(ma.value);\n}; };\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, match } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\nvar getOrElseW = function (onNone) { return function (ma) { return (exports.isNone(ma) ? onNone() : ma.value); }; };\nexports.getOrElseW = getOrElseW;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.getOrElse = exports.getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = exports.compact;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.fromEitherK = \n/*#__PURE__*/\nFromEither_1.fromEitherK(exports.FromEither);\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.chainEitherK = \n/*#__PURE__*/\nFromEither_1.chainEitherK(exports.FromEither, exports.Chain);\n/**\n * @category combinators\n * @since 2.12.0\n */\nexports.chainFirstEitherK = \n/*#__PURE__*/\nFromEither_1.chainFirstEitherK(exports.FromEither, exports.Chain);\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar fromNullable = function (a) { return (a == null ? exports.none : exports.some(a)); };\nexports.fromNullable = fromNullable;\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a\n * `Some`.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f) {\n    try {\n        return exports.some(f());\n    }\n    catch (e) {\n        return exports.none;\n    }\n};\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Option`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return exports.tryCatch(function () { return f.apply(void 0, a); });\n}; };\nexports.tryCatchK = tryCatchK;\n/**\n * Returns a *smart constructor* from a function that returns a nullable value.\n *\n * @example\n * import { fromNullableK, none, some } from 'fp-ts/Option'\n *\n * const f = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const g = fromNullableK(f)\n *\n * assert.deepStrictEqual(g('1'), some(1))\n * assert.deepStrictEqual(g('a'), none)\n *\n * @category interop\n * @since 2.9.0\n */\nvar fromNullableK = function (f) { return function_1.flow(f, exports.fromNullable); };\nexports.fromNullableK = fromNullableK;\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   readonly company?: {\n *     readonly address?: {\n *       readonly street?: {\n *         readonly name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category interop\n * @since 2.9.0\n */\nvar chainNullableK = function (f) { return function (ma) {\n    return exports.isNone(ma) ? exports.none : exports.fromNullable(f(ma.value));\n}; };\nexports.chainNullableK = chainNullableK;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category interop\n * @since 2.0.0\n */\nexports.toNullable = \n/*#__PURE__*/\nexports.match(function_1.constNull, function_1.identity);\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category interop\n * @since 2.0.0\n */\nexports.toUndefined = \n/*#__PURE__*/\nexports.match(function_1.constUndefined, function_1.identity);\nfunction elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return exports.isNone(ma) ? false : E.equals(a, ma.value);\n    };\n}\nexports.elem = elem;\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\nvar exists = function (predicate) { return function (ma) {\n    return exports.isNone(ma) ? false : predicate(ma.value);\n}; };\nexports.exists = exists;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// sequence T\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexports.ApT = \n/*#__PURE__*/\nexports.of(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nvar traverseReadonlyNonEmptyArrayWithIndex = function (f) { return function (as) {\n    var o = f(0, _.head(as));\n    if (exports.isNone(o)) {\n        return exports.none;\n    }\n    var out = [o.value];\n    for (var i = 1; i < as.length; i++) {\n        var o_1 = f(i, as[i]);\n        if (exports.isNone(o_1)) {\n            return exports.none;\n        }\n        out.push(o_1.value);\n    }\n    return exports.some(out);\n}; };\nexports.traverseReadonlyNonEmptyArrayWithIndex = traverseReadonlyNonEmptyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nvar traverseReadonlyArrayWithIndex = function (f) {\n    var g = exports.traverseReadonlyNonEmptyArrayWithIndex(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : exports.ApT); };\n};\nexports.traverseReadonlyArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * @since 2.9.0\n */\nexports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex;\n/**\n * @since 2.9.0\n */\nvar traverseArray = function (f) {\n    return exports.traverseReadonlyArrayWithIndex(function (_, a) { return f(a); });\n};\nexports.traverseArray = traverseArray;\n/**\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use `Refinement` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nfunction getRefinement(getOption) {\n    return function (a) { return exports.isSome(getOption(a)); };\n}\nexports.getRefinement = getRefinement;\n/**\n * Use [`chainNullableK`](#chainnullablek) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.mapNullable = exports.chainNullableK;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.option = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    zero: exports.zero,\n    alt: _alt,\n    extend: _extend,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/\nApply_1.getApplySemigroup(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/\nApplicative_1.getApplicativeMonoid(exports.Applicative);\n/**\n * Use\n *\n * ```ts\n * import { first } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(first())\n * ```\n *\n * instead.\n *\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getFirstMonoid = function () { return exports.getMonoid(Semigroup_1.first()); };\nexports.getFirstMonoid = getFirstMonoid;\n/**\n * Use\n *\n * ```ts\n * import { last } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(last())\n * ```\n *\n * instead.\n *\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getLastMonoid = function () { return exports.getMonoid(Semigroup_1.last()); };\nexports.getLastMonoid = getLastMonoid;\n","import { Type } from \"./model/type\";\nimport { KnownMoves, Pokemon } from \"./model/pokemon\";\nimport { none } from \"fp-ts/lib/Option\";\n\nconst baseUrl = \"https://pokeapi.co/api/v2/\";\nconst typeEndpoint = \"type/\";\nconst pokemonEndpoint = \"pokemon/\";\nconst pokemonListStartUrl: string = baseUrl + pokemonEndpoint + \"?limit=60\";\nconst typeListStartUrl: string = baseUrl + typeEndpoint + \"?limit=60\";\n\nclass RefValue {\n  name: string;\n  url: string;\n}\n\nclass ListApi {\n  name: string;\n  next?: string;\n  results: RefValue[];\n}\n\nfunction fromTypeApi(ta: TypeApi): Type {\n  return {\n    name: ta.name,\n    noDamageFrom: ta.damage_relations.no_damage_from.map((d) => d.name),\n    halfDamageFrom: ta.damage_relations.half_damage_from.map((d) => d.name),\n    doubleDamageFrom: ta.damage_relations.double_damage_from.map((d) => d.name),\n  } as Type;\n}\n\nfunction fromPokemonApi(pa: PokemonApi): Pokemon {\n  return {\n    name: pa.name,\n    types: pa.types.map((t) => t.type.name),\n    moves: pa.moves.map((t) => t.move.name),\n    knownMoves: {\n      move1: none,\n      move2: none,\n      move3: none,\n      move4: none,\n    } as KnownMoves,\n  } as Pokemon;\n}\n\nclass DamageRelationsApi {\n  no_damage_from: RefValue[];\n  half_damage_from: RefValue[];\n  double_damage_from: RefValue[];\n}\n\nclass TypeApi {\n  name: string;\n  damage_relations: DamageRelationsApi;\n}\n\nclass PokemonApi {\n  name: string;\n  types: { type: RefValue }[];\n  moves: { move: RefValue }[];\n}\n\nexport function getPokedex(\n  dex: string[] = [],\n  url: string = pokemonListStartUrl\n): Promise<string[]> {\n  return fetch(url)\n    .then((response) => response.json())\n    .then((soFar: ListApi) => {\n      let newNames = [];\n      if (soFar.results) {\n        newNames = soFar.results.map((rv) => rv.name);\n      }\n      const newDex = dex.concat(newNames);\n      if (soFar.next !== null) {\n        return getPokedex(newDex, soFar.next);\n      } else {\n        return newDex;\n      }\n    });\n}\n\nfunction getThinTypedex(\n  dex: string[] = [],\n  url: string = typeListStartUrl\n): Promise<string[]> {\n  const initResult: Promise<ListApi> = fetch(url).then((response) =>\n    response.json()\n  );\n  return initResult.then((soFar: ListApi) => {\n    let newNames = [];\n    if (soFar.results) {\n      newNames = soFar.results.map((rv) => rv.name);\n    }\n    const newDex = dex.concat(newNames);\n    if (soFar.next !== null) {\n      return getThinTypedex(newDex, soFar.next);\n    } else {\n      return newDex;\n    }\n  });\n}\n\nexport function getTypedex(): Promise<Type[]> {\n  return getThinTypedex()\n    .then((names: string[]) => {\n      const fullTypes: Promise<TypeApi>[] = names.map((name) => {\n        return fetch(baseUrl + typeEndpoint + name).then((r) => r.json());\n      });\n      return Promise.all(fullTypes);\n    })\n    .then((apiData: TypeApi[]) => {\n      return apiData.map(fromTypeApi);\n    });\n}\n\nexport function getPokemon(name: string): Promise<Pokemon> {\n  return fetch(baseUrl + pokemonEndpoint + name)\n    .then((response) => response.json())\n    .then(fromPokemonApi);\n}\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { Readable, Writable, derived, get, writable } from \"svelte/store\";\nimport { Config } from \"./config\";\nimport { Pokemon } from \"../model/pokemon\";\nimport { Type } from \"../model/type\";\nimport { none, Option } from \"fp-ts/lib/Option\";\n\nconst config: Writable<Config> = writable({\n  useUnknown: false,\n  useShadow: false,\n});\nconst team: Writable<Option<Pokemon>[]> = writable(Array(6).fill(none));\nconst typedexRaw: Writable<Type[]> = writable([]);\nconst typedex: Readable<Type[]> = derived(typedexRaw, (types: Type[]) => {\n  const c = get(config);\n  return types.filter((t) => {\n    return (\n      (t.name !== \"shadow\" || c.useShadow) &&\n      (t.name !== \"unknown\" || c.useUnknown)\n    );\n  });\n});\n\nconst thinPokedex: Writable<string[]> = writable([]);\n\nexport { config, team, typedexRaw, typedex, thinPokedex };\n","import {getPokedex, getTypedex} from './PokeApi';\nimport {thinPokedex, typedexRaw} from \"./components/store\";\n\ngetPokedex().then(thinPokedex.set);\ngetTypedex().then(typedexRaw.set);\n","/**\n * Simple, lightweight, usable local autocomplete library for modern browsers\n * Because there weren’t enough autocomplete scripts in the world? Because I’m completely insane and have NIH syndrome? Probably both. :P\n * @author Lea Verou http://leaverou.github.io/awesomplete\n * MIT license\n */\n\n(function () {\n\nvar _ = function (input, o) {\n\tvar me = this;\n\n    // Keep track of number of instances for unique IDs\n    _.count = (_.count || 0) + 1;\n    this.count = _.count;\n\n\t// Setup\n\n\tthis.isOpened = false;\n\n\tthis.input = $(input);\n\tthis.input.setAttribute(\"autocomplete\", \"off\");\n\tthis.input.setAttribute(\"aria-expanded\", \"false\");\n\tthis.input.setAttribute(\"aria-owns\", \"awesomplete_list_\" + this.count);\n\tthis.input.setAttribute(\"role\", \"combobox\");\n\n\t// store constructor options in case we need to distinguish\n\t// between default and customized behavior later on\n\tthis.options = o = o || {};\n\n\tconfigure(this, {\n\t\tminChars: 2,\n\t\tmaxItems: 10,\n\t\tautoFirst: false,\n\t\tdata: _.DATA,\n\t\tfilter: _.FILTER_CONTAINS,\n\t\tsort: o.sort === false ? false : _.SORT_BYLENGTH,\n\t\tcontainer: _.CONTAINER,\n\t\titem: _.ITEM,\n\t\treplace: _.REPLACE,\n\t\ttabSelect: false\n\t}, o);\n\n\tthis.index = -1;\n\n\t// Create necessary elements\n\n\tthis.container = this.container(input);\n\n\tthis.ul = $.create(\"ul\", {\n\t\thidden: \"hidden\",\n        role: \"listbox\",\n        id: \"awesomplete_list_\" + this.count,\n\t\tinside: this.container\n\t});\n\n\tthis.status = $.create(\"span\", {\n\t\tclassName: \"visually-hidden\",\n\t\trole: \"status\",\n\t\t\"aria-live\": \"assertive\",\n        \"aria-atomic\": true,\n        inside: this.container,\n        textContent: this.minChars != 0 ? (\"Type \" + this.minChars + \" or more characters for results.\") : \"Begin typing for results.\"\n\t});\n\n\t// Bind events\n\n\tthis._events = {\n\t\tinput: {\n\t\t\t\"input\": this.evaluate.bind(this),\n\t\t\t\"blur\": this.close.bind(this, { reason: \"blur\" }),\n\t\t\t\"keydown\": function(evt) {\n\t\t\t\tvar c = evt.keyCode;\n\n\t\t\t\t// If the dropdown `ul` is in view, then act on keydown for the following keys:\n\t\t\t\t// Enter / Esc / Up / Down\n\t\t\t\tif(me.opened) {\n\t\t\t\t\tif (c === 13 && me.selected) { // Enter\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\tme.select(undefined, undefined, evt);\n\t\t\t\t\t}\n\t\t\t\t\telse if (c === 9 && me.selected && me.tabSelect) {\n\t\t\t\t\t\tme.select(undefined, undefined, evt);\n\t\t\t\t\t}\n\t\t\t\t\telse if (c === 27) { // Esc\n\t\t\t\t\t\tme.close({ reason: \"esc\" });\n\t\t\t\t\t}\n\t\t\t\t\telse if (c === 38 || c === 40) { // Down/Up arrow\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\tme[c === 38? \"previous\" : \"next\"]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tform: {\n\t\t\t\"submit\": this.close.bind(this, { reason: \"submit\" })\n\t\t},\n\t\tul: {\n\t\t\t// Prevent the default mousedowm, which ensures the input is not blurred.\n\t\t\t// The actual selection will happen on click. This also ensures dragging the\n\t\t\t// cursor away from the list item will cancel the selection\n\t\t\t\"mousedown\": function(evt) {\n\t\t\t\tevt.preventDefault();\n\t\t\t},\n\t\t\t// The click event is fired even if the corresponding mousedown event has called preventDefault\n\t\t\t\"click\": function(evt) {\n\t\t\t\tvar li = evt.target;\n\n\t\t\t\tif (li !== this) {\n\n\t\t\t\t\twhile (li && !/li/i.test(li.nodeName)) {\n\t\t\t\t\t\tli = li.parentNode;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (li && evt.button === 0) {  // Only select on left click\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\tme.select(li, evt.target, evt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t$.bind(this.input, this._events.input);\n\t$.bind(this.input.form, this._events.form);\n\t$.bind(this.ul, this._events.ul);\n\n\tif (this.input.hasAttribute(\"list\")) {\n\t\tthis.list = \"#\" + this.input.getAttribute(\"list\");\n\t\tthis.input.removeAttribute(\"list\");\n\t}\n\telse {\n\t\tthis.list = this.input.getAttribute(\"data-list\") || o.list || [];\n\t}\n\n\t_.all.push(this);\n};\n\n_.prototype = {\n\tset list(list) {\n\t\tif (Array.isArray(list)) {\n\t\t\tthis._list = list;\n\t\t}\n\t\telse if (typeof list === \"string\" && list.indexOf(\",\") > -1) {\n\t\t\t\tthis._list = list.split(/\\s*,\\s*/);\n\t\t}\n\t\telse { // Element or CSS selector\n\t\t\tlist = $(list);\n\n\t\t\tif (list && list.children) {\n\t\t\t\tvar items = [];\n\t\t\t\tslice.apply(list.children).forEach(function (el) {\n\t\t\t\t\tif (!el.disabled) {\n\t\t\t\t\t\tvar text = el.textContent.trim();\n\t\t\t\t\t\tvar value = el.value || text;\n\t\t\t\t\t\tvar label = el.label || text;\n\t\t\t\t\t\tif (value !== \"\") {\n\t\t\t\t\t\t\titems.push({ label: label, value: value });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis._list = items;\n\t\t\t}\n\t\t}\n\n\t\tif (document.activeElement === this.input) {\n\t\t\tthis.evaluate();\n\t\t}\n\t},\n\n\tget selected() {\n\t\treturn this.index > -1;\n\t},\n\n\tget opened() {\n\t\treturn this.isOpened;\n\t},\n\n\tclose: function (o) {\n\t\tif (!this.opened) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.input.setAttribute(\"aria-expanded\", \"false\");\n\t\tthis.ul.setAttribute(\"hidden\", \"\");\n\t\tthis.isOpened = false;\n\t\tthis.index = -1;\n\n\t\tthis.status.setAttribute(\"hidden\", \"\");\n\n\t\t$.fire(this.input, \"awesomplete-close\", o || {});\n\t},\n\n\topen: function () {\n\t\tthis.input.setAttribute(\"aria-expanded\", \"true\");\n\t\tthis.ul.removeAttribute(\"hidden\");\n\t\tthis.isOpened = true;\n\n\t\tthis.status.removeAttribute(\"hidden\");\n\n\t\tif (this.autoFirst && this.index === -1) {\n\t\t\tthis.goto(0);\n\t\t}\n\n\t\t$.fire(this.input, \"awesomplete-open\");\n\t},\n\n\tdestroy: function() {\n\t\t//remove events from the input and its form\n\t\t$.unbind(this.input, this._events.input);\n\t\t$.unbind(this.input.form, this._events.form);\n\n\t\t// cleanup container if it was created by Awesomplete but leave it alone otherwise\n\t\tif (!this.options.container) {\n\t\t\t//move the input out of the awesomplete container and remove the container and its children\n\t\t\tvar parentNode = this.container.parentNode;\n\n\t\t\tparentNode.insertBefore(this.input, this.container);\n\t\t\tparentNode.removeChild(this.container);\n\t\t}\n\n\t\t//remove autocomplete and aria-autocomplete attributes\n\t\tthis.input.removeAttribute(\"autocomplete\");\n\t\tthis.input.removeAttribute(\"aria-autocomplete\");\n\n\t\t//remove this awesomeplete instance from the global array of instances\n\t\tvar indexOfAwesomplete = _.all.indexOf(this);\n\n\t\tif (indexOfAwesomplete !== -1) {\n\t\t\t_.all.splice(indexOfAwesomplete, 1);\n\t\t}\n\t},\n\n\tnext: function () {\n\t\tvar count = this.ul.children.length;\n\t\tthis.goto(this.index < count - 1 ? this.index + 1 : (count ? 0 : -1) );\n\t},\n\n\tprevious: function () {\n\t\tvar count = this.ul.children.length;\n\t\tvar pos = this.index - 1;\n\n\t\tthis.goto(this.selected && pos !== -1 ? pos : count - 1);\n\t},\n\n\t// Should not be used, highlights specific item without any checks!\n\tgoto: function (i) {\n\t\tvar lis = this.ul.children;\n\n\t\tif (this.selected) {\n\t\t\tlis[this.index].setAttribute(\"aria-selected\", \"false\");\n\t\t}\n\n\t\tthis.index = i;\n\n\t\tif (i > -1 && lis.length > 0) {\n\t\t\tlis[i].setAttribute(\"aria-selected\", \"true\");\n\n\t\t\tthis.status.textContent = lis[i].textContent + \", list item \" + (i + 1) + \" of \" + lis.length;\n\n            this.input.setAttribute(\"aria-activedescendant\", this.ul.id + \"_item_\" + this.index);\n\n\t\t\t// scroll to highlighted element in case parent's height is fixed\n\t\t\tthis.ul.scrollTop = lis[i].offsetTop - this.ul.clientHeight + lis[i].clientHeight;\n\n\t\t\t$.fire(this.input, \"awesomplete-highlight\", {\n\t\t\t\ttext: this.suggestions[this.index]\n\t\t\t});\n\t\t}\n\t},\n\n\tselect: function (selected, origin, originalEvent) {\n\t\tif (selected) {\n\t\t\tthis.index = $.siblingIndex(selected);\n\t\t} else {\n\t\t\tselected = this.ul.children[this.index];\n\t\t}\n\n\t\tif (selected) {\n\t\t\tvar suggestion = this.suggestions[this.index];\n\n\t\t\tvar allowed = $.fire(this.input, \"awesomplete-select\", {\n\t\t\t\ttext: suggestion,\n\t\t\t\torigin: origin || selected,\n\t\t\t\toriginalEvent: originalEvent\n\t\t\t});\n\n\t\t\tif (allowed) {\n\t\t\t\tthis.replace(suggestion);\n\t\t\t\tthis.close({ reason: \"select\" });\n\t\t\t\t$.fire(this.input, \"awesomplete-selectcomplete\", {\n\t\t\t\t\ttext: suggestion,\n\t\t\t\t\toriginalEvent: originalEvent\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\n\tevaluate: function() {\n\t\tvar me = this;\n\t\tvar value = this.input.value;\n\n\t\tif (value.length >= this.minChars && this._list && this._list.length > 0) {\n\t\t\tthis.index = -1;\n\t\t\t// Populate list with options that match\n\t\t\tthis.ul.innerHTML = \"\";\n\n\t\t\tthis.suggestions = this._list\n\t\t\t\t.map(function(item) {\n\t\t\t\t\treturn new Suggestion(me.data(item, value));\n\t\t\t\t})\n\t\t\t\t.filter(function(item) {\n\t\t\t\t\treturn me.filter(item, value);\n\t\t\t\t});\n\n\t\t\tif (this.sort !== false) {\n\t\t\t\tthis.suggestions = this.suggestions.sort(this.sort);\n\t\t\t}\n\n\t\t\tthis.suggestions = this.suggestions.slice(0, this.maxItems);\n\n\t\t\tthis.suggestions.forEach(function(text, index) {\n\t\t\t\t\tme.ul.appendChild(me.item(text, value, index));\n\t\t\t\t});\n\n\t\t\tif (this.ul.children.length === 0) {\n\n                this.status.textContent = \"No results found\";\n\n\t\t\t\tthis.close({ reason: \"nomatches\" });\n\n\t\t\t} else {\n\t\t\t\tthis.open();\n\n                this.status.textContent = this.ul.children.length + \" results found\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.close({ reason: \"nomatches\" });\n\n                this.status.textContent = \"No results found\";\n\t\t}\n\t}\n};\n\n// Static methods/properties\n\n_.all = [];\n\n_.FILTER_CONTAINS = function (text, input) {\n\treturn RegExp($.regExpEscape(input.trim()), \"i\").test(text);\n};\n\n_.FILTER_STARTSWITH = function (text, input) {\n\treturn RegExp(\"^\" + $.regExpEscape(input.trim()), \"i\").test(text);\n};\n\n_.SORT_BYLENGTH = function (a, b) {\n\tif (a.length !== b.length) {\n\t\treturn a.length - b.length;\n\t}\n\n\treturn a < b? -1 : 1;\n};\n\n_.CONTAINER = function (input) {\n\treturn $.create(\"div\", {\n\t\tclassName: \"awesomplete\",\n\t\taround: input\n\t});\n}\n\n_.ITEM = function (text, input, item_id) {\n\tvar html = input.trim() === \"\" ? text : text.replace(RegExp($.regExpEscape(input.trim()), \"gi\"), \"<mark>$&</mark>\");\n\treturn $.create(\"li\", {\n\t\tinnerHTML: html,\n\t\t\"role\": \"option\",\n\t\t\"aria-selected\": \"false\",\n\t\t\"id\": \"awesomplete_list_\" + this.count + \"_item_\" + item_id\n\t});\n};\n\n_.REPLACE = function (text) {\n\tthis.input.value = text.value;\n};\n\n_.DATA = function (item/*, input*/) { return item; };\n\n// Private functions\n\nfunction Suggestion(data) {\n\tvar o = Array.isArray(data)\n\t  ? { label: data[0], value: data[1] }\n\t  : typeof data === \"object\" && \"label\" in data && \"value\" in data ? data : { label: data, value: data };\n\n\tthis.label = o.label || o.value;\n\tthis.value = o.value;\n}\nObject.defineProperty(Suggestion.prototype = Object.create(String.prototype), \"length\", {\n\tget: function() { return this.label.length; }\n});\nSuggestion.prototype.toString = Suggestion.prototype.valueOf = function () {\n\treturn \"\" + this.label;\n};\n\nfunction configure(instance, properties, o) {\n\tfor (var i in properties) {\n\t\tvar initial = properties[i],\n\t\t    attrValue = instance.input.getAttribute(\"data-\" + i.toLowerCase());\n\n\t\tif (typeof initial === \"number\") {\n\t\t\tinstance[i] = parseInt(attrValue);\n\t\t}\n\t\telse if (initial === false) { // Boolean options must be false by default anyway\n\t\t\tinstance[i] = attrValue !== null;\n\t\t}\n\t\telse if (initial instanceof Function) {\n\t\t\tinstance[i] = null;\n\t\t}\n\t\telse {\n\t\t\tinstance[i] = attrValue;\n\t\t}\n\n\t\tif (!instance[i] && instance[i] !== 0) {\n\t\t\tinstance[i] = (i in o)? o[i] : initial;\n\t\t}\n\t}\n}\n\n// Helpers\n\nvar slice = Array.prototype.slice;\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nfunction $$(expr, con) {\n\treturn slice.call((con || document).querySelectorAll(expr));\n}\n\n$.create = function(tag, o) {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t\tif (ref.getAttribute(\"autofocus\") != null) {\n\t\t\t\tref.focus();\n\t\t\t}\n\t\t}\n\t\telse if (i in element) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\n$.bind = function(element, o) {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n};\n\n$.unbind = function(element, o) {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n};\n\n$.fire = function(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n};\n\n$.regExpEscape = function (s) {\n\treturn s.replace(/[-\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n};\n\n$.siblingIndex = function (el) {\n\t/* eslint-disable no-cond-assign */\n\tfor (var i = 0; el = el.previousElementSibling; i++);\n\treturn i;\n};\n\n// Initialization\n\nfunction init() {\n\t$$(\"input.awesomplete\").forEach(function (input) {\n\t\tnew _(input);\n\t});\n}\n\n// Make sure to export Awesomplete on self when in a browser\nif (typeof self !== \"undefined\") {\n\tself.Awesomplete = _;\n}\n\n// Are we in a browser? Check for Document constructor\nif (typeof Document !== \"undefined\") {\n\t// DOM already loaded?\n\tif (document.readyState !== \"loading\") {\n\t\tinit();\n\t}\n\telse {\n\t\t// Wait for it\n\t\tdocument.addEventListener(\"DOMContentLoaded\", init);\n\t}\n}\n\n_.$ = $;\n_.$$ = $$;\n\n// Expose Awesomplete as a CJS module\nif (typeof module === \"object\" && module.exports) {\n\tmodule.exports = _;\n}\n\nreturn _;\n\n}());\n","export { SvelteComponentDev as SvelteComponent, SvelteComponentTyped, afterUpdate, beforeUpdate, createEventDispatcher, getAllContexts, getContext, hasContext, onDestroy, onMount, setContext, tick } from './internal/index.mjs';\n","  export class AwesompleteEvent {\n    text: { label: string; value: string };\n    target: HTMLInputElement;\n  }","/* components/moves/Move.svelte generated by Svelte v3.48.0 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tattr,\n\tcomponent_subscribe,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tnoop,\n\tsafe_not_equal,\n\tset_data,\n\ttext\n} from \"svelte/internal\";\n\nimport Awesomplete from \"awesomplete\";\nimport { team } from \"../store\";\nimport { map, getOrElse, none, of, flatten, some } from \"fp-ts/lib/Option\";\nimport { derived } from \"svelte/store\";\nimport { pipe } from \"fp-ts/lib/function\";\nimport \"~typings/AwesomepleteEvent\";\nimport { beforeUpdate, onMount } from \"svelte\";\n\nfunction create_fragment(ctx) {\n\tlet label;\n\tlet t0;\n\tlet t1;\n\tlet input;\n\tlet input_placeholder_value;\n\n\treturn {\n\t\tc() {\n\t\t\tlabel = element(\"label\");\n\t\t\tt0 = text(\"move \");\n\t\t\tt1 = text(/*moveIndex*/ ctx[0]);\n\t\t\tinput = element(\"input\");\n\t\t\tattr(label, \"for\", /*moveId*/ ctx[3]);\n\t\t\tattr(input, \"id\", /*moveId*/ ctx[3]);\n\t\t\tattr(input, \"placeholder\", input_placeholder_value = \"move \" + /*moveIndex*/ ctx[0]);\n\t\t\tinput.value = /*selected*/ ctx[1];\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, label, anchor);\n\t\t\tappend(label, t0);\n\t\t\tappend(label, t1);\n\t\t\tinsert(target, input, anchor);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*moveIndex*/ 1) set_data(t1, /*moveIndex*/ ctx[0]);\n\n\t\t\tif (dirty & /*moveIndex*/ 1 && input_placeholder_value !== (input_placeholder_value = \"move \" + /*moveIndex*/ ctx[0])) {\n\t\t\t\tattr(input, \"placeholder\", input_placeholder_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*selected*/ 2 && input.value !== /*selected*/ ctx[1]) {\n\t\t\t\tinput.value = /*selected*/ ctx[1];\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(label);\n\t\t\tif (detaching) detach(input);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet $moves;\n\tlet { index } = $$props;\n\tlet { moveIndex } = $$props;\n\tlet mymon = derived(team, mons => mons[index]);\n\n\tlet moves = derived(mymon, mon => {\n\t\treturn pipe(mon, map(m => m.moves), getOrElse(() => []));\n\t});\n\n\tcomponent_subscribe($$self, moves, value => $$invalidate(6, $moves = value));\n\tlet selected = \"\";\n\n\tmymon.subscribe(mon => {\n\t\t$$invalidate(1, selected = pipe(mon, map(m => m.knownMoves[`move${moveIndex}`]), flatten, getOrElse(() => \"\")));\n\t});\n\n\tlet moveId = `mon-${index}-move-${moveIndex}`;\n\tlet ap = none;\n\n\tbeforeUpdate(() => {\n\t\tpipe(ap, map(a => a.close()));\n\t});\n\n\tonMount(() => {\n\t\tlet input = document.getElementById(moveId);\n\t\tap = of(new Awesomplete(input, { list: `#moves-${index}` }));\n\n\t\tmoves.subscribe(ms => {\n\t\t\tpipe(ap, map(a => {\n\t\t\t\ta.list = ms;\n\t\t\t\ta.evaluate();\n\t\t\t}));\n\t\t});\n\n\t\tinput.addEventListener(\"blur\", it => {\n\t\t\tconst text = it.target.value;\n\n\t\t\tif (!text || !$moves.includes(text)) {\n\t\t\t\tteam.update(current => {\n\t\t\t\t\tlet before = current[index];\n\n\t\t\t\t\tlet updated = pipe(before, map(mon => {\n\t\t\t\t\t\tmon.knownMoves[`move${moveIndex}`] = none;\n\t\t\t\t\t\treturn mon;\n\t\t\t\t\t}));\n\n\t\t\t\t\tcurrent[index] = updated;\n\t\t\t\t\treturn current;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tteam.update(current => {\n\t\t\t\t\tlet before = current[index];\n\n\t\t\t\t\tlet updated = pipe(before, map(mon => {\n\t\t\t\t\t\tmon.knownMoves[`move${moveIndex}`] = some(text);\n\t\t\t\t\t\treturn mon;\n\t\t\t\t\t}));\n\n\t\t\t\t\tcurrent[index] = updated;\n\t\t\t\t\treturn current;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tinput.addEventListener(\"awesomplete-selectcomplete\", it => {\n\t\t\tconst bit = it;\n\t\t\t$$invalidate(1, selected = bit.text.value);\n\t\t\tbit.target.blur();\n\t\t});\n\t});\n\n\t$$self.$$set = $$props => {\n\t\tif ('index' in $$props) $$invalidate(4, index = $$props.index);\n\t\tif ('moveIndex' in $$props) $$invalidate(0, moveIndex = $$props.moveIndex);\n\t};\n\n\treturn [moveIndex, selected, moves, moveId, index];\n}\n\nclass Move extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { index: 4, moveIndex: 0 });\n\t}\n}\n\nexport default Move;","/* components/moves/Moves.svelte generated by Svelte v3.48.0 */\nimport {\n\tSvelteComponent,\n\tadd_flush_callback,\n\tappend,\n\tattr,\n\tbind,\n\tbinding_callbacks,\n\tcheck_outros,\n\tcomponent_subscribe,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\telement,\n\tempty,\n\tgroup_outros,\n\tinit,\n\tinsert,\n\tmount_component,\n\tsafe_not_equal,\n\tspace,\n\ttransition_in,\n\ttransition_out\n} from \"svelte/internal\";\n\nimport { team } from \"../store\";\nimport { isSome } from \"fp-ts/lib/Option\";\nimport { derived } from \"svelte/store\";\nimport Move from \"./Move.svelte\";\n\nfunction create_if_block(ctx) {\n\tlet ol;\n\tlet li0;\n\tlet move0;\n\tlet updating_index;\n\tlet t0;\n\tlet li1;\n\tlet move1;\n\tlet updating_index_1;\n\tlet t1;\n\tlet li2;\n\tlet move2;\n\tlet updating_index_2;\n\tlet t2;\n\tlet li3;\n\tlet move3;\n\tlet updating_index_3;\n\tlet current;\n\n\tfunction move0_index_binding(value) {\n\t\t/*move0_index_binding*/ ctx[3](value);\n\t}\n\n\tlet move0_props = { moveIndex: 1 };\n\n\tif (/*index*/ ctx[0] !== void 0) {\n\t\tmove0_props.index = /*index*/ ctx[0];\n\t}\n\n\tmove0 = new Move({ props: move0_props });\n\tbinding_callbacks.push(() => bind(move0, 'index', move0_index_binding));\n\n\tfunction move1_index_binding(value) {\n\t\t/*move1_index_binding*/ ctx[4](value);\n\t}\n\n\tlet move1_props = { moveIndex: 2 };\n\n\tif (/*index*/ ctx[0] !== void 0) {\n\t\tmove1_props.index = /*index*/ ctx[0];\n\t}\n\n\tmove1 = new Move({ props: move1_props });\n\tbinding_callbacks.push(() => bind(move1, 'index', move1_index_binding));\n\n\tfunction move2_index_binding(value) {\n\t\t/*move2_index_binding*/ ctx[5](value);\n\t}\n\n\tlet move2_props = { moveIndex: 3 };\n\n\tif (/*index*/ ctx[0] !== void 0) {\n\t\tmove2_props.index = /*index*/ ctx[0];\n\t}\n\n\tmove2 = new Move({ props: move2_props });\n\tbinding_callbacks.push(() => bind(move2, 'index', move2_index_binding));\n\n\tfunction move3_index_binding(value) {\n\t\t/*move3_index_binding*/ ctx[6](value);\n\t}\n\n\tlet move3_props = { moveIndex: 4 };\n\n\tif (/*index*/ ctx[0] !== void 0) {\n\t\tmove3_props.index = /*index*/ ctx[0];\n\t}\n\n\tmove3 = new Move({ props: move3_props });\n\tbinding_callbacks.push(() => bind(move3, 'index', move3_index_binding));\n\n\treturn {\n\t\tc() {\n\t\t\tol = element(\"ol\");\n\t\t\tli0 = element(\"li\");\n\t\t\tcreate_component(move0.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tli1 = element(\"li\");\n\t\t\tcreate_component(move1.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tli2 = element(\"li\");\n\t\t\tcreate_component(move2.$$.fragment);\n\t\t\tt2 = space();\n\t\t\tli3 = element(\"li\");\n\t\t\tcreate_component(move3.$$.fragment);\n\t\t\tattr(ol, \"class\", \"svelte-6rn3ki\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, ol, anchor);\n\t\t\tappend(ol, li0);\n\t\t\tmount_component(move0, li0, null);\n\t\t\tappend(ol, t0);\n\t\t\tappend(ol, li1);\n\t\t\tmount_component(move1, li1, null);\n\t\t\tappend(ol, t1);\n\t\t\tappend(ol, li2);\n\t\t\tmount_component(move2, li2, null);\n\t\t\tappend(ol, t2);\n\t\t\tappend(ol, li3);\n\t\t\tmount_component(move3, li3, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst move0_changes = {};\n\n\t\t\tif (!updating_index && dirty & /*index*/ 1) {\n\t\t\t\tupdating_index = true;\n\t\t\t\tmove0_changes.index = /*index*/ ctx[0];\n\t\t\t\tadd_flush_callback(() => updating_index = false);\n\t\t\t}\n\n\t\t\tmove0.$set(move0_changes);\n\t\t\tconst move1_changes = {};\n\n\t\t\tif (!updating_index_1 && dirty & /*index*/ 1) {\n\t\t\t\tupdating_index_1 = true;\n\t\t\t\tmove1_changes.index = /*index*/ ctx[0];\n\t\t\t\tadd_flush_callback(() => updating_index_1 = false);\n\t\t\t}\n\n\t\t\tmove1.$set(move1_changes);\n\t\t\tconst move2_changes = {};\n\n\t\t\tif (!updating_index_2 && dirty & /*index*/ 1) {\n\t\t\t\tupdating_index_2 = true;\n\t\t\t\tmove2_changes.index = /*index*/ ctx[0];\n\t\t\t\tadd_flush_callback(() => updating_index_2 = false);\n\t\t\t}\n\n\t\t\tmove2.$set(move2_changes);\n\t\t\tconst move3_changes = {};\n\n\t\t\tif (!updating_index_3 && dirty & /*index*/ 1) {\n\t\t\t\tupdating_index_3 = true;\n\t\t\t\tmove3_changes.index = /*index*/ ctx[0];\n\t\t\t\tadd_flush_callback(() => updating_index_3 = false);\n\t\t\t}\n\n\t\t\tmove3.$set(move3_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(move0.$$.fragment, local);\n\t\t\ttransition_in(move1.$$.fragment, local);\n\t\t\ttransition_in(move2.$$.fragment, local);\n\t\t\ttransition_in(move3.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(move0.$$.fragment, local);\n\t\t\ttransition_out(move1.$$.fragment, local);\n\t\t\ttransition_out(move2.$$.fragment, local);\n\t\t\ttransition_out(move3.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(ol);\n\t\t\tdestroy_component(move0);\n\t\t\tdestroy_component(move1);\n\t\t\tdestroy_component(move2);\n\t\t\tdestroy_component(move3);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet if_block_anchor;\n\tlet current;\n\tlet if_block = /*$exists*/ ctx[1] && create_if_block(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*$exists*/ ctx[1]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*$exists*/ 2) {\n\t\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block, 1, 1, () => {\n\t\t\t\t\tif_block = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t\tif (detaching) detach(if_block_anchor);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet $exists;\n\tlet { index } = $$props;\n\tlet mymon = derived(team, mons => mons[index]);\n\tlet exists = derived(mymon, isSome);\n\tcomponent_subscribe($$self, exists, value => $$invalidate(1, $exists = value));\n\n\tfunction move0_index_binding(value) {\n\t\tindex = value;\n\t\t$$invalidate(0, index);\n\t}\n\n\tfunction move1_index_binding(value) {\n\t\tindex = value;\n\t\t$$invalidate(0, index);\n\t}\n\n\tfunction move2_index_binding(value) {\n\t\tindex = value;\n\t\t$$invalidate(0, index);\n\t}\n\n\tfunction move3_index_binding(value) {\n\t\tindex = value;\n\t\t$$invalidate(0, index);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('index' in $$props) $$invalidate(0, index = $$props.index);\n\t};\n\n\treturn [\n\t\tindex,\n\t\t$exists,\n\t\texists,\n\t\tmove0_index_binding,\n\t\tmove1_index_binding,\n\t\tmove2_index_binding,\n\t\tmove3_index_binding\n\t];\n}\n\nclass Moves extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { index: 0 });\n\t}\n}\n\nexport default Moves;","/* components/Member.svelte generated by Svelte v3.48.0 */\nimport {\n\tSvelteComponent,\n\tadd_flush_callback,\n\tappend,\n\tattr,\n\tbind,\n\tbinding_callbacks,\n\tcomponent_subscribe,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tmount_component,\n\tsafe_not_equal,\n\tspace,\n\ttransition_in,\n\ttransition_out\n} from \"svelte/internal\";\n\nimport \"../../node_modules/awesomplete/awesomplete.css\";\nimport Awesomplete from \"awesomplete\";\nimport { onMount } from \"svelte\";\nimport { team, thinPokedex } from \"./store\";\nimport { getPokemon } from \"../PokeApi\";\nimport { some, none } from \"fp-ts/lib/Option\";\nimport Moves from \"./moves/Moves.svelte\";\nimport \"~typings/AwesomepleteEvent\";\n\nfunction create_fragment(ctx) {\n\tlet div;\n\tlet input;\n\tlet input_id_value;\n\tlet input_list_value;\n\tlet t;\n\tlet moves;\n\tlet updating_index;\n\tlet current;\n\n\tfunction moves_index_binding(value) {\n\t\t/*moves_index_binding*/ ctx[2](value);\n\t}\n\n\tlet moves_props = {};\n\n\tif (/*index*/ ctx[0] !== void 0) {\n\t\tmoves_props.index = /*index*/ ctx[0];\n\t}\n\n\tmoves = new Moves({ props: moves_props });\n\tbinding_callbacks.push(() => bind(moves, 'index', moves_index_binding));\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tinput = element(\"input\");\n\t\t\tt = space();\n\t\t\tcreate_component(moves.$$.fragment);\n\t\t\tattr(input, \"type\", \"text\");\n\t\t\tattr(input, \"id\", input_id_value = \"member-\" + /*index*/ ctx[0]);\n\t\t\tattr(input, \"placeholder\", \"Gotta catch at least one\");\n\t\t\tattr(input, \"list\", input_list_value = \"pokedex-\" + /*index*/ ctx[0]);\n\t\t\tattr(div, \"class\", \"member\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, input);\n\t\t\tappend(div, t);\n\t\t\tmount_component(moves, div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (!current || dirty & /*index*/ 1 && input_id_value !== (input_id_value = \"member-\" + /*index*/ ctx[0])) {\n\t\t\t\tattr(input, \"id\", input_id_value);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*index*/ 1 && input_list_value !== (input_list_value = \"pokedex-\" + /*index*/ ctx[0])) {\n\t\t\t\tattr(input, \"list\", input_list_value);\n\t\t\t}\n\n\t\t\tconst moves_changes = {};\n\n\t\t\tif (!updating_index && dirty & /*index*/ 1) {\n\t\t\t\tupdating_index = true;\n\t\t\t\tmoves_changes.index = /*index*/ ctx[0];\n\t\t\t\tadd_flush_callback(() => updating_index = false);\n\t\t\t}\n\n\t\t\tmoves.$set(moves_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(moves.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(moves.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_component(moves);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet $thinPokedex;\n\tcomponent_subscribe($$self, thinPokedex, $$value => $$invalidate(3, $thinPokedex = $$value));\n\tlet { selected } = $$props;\n\tlet { index } = $$props;\n\n\tonMount(() => {\n\t\tlet input = document.getElementById(`member-${index}`);\n\t\tlet ap = new Awesomplete(input, { list: `#pokedex-${index}` });\n\n\t\tthinPokedex.subscribe(list => {\n\t\t\tap.list = list;\n\t\t\tap.evaluate();\n\t\t});\n\n\t\tinput.addEventListener(\"blur\", it => {\n\t\t\tconst text = it.target.value;\n\n\t\t\tif (!text || !$thinPokedex.includes(text)) {\n\t\t\t\tteam.update(current => {\n\t\t\t\t\tcurrent[index] = none;\n\t\t\t\t\treturn current;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgetPokemon(text).then(newMon => {\n\t\t\t\t\t$$invalidate(1, selected = text);\n\n\t\t\t\t\tteam.update(current => {\n\t\t\t\t\t\tcurrent[index] = some(newMon);\n\t\t\t\t\t\treturn current;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tinput.addEventListener(\"awesomplete-selectcomplete\", it => {\n\t\t\tconst bit = it;\n\t\t\t$$invalidate(1, selected = bit.text.value);\n\t\t\tbit.target.blur();\n\t\t});\n\t});\n\n\tfunction moves_index_binding(value) {\n\t\tindex = value;\n\t\t$$invalidate(0, index);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('selected' in $$props) $$invalidate(1, selected = $$props.selected);\n\t\tif ('index' in $$props) $$invalidate(0, index = $$props.index);\n\t};\n\n\treturn [index, selected, moves_index_binding];\n}\n\nclass Member extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { selected: 1, index: 0 });\n\t}\n}\n\nexport default Member;","import { Type } from \"./type\";\n\nexport enum Effectiveness {\n    Immune = 1,\n    Quarter,\n    Half,\n    Neutral,\n    Double,\n    Quadrouple\n}\n\nconst { Half, Double, Immune, Neutral, Quadrouple, Quarter } = Effectiveness;\n\nconst singleTypeEffectiveness = (attack: Type) => (defenseType: Type): Effectiveness => {\n    const doubles: Effectiveness[] =\n        defenseType.doubleDamageFrom.flatMap((effectiveName) => {\n            return (effectiveName === attack.name) ? [Double] : [];\n        });\n\n    const half: Effectiveness[] =\n        defenseType.halfDamageFrom.flatMap((effectiveName) => {\n            return (effectiveName === attack.name) ? [Half] : [];\n        });\n\n    const immune: Effectiveness[] =\n        defenseType.noDamageFrom.flatMap((effectiveName) => {\n            return (effectiveName === attack.name) ? [Immune] : [];\n        });\n\n    return [doubles, half, immune].flat()[0] || Neutral;\n}\n\nfunction lookup(types: Effectiveness[]): Effectiveness {\n    const sorted = types.slice().sort();\n    if (sorted.length == 1) {\n        return sorted[0];\n    } else if (sorted.includes(Immune)) {\n        return Immune;\n    } else if (sorted.every(val => val === Half)) {\n        return Quarter;\n    } else if (sorted === [Half, Neutral]) {\n        return Half;\n    } else if (sorted === [Half, Double]) {\n        return Neutral;\n    } else if (sorted === [Neutral, Neutral]) {\n        return Neutral;\n    } else if (sorted === [Neutral, Double]) {\n        return Double;\n    } else if (sorted.every((val) => val === Double)) {\n        return Quadrouple;\n    } else {\n        return Neutral;\n    }\n}\n\nexport function attackEffectiveness(attack: Type, defenseTypes: Type[]): Effectiveness {\n    const individualEffectivenesses: Effectiveness[] = defenseTypes.map(singleTypeEffectiveness(attack))\n    return lookup(individualEffectivenesses);\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reduceRight = exports.foldMap = exports.reduce = exports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.chain = exports.ap = exports.alt = exports.altW = exports.of = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.modifyAt = exports.updateAt = exports.sort = exports.groupBy = exports.group = exports.reverse = exports.concat = exports.concatW = exports.fromArray = exports.unappend = exports.unprepend = exports.range = exports.replicate = exports.makeBy = exports.fromReadonlyArray = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.appendW = exports.prepend = exports.prependW = exports.isOutOfBound = exports.isNonEmpty = exports.empty = void 0;\nexports.filterWithIndex = exports.filter = exports.groupSort = exports.intercalate = exports.updateLast = exports.modifyLast = exports.updateHead = exports.modifyHead = exports.matchRight = exports.matchLeft = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getUnionSemigroup = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.foldMapWithIndex = exports.reduceWithIndex = void 0;\nexports.readonlyNonEmptyArray = exports.fold = exports.prependToAll = exports.insertAt = exports.snoc = exports.cons = exports.unsnoc = exports.uncons = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Ord_1 = require(\"./Ord\");\nvar Se = __importStar(require(\"./Semigroup\"));\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexports.empty = _.emptyReadonlyArray;\n/**\n * @internal\n */\nexports.isNonEmpty = _.isNonEmpty;\n/**\n * @internal\n */\nvar isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\nexports.isOutOfBound = isOutOfBound;\n/**\n * @internal\n */\nvar prependW = function (head) { return function (tail) { return __spreadArray([head], tail); }; };\nexports.prependW = prependW;\n/**\n * @internal\n */\nexports.prepend = exports.prependW;\n/**\n * @internal\n */\nvar appendW = function (end) { return function (init) { return __spreadArray(__spreadArray([], init), [end]); }; };\nexports.appendW = appendW;\n/**\n * @internal\n */\nexports.append = exports.appendW;\n/**\n * @internal\n */\nvar unsafeInsertAt = function (i, a, as) {\n    if (exports.isNonEmpty(as)) {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @internal\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs[i] = a;\n        return xs;\n    }\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * Remove duplicates from a `ReadonlyNonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar uniq = function (E) { return function (as) {\n    if (as.length === 1) {\n        return as;\n    }\n    var out = [exports.head(as)];\n    var rest = exports.tail(as);\n    var _loop_1 = function (a) {\n        if (out.every(function (o) { return !E.equals(o, a); })) {\n            out.push(a);\n        }\n    };\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n        var a = rest_1[_i];\n        _loop_1(a);\n    }\n    return out;\n}; };\nexports.uniq = uniq;\n/**\n * Sort the elements of a `ReadonlyNonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = RNEA.sortBy([byName, byAge])\n *\n * const persons: RNEA.ReadonlyNonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar sortBy = function (ords) {\n    if (exports.isNonEmpty(ords)) {\n        var M = Ord_1.getMonoid();\n        return exports.sort(ords.reduce(M.concat, M.empty));\n    }\n    return function_1.identity;\n};\nexports.sortBy = sortBy;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar union = function (E) {\n    var uniqE = exports.uniq(E);\n    return function (second) { return function (first) { return uniqE(function_1.pipe(first, concat(second))); }; };\n};\nexports.union = union;\n/**\n * Rotate a `ReadonlyNonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar rotate = function (n) { return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n    if (exports.isOutOfBound(Math.abs(m), as) || m === 0) {\n        return as;\n    }\n    if (m < 0) {\n        var _a = exports.splitAt(-m)(as), f = _a[0], s = _a[1];\n        return function_1.pipe(s, concat(f));\n    }\n    else {\n        return exports.rotate(m - len)(as);\n    }\n}; };\nexports.rotate = rotate;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Return a `ReadonlyNonEmptyArray` from a `ReadonlyArray` returning `none` if the input is empty.\n *\n * @category constructors\n * @since 2.5.0\n */\nvar fromReadonlyArray = function (as) {\n    return exports.isNonEmpty(as) ? _.some(as) : _.none;\n};\nexports.fromReadonlyArray = fromReadonlyArray;\n/**\n * Return a `ReadonlyNonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar makeBy = function (f) { return function (n) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n    for (var i = 1; i < j; i++) {\n        out.push(f(i));\n    }\n    return out;\n}; };\nexports.makeBy = makeBy;\n/**\n * Create a `ReadonlyNonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar replicate = function (a) { return exports.makeBy(function () { return a; }); };\nexports.replicate = replicate;\n/**\n * Create a `ReadonlyNonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar range = function (start, end) {\n    return start <= end ? exports.makeBy(function (i) { return start + i; })(end - start + 1) : [start];\n};\nexports.range = range;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3, 4]), [1, [2, 3, 4]])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unprepend = function (as) { return [exports.head(as), exports.tail(as)]; };\nexports.unprepend = unprepend;\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unappend = function (as) { return [exports.init(as), exports.last(as)]; };\nexports.unappend = unappend;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * @category interop\n * @since 2.5.0\n */\nvar fromArray = function (as) { return exports.fromReadonlyArray(as.slice()); };\nexports.fromArray = fromArray;\nfunction concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexports.concatW = concatW;\nfunction concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\nexports.concat = concat;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar reverse = function (as) {\n    return as.length === 1 ? as : __spreadArray([exports.last(as)], as.slice(0, -1).reverse());\n};\nexports.reverse = reverse;\nfunction group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return exports.empty;\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\nexports.group = group;\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @category combinators\n * @since 2.5.0\n */\nvar groupBy = function (f) { return function (as) {\n    var out = {};\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n        var a = as_1[_i];\n        var k = f(a);\n        if (out.hasOwnProperty(k)) {\n            out[k].push(a);\n        }\n        else {\n            out[k] = [a];\n        }\n    }\n    return out;\n}; };\nexports.groupBy = groupBy;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length === 1 ? as : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar updateAt = function (i, a) {\n    return exports.modifyAt(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar modifyAt = function (i, f) { return function (as) { return (exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as))); }; };\nexports.modifyAt = modifyAt;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) { return function (as) {\n    var out = [middle, as[0]];\n    for (var i = 1; i < as.length; i++) {\n        out.push(middle, as[i]);\n    }\n    return out;\n}; };\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) { return function (as) {\n    var rest = exports.tail(as);\n    return exports.isNonEmpty(rest) ? function_1.pipe(rest, exports.prependAll(middle), exports.prepend(exports.head(as))) : as;\n}; };\nexports.intersperse = intersperse;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    var out = _.fromReadonlyNonEmptyArray(f(0, exports.head(as)));\n    for (var i = 1; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * A useful recursion pattern for processing a `ReadonlyNonEmptyArray` to produce a new `ReadonlyNonEmptyArray`, often used for \"chopping\" up the input\n * `ReadonlyNonEmptyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyNonEmptyArray` and produce a\n * value and the tail of the `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar chop = function (f) { return function (as) {\n    var _a = f(as), b = _a[0], rest = _a[1];\n    var out = [b];\n    var next = rest;\n    while (exports.isNonEmpty(next)) {\n        var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n        out.push(b_1);\n        next = rest_2;\n    }\n    return out;\n}; };\nexports.chop = chop;\n/**\n * Splits a `ReadonlyNonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar splitAt = function (n) { return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [as, exports.empty] : [function_1.pipe(as.slice(1, m), exports.prepend(exports.head(as))), as.slice(m)];\n}; };\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyNonEmptyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar chunksOf = function (n) { return exports.chop(exports.splitAt(n)); };\nexports.chunksOf = chunksOf;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Pointed\n * @since 2.5.0\n */\nexports.of = _.singleton;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (as) { return function_1.pipe(as, concatW(that())); }; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexports.alt = exports.altW;\n/**\n * @category Apply\n * @since 2.5.0\n */\nvar ap = function (as) { return exports.chain(function (f) { return function_1.pipe(as, exports.map(f)); }); };\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nvar chain = function (f) { return exports.chainWithIndex(function (_, a) { return f(a); }); };\nexports.chain = chain;\n/**\n * @category Extend\n * @since 2.5.0\n */\nvar extend = function (f) { return function (as) {\n    var next = exports.tail(as);\n    var out = [f(as)];\n    while (exports.isNonEmpty(next)) {\n        out.push(f(next));\n        next = exports.tail(next);\n    }\n    return out;\n}; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nvar map = function (f) {\n    return exports.mapWithIndex(function (_, a) { return f(a); });\n};\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) { return function (as) {\n    var out = [f(0, exports.head(as))];\n    for (var i = 1; i < as.length; i++) {\n        out.push(f(i, as[i]));\n    }\n    return out;\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return exports.reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category Foldable\n * @since 2.5.0\n */\nvar foldMap = function (S) { return function (f) { return function (as) {\n    return as.slice(1).reduce(function (s, a) { return S.concat(s, f(a)); }, f(as[0]));\n}; }; };\nexports.foldMap = foldMap;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return exports.reduceRightWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) { return function (as) {\n    return as.reduce(function (b, a, i) { return f(i, b, a); }, b);\n}; };\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (S) { return function (f) { return function (as) { return as.slice(1).reduce(function (s, a, i) { return S.concat(s, f(i + 1, a)); }, f(0, as[0])); }; }; };\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) { return function (as) { return as.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return exports.traverseWithIndex(F)(function_1.SK); };\nexports.sequence = sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) { return function (as) {\n    var out = F.map(f(0, exports.head(as)), exports.of);\n    for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, as[i]));\n    }\n    return out;\n}; }; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Comonad\n * @since 2.6.3\n */\nexports.extract = _.head;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getShow = function (S) { return ({\n    show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n}); };\nexports.getShow = getShow;\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\nvar getSemigroup = function () { return ({\n    concat: concat\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @example\n * import { getEq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\nvar getEq = function (E) {\n    return Eq_1.fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\nexports.getEq = getEq;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = exports.union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.5.0\n */\nexports.head = exports.extract;\n/**\n * @since 2.5.0\n */\nexports.tail = _.tail;\n/**\n * @since 2.5.0\n */\nvar last = function (as) { return as[as.length - 1]; };\nexports.last = last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\nvar init = function (as) { return as.slice(0, -1); };\nexports.init = init;\n/**\n * @since 2.5.0\n */\nvar min = function (O) {\n    var S = Se.min(O);\n    return function (as) { return as.reduce(S.concat); };\n};\nexports.min = min;\n/**\n * @since 2.5.0\n */\nvar max = function (O) {\n    var S = Se.max(O);\n    return function (as) { return as.reduce(S.concat); };\n};\nexports.max = max;\n/**\n * @since 2.10.0\n */\nvar concatAll = function (S) { return function (as) { return as.reduce(S.concat); }; };\nexports.concatAll = concatAll;\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchLeft = function (f) { return function (as) {\n    return f(exports.head(as), exports.tail(as));\n}; };\nexports.matchLeft = matchLeft;\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchRight = function (f) { return function (as) {\n    return f(exports.init(as), exports.last(as));\n}; };\nexports.matchRight = matchRight;\n/**\n * Apply a function to the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyHead = function (f) { return function (as) { return __spreadArray([\n    f(exports.head(as))\n], exports.tail(as)); }; };\nexports.modifyHead = modifyHead;\n/**\n * Change the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nvar updateHead = function (a) { return exports.modifyHead(function () { return a; }); };\nexports.updateHead = updateHead;\n/**\n * Apply a function to the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyLast = function (f) { return function (as) {\n    return function_1.pipe(exports.init(as), exports.append(f(exports.last(as))));\n}; };\nexports.modifyLast = modifyLast;\n/**\n * Change the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nvar updateLast = function (a) { return exports.modifyLast(function () { return a; }); };\nexports.updateLast = updateLast;\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nvar intercalate = function (S) {\n    var concatAllS = exports.concatAll(S);\n    return function (middle) { return function_1.flow(exports.intersperse(middle), concatAllS); };\n};\nexports.intercalate = intercalate;\nfunction groupSort(O) {\n    var sortO = exports.sort(O);\n    var groupO = group(O);\n    return function (as) { return (exports.isNonEmpty(as) ? groupO(sortO(as)) : exports.empty); };\n}\nexports.groupSort = groupSort;\nfunction filter(predicate) {\n    return exports.filterWithIndex(function (_, a) { return predicate(a); });\n}\nexports.filter = filter;\n/**\n * Use [`filterWithIndex`](./ReadonlyArray.ts.html#filterwithindex) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nvar filterWithIndex = function (predicate) { return function (as) { return exports.fromReadonlyArray(as.filter(function (a, i) { return predicate(i, a); })); }; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category destructors\n * @since 2.10.0\n * @deprecated\n */\nexports.uncons = exports.unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category destructors\n * @since 2.10.0\n * @deprecated\n */\nexports.unsnoc = exports.unappend;\nfunction cons(head, tail) {\n    return tail === undefined ? exports.prepend(head) : function_1.pipe(tail, exports.prepend(head));\n}\nexports.cons = cons;\n/**\n * Use [`append`](./ReadonlyArray.ts.html#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nvar snoc = function (init, end) { return function_1.pipe(init, concat([end])); };\nexports.snoc = snoc;\n/**\n * Use [`insertAt`](./ReadonlyArray.ts.html#insertat) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(exports.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\nexports.fold = exports.concatAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyNonEmptyArray = {\n    URI: exports.URI,\n    of: exports.of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: exports.extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.chain = exports.ap = exports.alt = exports.altW = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.foldMap = exports.foldMapWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.of = exports.copy = exports.modifyAt = exports.updateAt = exports.insertAt = exports.sort = exports.groupBy = exports.group = exports.reverse = exports.concat = exports.concatW = exports.unappend = exports.unprepend = exports.range = exports.replicate = exports.makeBy = exports.fromArray = exports.fromReadonlyNonEmptyArray = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.appendW = exports.prepend = exports.prependW = exports.isOutOfBound = exports.isNonEmpty = void 0;\nexports.filter = exports.groupSort = exports.intercalate = exports.updateLast = exports.modifyLast = exports.updateHead = exports.modifyHead = exports.matchRight = exports.matchLeft = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getUnionSemigroup = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = void 0;\nexports.nonEmptyArray = exports.fold = exports.prependToAll = exports.snoc = exports.cons = exports.unsnoc = exports.uncons = exports.filterWithIndex = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Ord_1 = require(\"./Ord\");\nvar RNEA = __importStar(require(\"./ReadonlyNonEmptyArray\"));\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/**\n * @internal\n */\nvar isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\nexports.isOutOfBound = isOutOfBound;\n/**\n * @internal\n */\nvar prependW = function (head) { return function (tail) { return __spreadArray([head], tail); }; };\nexports.prependW = prependW;\n/**\n * @internal\n */\nexports.prepend = exports.prependW;\n/**\n * @internal\n */\nvar appendW = function (end) { return function (init) { return __spreadArray(__spreadArray([], init), [end]); }; };\nexports.appendW = appendW;\n/**\n * @internal\n */\nexports.append = exports.appendW;\n/**\n * @internal\n */\nvar unsafeInsertAt = function (i, a, as) {\n    if (exports.isNonEmpty(as)) {\n        var xs = exports.fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @internal\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    var xs = exports.fromReadonlyNonEmptyArray(as);\n    xs[i] = a;\n    return xs;\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * Remove duplicates from a `NonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar uniq = function (E) { return function (as) {\n    if (as.length === 1) {\n        return exports.copy(as);\n    }\n    var out = [exports.head(as)];\n    var rest = exports.tail(as);\n    var _loop_1 = function (a) {\n        if (out.every(function (o) { return !E.equals(o, a); })) {\n            out.push(a);\n        }\n    };\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n        var a = rest_1[_i];\n        _loop_1(a);\n    }\n    return out;\n}; };\nexports.uniq = uniq;\n/**\n * Sort the elements of a `NonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = NEA.sortBy([byName, byAge])\n *\n * const persons: NEA.NonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar sortBy = function (ords) {\n    if (exports.isNonEmpty(ords)) {\n        var M = Ord_1.getMonoid();\n        return exports.sort(ords.reduce(M.concat, M.empty));\n    }\n    return exports.copy;\n};\nexports.sortBy = sortBy;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar union = function (E) {\n    var uniqE = exports.uniq(E);\n    return function (second) { return function (first) { return uniqE(function_1.pipe(first, concat(second))); }; };\n};\nexports.union = union;\n/**\n * Rotate a `NonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar rotate = function (n) { return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n    if (exports.isOutOfBound(Math.abs(m), as) || m === 0) {\n        return exports.copy(as);\n    }\n    if (m < 0) {\n        var _a = exports.splitAt(-m)(as), f = _a[0], s = _a[1];\n        return function_1.pipe(s, concat(f));\n    }\n    else {\n        return exports.rotate(m - len)(as);\n    }\n}; };\nexports.rotate = rotate;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nexports.fromReadonlyNonEmptyArray = _.fromReadonlyNonEmptyArray;\n/**\n * Builds a `NonEmptyArray` from an `Array` returning `none` if `as` is an empty array\n *\n * @category constructors\n * @since 2.0.0\n */\nvar fromArray = function (as) { return (exports.isNonEmpty(as) ? _.some(as) : _.none); };\nexports.fromArray = fromArray;\n/**\n * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar makeBy = function (f) { return function (n) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n    for (var i = 1; i < j; i++) {\n        out.push(f(i));\n    }\n    return out;\n}; };\nexports.makeBy = makeBy;\n/**\n * Create a `NonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar replicate = function (a) { return exports.makeBy(function () { return a; }); };\nexports.replicate = replicate;\n/**\n * Create a `NonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar range = function (start, end) {\n    return start <= end ? exports.makeBy(function (i) { return start + i; })(end - start + 1) : [start];\n};\nexports.range = range;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3]), [1, [2, 3]])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unprepend = function (as) { return [exports.head(as), exports.tail(as)]; };\nexports.unprepend = unprepend;\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unappend = function (as) { return [exports.init(as), exports.last(as)]; };\nexports.unappend = unappend;\nfunction concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexports.concatW = concatW;\nfunction concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\nexports.concat = concat;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar reverse = function (as) { return __spreadArray([exports.last(as)], as.slice(0, -1).reverse()); };\nexports.reverse = reverse;\nfunction group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return [];\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\nexports.group = group;\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @category combinators\n * @since 2.0.0\n */\nvar groupBy = function (f) { return function (as) {\n    var out = {};\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n        var a = as_1[_i];\n        var k = f(a);\n        if (out.hasOwnProperty(k)) {\n            out[k].push(a);\n        }\n        else {\n            out[k] = [a];\n        }\n    }\n    return out;\n}; };\nexports.groupBy = groupBy;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar sort = function (O) { return function (as) {\n    return as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(exports.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar updateAt = function (i, a) {\n    return exports.modifyAt(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar modifyAt = function (i, f) { return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n}; };\nexports.modifyAt = modifyAt;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.copy = exports.fromReadonlyNonEmptyArray;\n/**\n * @category Pointed\n * @since 2.0.0\n */\nvar of = function (a) { return [a]; };\nexports.of = of;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) { return function (as) {\n    var out = [middle, as[0]];\n    for (var i = 1; i < as.length; i++) {\n        out.push(middle, as[i]);\n    }\n    return out;\n}; };\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) { return function (as) {\n    var rest = exports.tail(as);\n    return exports.isNonEmpty(rest) ? function_1.pipe(rest, exports.prependAll(middle), exports.prepend(exports.head(as))) : exports.copy(as);\n}; };\nexports.intersperse = intersperse;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.foldMapWithIndex = RNEA.foldMapWithIndex;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.foldMap = RNEA.foldMap;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    var out = exports.fromReadonlyNonEmptyArray(f(0, exports.head(as)));\n    for (var i = 1; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chop = function (f) { return function (as) {\n    var _a = f(as), b = _a[0], rest = _a[1];\n    var out = [b];\n    var next = rest;\n    while (exports.isNonEmpty(next)) {\n        var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n        out.push(b_1);\n        next = rest_2;\n    }\n    return out;\n}; };\nexports.chop = chop;\n/**\n * Splits a `NonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar splitAt = function (n) { return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [exports.copy(as), []] : [function_1.pipe(as.slice(1, m), exports.prepend(exports.head(as))), as.slice(m)];\n}; };\nexports.splitAt = splitAt;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chunksOf = function (n) { return exports.chop(exports.splitAt(n)); };\nexports.chunksOf = chunksOf;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\n/* istanbul ignore next */\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (as) {\n    return function_1.pipe(as, concatW(that()));\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (as) {\n    return exports.chain(function (f) { return function_1.pipe(as, exports.map(f)); });\n};\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) {\n    return exports.chainWithIndex(function (_, a) { return f(a); });\n};\nexports.chain = chain;\n/**\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (as) {\n    var next = exports.tail(as);\n    var out = [f(as)];\n    while (exports.isNonEmpty(next)) {\n        out.push(f(next));\n        next = exports.tail(next);\n    }\n    return out;\n}; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return exports.mapWithIndex(function (_, a) { return f(a); }); };\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nvar mapWithIndex = function (f) { return function (as) {\n    var out = [f(0, exports.head(as))];\n    for (var i = 1; i < as.length; i++) {\n        out.push(f(i, as[i]));\n    }\n    return out;\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduce = RNEA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceWithIndex = RNEA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduceRight = RNEA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceRightWithIndex = RNEA.reduceRightWithIndex;\n/**\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @since 2.6.3\n */\nvar sequence = function (F) { return exports.traverseWithIndex(F)(function (_, a) { return a; }); };\nexports.sequence = sequence;\n/**\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) { return function (as) {\n    var out = F.map(f(0, exports.head(as)), exports.of);\n    for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, as[i]));\n    }\n    return out;\n}; }; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @since 2.7.0\n */\nexports.extract = RNEA.head;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'NonEmptyArray';\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = RNEA.getShow;\n/**\n * Builds a `Semigroup` instance for `NonEmptyArray`\n *\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function () { return ({\n    concat: concat\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @example\n * import { getEq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RNEA.getEq;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = exports.union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.0.0\n */\nexports.head = RNEA.head;\n/**\n * @since 2.0.0\n */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n/**\n * @since 2.0.0\n */\nexports.last = RNEA.last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.2.0\n */\nvar init = function (as) { return as.slice(0, -1); };\nexports.init = init;\n/**\n * @since 2.0.0\n */\nexports.min = RNEA.min;\n/**\n * @since 2.0.0\n */\nexports.max = RNEA.max;\n/**\n * @since 2.10.0\n */\nvar concatAll = function (S) { return function (as) { return as.reduce(S.concat); }; };\nexports.concatAll = concatAll;\n/**\n * Break an `Array` into its first element and remaining elements.\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchLeft = function (f) { return function (as) { return f(exports.head(as), exports.tail(as)); }; };\nexports.matchLeft = matchLeft;\n/**\n * Break an `Array` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchRight = function (f) { return function (as) {\n    return f(exports.init(as), exports.last(as));\n}; };\nexports.matchRight = matchRight;\n/**\n * Apply a function to the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyHead = function (f) { return function (as) { return __spreadArray([\n    f(exports.head(as))\n], exports.tail(as)); }; };\nexports.modifyHead = modifyHead;\n/**\n * Change the head, creating a new `NonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nvar updateHead = function (a) { return exports.modifyHead(function () { return a; }); };\nexports.updateHead = updateHead;\n/**\n * Apply a function to the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyLast = function (f) { return function (as) {\n    return function_1.pipe(exports.init(as), exports.append(f(exports.last(as))));\n}; };\nexports.modifyLast = modifyLast;\n/**\n * Change the last element, creating a new `NonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nvar updateLast = function (a) { return exports.modifyLast(function () { return a; }); };\nexports.updateLast = updateLast;\n/**\n * Places an element in between members of a `NonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexports.intercalate = RNEA.intercalate;\nfunction groupSort(O) {\n    var sortO = exports.sort(O);\n    var groupO = group(O);\n    return function (as) { return (exports.isNonEmpty(as) ? groupO(sortO(as)) : []); };\n}\nexports.groupSort = groupSort;\nfunction filter(predicate) {\n    return exports.filterWithIndex(function (_, a) { return predicate(a); });\n}\nexports.filter = filter;\n/**\n * Use [`filterWithIndex`](./Array.ts.html#filterwithindex) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nvar filterWithIndex = function (predicate) { return function (as) { return exports.fromArray(as.filter(function (a, i) { return predicate(i, a); })); }; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category destructors\n * @since 2.9.0\n * @deprecated\n */\nexports.uncons = exports.unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category destructors\n * @since 2.9.0\n * @deprecated\n */\nexports.unsnoc = exports.unappend;\nfunction cons(head, tail) {\n    return tail === undefined ? exports.prepend(head) : function_1.pipe(tail, exports.prepend(head));\n}\nexports.cons = cons;\n/**\n * Use [`append`](./Array.ts.html#append) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nvar snoc = function (init, end) { return function_1.pipe(init, exports.append(end)); };\nexports.snoc = snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\nexports.fold = RNEA.concatAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.nonEmptyArray = {\n    URI: exports.URI,\n    of: exports.of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: exports.extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Field = exports.MonoidProduct = exports.MonoidSum = exports.SemigroupProduct = exports.SemigroupSum = exports.MagmaSub = exports.Show = exports.Bounded = exports.Ord = exports.Eq = exports.isNumber = void 0;\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @category refinements\n * @since 2.11.0\n */\nvar isNumber = function (u) { return typeof u === 'number'; };\nexports.isNumber = isNumber;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Ord = {\n    equals: exports.Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Bounded = {\n    equals: exports.Eq.equals,\n    compare: exports.Ord.compare,\n    top: Infinity,\n    bottom: -Infinity\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Show = {\n    show: function (n) { return JSON.stringify(n); }\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.MagmaSub = {\n    concat: function (first, second) { return first - second; }\n};\n/**\n * `number` semigroup under addition.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupSum.concat(2, 3), 5)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.SemigroupSum = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * `number` semigroup under multiplication.\n *\n * @example\n * import { SemigroupProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupProduct.concat(2, 3), 6)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.SemigroupProduct = {\n    concat: function (first, second) { return first * second; }\n};\n/**\n * `number` monoid under addition.\n *\n * The `empty` value is `0`.\n *\n * @example\n * import { MonoidSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidSum.concat(2, MonoidSum.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.MonoidSum = {\n    concat: exports.SemigroupSum.concat,\n    empty: 0\n};\n/**\n * `number` monoid under multiplication.\n *\n * The `empty` value is `1`.\n *\n * @example\n * import { MonoidProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidProduct.concat(2, MonoidProduct.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.MonoidProduct = {\n    concat: exports.SemigroupProduct.concat,\n    empty: 1\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Field = {\n    add: exports.SemigroupSum.concat,\n    zero: 0,\n    mul: exports.SemigroupProduct.concat,\n    one: 1,\n    sub: exports.MagmaSub.concat,\n    degree: function (_) { return 1; },\n    div: function (first, second) { return first / second; },\n    mod: function (first, second) { return first % second; }\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.matchRightW = exports.foldLeft = exports.matchLeft = exports.matchLeftW = exports.match = exports.matchW = exports.fromEither = exports.fromOption = exports.fromPredicate = exports.replicate = exports.makeBy = exports.appendW = exports.append = exports.prependW = exports.prepend = exports.isNonEmpty = exports.isEmpty = void 0;\nexports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.foldMap = exports.reduce = exports.foldMapWithIndex = exports.duplicate = exports.extend = exports.filterWithIndex = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.filter = exports.separate = exports.mapWithIndex = exports.map = exports.flatten = exports.chain = exports.ap = exports.alt = exports.altW = exports.zero = exports.of = exports._chainRecBreadthFirst = exports._chainRecDepthFirst = exports.difference = exports.intersection = exports.union = exports.concat = exports.concatW = exports.comprehension = exports.fromOptionK = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = void 0;\nexports.toArray = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.fromEitherK = exports.FromEither = exports.filterE = exports.Witherable = exports.ChainRecBreadthFirst = exports.chainRecBreadthFirst = exports.ChainRecDepthFirst = exports.chainRecDepthFirst = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.guard = exports.Zero = exports.Alt = exports.Unfoldable = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getDifferenceMagma = exports.getIntersectionSemigroup = exports.getUnionMonoid = exports.getUnionSemigroup = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = void 0;\nexports.readonlyArray = exports.prependToAll = exports.snoc = exports.cons = exports.range = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.intercalate = exports.exists = exports.some = exports.every = exports.empty = exports.fromArray = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Eq_1 = require(\"./Eq\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar N = __importStar(require(\"./number\"));\nvar Ord_1 = require(\"./Ord\");\nvar RNEA = __importStar(require(\"./ReadonlyNonEmptyArray\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\nvar Zero_1 = require(\"./Zero\");\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether a `ReadonlyArray` is empty.\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @category refinements\n * @since 2.5.0\n */\nvar isEmpty = function (as) { return as.length === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Test whether a `ReadonlyArray` is non empty.\n *\n * @category refinements\n * @since 2.5.0\n */\nexports.isNonEmpty = RNEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.prepend = RNEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @category constructors\n * @since 2.11.0\n */\nexports.prependW = RNEA.prependW;\n/**\n * Append an element to the end of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.append = RNEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @category constructors\n * @since 2.11.0\n */\nexports.appendW = RNEA.appendW;\n/**\n * Return a `ReadonlyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nvar makeBy = function (n, f) { return (n <= 0 ? exports.empty : RNEA.makeBy(f)(n)); };\nexports.makeBy = makeBy;\n/**\n * Create a `ReadonlyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nvar replicate = function (n, a) { return exports.makeBy(n, function () { return a; }); };\nexports.replicate = replicate;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : exports.empty); };\n}\nexports.fromPredicate = fromPredicate;\n// -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n/**\n * @category natural transformations\n * @since 2.11.0\n */\nvar fromOption = function (ma) { return (_.isNone(ma) ? exports.empty : [ma.value]); };\nexports.fromOption = fromOption;\n/**\n * Transforms an `Either` to a `ReadonlyArray`.\n *\n * @category natural transformations\n * @since 2.11.0\n */\nvar fromEither = function (e) { return (_.isLeft(e) ? exports.empty : [e.right]); };\nexports.fromEither = fromEither;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchW = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(as) : onEmpty()); }; };\nexports.matchW = matchW;\n/**\n * @category destructors\n * @since 2.11.0\n */\nexports.match = exports.matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchLeftW = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(RNEA.head(as), RNEA.tail(as)) : onEmpty()); }; };\nexports.matchLeftW = matchLeftW;\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchLeft = exports.matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.5.0\n */\nexports.foldLeft = exports.matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchRightW = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(RNEA.init(as), RNEA.last(as)) : onEmpty()); }; };\nexports.matchRightW = matchRightW;\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchRight = exports.matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.5.0\n */\nexports.foldRight = exports.matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    if (exports.isEmpty(as)) {\n        return exports.empty;\n    }\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps.\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar scanLeft = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n    for (var i = 0; i < len; i++) {\n        out[i + 1] = f(out[i], as[i]);\n    }\n    return out;\n}; };\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar scanRight = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n    for (var i = len - 1; i >= 0; i--) {\n        out[i] = f(as[i], out[i + 1]);\n    }\n    return out;\n}; };\nexports.scanRight = scanRight;\n/**\n * Calculate the number of elements in a `ReadonlyArray`.\n *\n * @since 2.10.0\n */\nvar size = function (as) { return as.length; };\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexports.isOutOfBound = RNEA.isOutOfBound;\nfunction lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : exports.isOutOfBound(i, as) ? _.none : _.some(as[i]);\n}\nexports.lookup = lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nvar head = function (as) { return (exports.isNonEmpty(as) ? _.some(RNEA.head(as)) : _.none); };\nexports.head = head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nvar last = function (as) { return (exports.isNonEmpty(as) ? _.some(RNEA.last(as)) : _.none); };\nexports.last = last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nvar tail = function (as) {\n    return exports.isNonEmpty(as) ? _.some(RNEA.tail(as)) : _.none;\n};\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nvar init = function (as) {\n    return exports.isNonEmpty(as) ? _.some(RNEA.init(as)) : _.none;\n};\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeLeft(2)), [1, 2])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeLeft(4)), input)\n * assert.strictEqual(pipe(input, RA.takeLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar takeLeft = function (n) { return function (as) {\n    return exports.isOutOfBound(n, as) ? as : n === 0 ? exports.empty : as.slice(0, n);\n}; };\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeRight(2)), [2, 3])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeRight(4)), input)\n * assert.strictEqual(pipe(input, RA.takeRight(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar takeRight = function (n) { return function (as) {\n    return exports.isOutOfBound(n, as) ? as : n === 0 ? exports.empty : as.slice(-n);\n}; };\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        var len = out.length;\n        return len === as.length ? as : len === 0 ? exports.empty : out;\n    };\n}\nexports.takeLeftWhile = takeLeftWhile;\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nfunction spanLeft(predicate) {\n    return function (as) {\n        var _a = exports.splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\nexports.spanLeft = spanLeft;\n/**\n * Drop a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropLeft(2)), [3])\n * assert.strictEqual(pipe(input, RA.dropLeft(0)), input)\n * assert.strictEqual(pipe(input, RA.dropLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar dropLeft = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? as : n >= as.length ? exports.empty : as.slice(n, as.length);\n}; };\nexports.dropLeft = dropLeft;\n/**\n * Drop a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropRight(2)), [1])\n * assert.strictEqual(pipe(input, RA.dropRight(0)), input)\n * assert.strictEqual(pipe(input, RA.dropRight(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar dropRight = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? as : n >= as.length ? exports.empty : as.slice(0, as.length - n);\n}; };\nexports.dropRight = dropRight;\nfunction dropLeftWhile(predicate) {\n    return function (as) {\n        var i = spanLeftIndex(as, predicate);\n        return i === 0 ? as : i === as.length ? exports.empty : as.slice(i);\n    };\n}\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nvar findIndex = function (predicate) { return function (as) {\n    for (var i = 0; i < as.length; i++) {\n        if (predicate(as[i])) {\n            return _.some(i);\n        }\n    }\n    return _.none;\n}; };\nexports.findIndex = findIndex;\nfunction findFirst(predicate) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nvar findFirstMap = function (f) { return function (as) {\n    for (var i = 0; i < as.length; i++) {\n        var out = f(as[i]);\n        if (_.isSome(out)) {\n            return out;\n        }\n    }\n    return _.none;\n}; };\nexports.findFirstMap = findFirstMap;\nfunction findLast(predicate) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nvar findLastMap = function (f) { return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n        var out = f(as[i]);\n        if (_.isSome(out)) {\n            return out;\n        }\n    }\n    return _.none;\n}; };\nexports.findLastMap = findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nvar findLastIndex = function (predicate) { return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n        if (predicate(as[i])) {\n            return _.some(i);\n        }\n    }\n    return _.none;\n}; };\nexports.findLastIndex = findLastIndex;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(RNEA.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nvar updateAt = function (i, a) {\n    return exports.modifyAt(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nvar deleteAt = function (i) { return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeDeleteAt(i, as));\n}; };\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nvar modifyAt = function (i, f) { return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n}; };\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar reverse = function (as) { return (as.length <= 1 ? as : as.slice().reverse()); };\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    var f = RNEA.prependAll(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    var f = RNEA.intersperse(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.intersperse = intersperse;\n/**\n * Rotate a `ReadonlyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar rotate = function (n) {\n    var f = RNEA.rotate(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.rotate = rotate;\nfunction elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        for (; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\nexports.elem = elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar uniq = function (E) {\n    var f = RNEA.uniq(E);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar sortBy = function (ords) {\n    var f = RNEA.sortBy(ords);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing a `ReadonlyArray` to produce a new `ReadonlyArray`, often used for \"chopping\" up the input\n * `ReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyArray` and produce a\n * value and the tail of the `ReadonlyArray`.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return RA.chop(as => {\n *     const { init, rest } = pipe(as, RA.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar chop = function (f) {\n    var g = RNEA.chop(f);\n    return function (as) { return (exports.isNonEmpty(as) ? g(as) : exports.empty); };\n};\nexports.chop = chop;\n/**\n * Splits a `ReadonlyArray` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar splitAt = function (n) { return function (as) {\n    return n >= 1 && exports.isNonEmpty(as) ? RNEA.splitAt(n)(as) : exports.isEmpty(as) ? [as, exports.empty] : [exports.empty, as];\n}; };\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyArray`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that:\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `as`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar chunksOf = function (n) {\n    var f = RNEA.chunksOf(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.empty); };\n};\nexports.chunksOf = chunksOf;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar fromOptionK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return exports.fromOption(f.apply(void 0, a));\n}; };\nexports.fromOptionK = fromOptionK;\nfunction comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return exports.isNonEmpty(input)\n            ? function_1.pipe(RNEA.head(input), exports.chain(function (x) { return go(function_1.pipe(scope, exports.append(x)), RNEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : exports.empty;\n    };\n    return go(exports.empty, input);\n}\nexports.comprehension = comprehension;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar concatW = function (second) { return function (first) {\n    return exports.isEmpty(first) ? second : exports.isEmpty(second) ? first : first.concat(second);\n}; };\nexports.concatW = concatW;\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.concat = exports.concatW;\nfunction union(E) {\n    var unionE = RNEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return exports.isNonEmpty(first) && exports.isNonEmpty(second) ? unionE(second)(first) : exports.isNonEmpty(first) ? first : second;\n    };\n}\nexports.union = union;\nfunction intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexports.intersection = intersection;\nfunction difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nexports.difference = difference;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\nvar _filter = function (fa, predicate) {\n    return function_1.pipe(fa, exports.filter(predicate));\n};\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\nvar _partition = function (fa, predicate) {\n    return function_1.pipe(fa, exports.partition(predicate));\n};\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex)); };\nvar _partitionMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.partitionMapWithIndex(f)); };\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\nvar _filterMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.filterMapWithIndex(f)); };\nvar _filterWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex)); };\nvar _extend = function (fa, f) { return function_1.pipe(fa, exports.extend(f)); };\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n/** @internal */\nvar _chainRecDepthFirst = function (a, f) { return function_1.pipe(a, exports.chainRecDepthFirst(f)); };\nexports._chainRecDepthFirst = _chainRecDepthFirst;\n/** @internal */\nvar _chainRecBreadthFirst = function (a, f) { return function_1.pipe(a, exports.chainRecBreadthFirst(f)); };\nexports._chainRecBreadthFirst = _chainRecBreadthFirst;\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Pointed\n * @since 2.5.0\n */\nexports.of = RNEA.of;\n/**\n * @category Zero\n * @since 2.7.0\n */\nvar zero = function () { return exports.empty; };\nexports.zero = zero;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) {\n    return fa.concat(that());\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\nvar ap = function (fa) {\n    return exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); });\n};\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nvar chain = function (f) { return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) { return f(a); }));\n}; };\nexports.chain = chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nvar map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) { return function (fa) { return fa.map(function (a, i) { return f(i, a); }); }; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nvar separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n};\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filter = function (predicate) { return function (as) { return as.filter(predicate); }; };\nexports.filter = filter;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar filterMapWithIndex = function (f) { return function (fa) {\n    var out = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (_.isSome(optionB)) {\n            out.push(optionB.value);\n        }\n    }\n    return out;\n}; };\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filterMap = function (f) {\n    return exports.filterMapWithIndex(function (_, a) { return f(a); });\n};\nexports.filterMap = filterMap;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexports.compact = \n/*#__PURE__*/\nexports.filterMap(function_1.identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partition = function (predicate) {\n    return exports.partitionWithIndex(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar partitionWithIndex = function (predicateWithIndex) { return function (as) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (predicateWithIndex(i, a)) {\n            right.push(a);\n        }\n        else {\n            left.push(a);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partitionMap = function (f) {\n    return exports.partitionMapWithIndex(function (_, a) { return f(a); });\n};\nexports.partitionMap = partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar partitionMapWithIndex = function (f) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar filterWithIndex = function (predicateWithIndex) { return function (as) {\n    return as.filter(function (a, i) { return predicateWithIndex(i, a); });\n}; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * @category Extend\n * @since 2.5.0\n */\nvar extend = function (f) { return function (wa) { return wa.map(function (_, i) { return f(wa.slice(i)); }); }; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (M) { return function (f) { return function (fa) {\n    return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n}; }; };\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return exports.reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar foldMap = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\nexports.foldMap = foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) { return function (fa) {\n    var len = fa.length;\n    var out = b;\n    for (var i = 0; i < len; i++) {\n        out = f(i, out, fa[i]);\n    }\n    return out;\n}; };\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return exports.reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) { return function (fa) { return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) {\n    return _reduce(ta, F.of(exports.zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return function_1.pipe(as, exports.append(a)); }; }), fa);\n    });\n}; };\nexports.sequence = sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, a));\n    });\n}; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\nexports.wilt = wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\nexports.unfold = unfold;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getShow = function (S) { return ({\n    show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n}); };\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) { return (exports.isEmpty(first) ? second : exports.isEmpty(second) ? first : first.concat(second)); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`.\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: exports.empty\n}); };\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nvar getEq = function (E) {\n    return Eq_1.fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\nexports.getEq = getEq;\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nvar getOrd = function (O) {\n    return Ord_1.fromCompare(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return N.Ord.compare(aLen, bLen);\n    });\n};\nexports.getOrd = getOrd;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getUnionMonoid = function (E) { return ({\n    concat: exports.getUnionSemigroup(E).concat,\n    empty: exports.empty\n}); };\nexports.getUnionMonoid = getUnionMonoid;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\nexports.getIntersectionSemigroup = getIntersectionSemigroup;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\nexports.getDifferenceMagma = getDifferenceMagma;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n    URI: exports.URI,\n    unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Zero = {\n    URI: exports.URI,\n    zero: exports.zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\nexports.guard = \n/*#__PURE__*/\nZero_1.guard(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nvar chainRecDepthFirst = function (f) { return function (a) {\n    var todo = __spreadArray([], f(a));\n    var out = [];\n    while (todo.length > 0) {\n        var e = todo.shift();\n        if (_.isLeft(e)) {\n            todo.unshift.apply(todo, f(e.left));\n        }\n        else {\n            out.push(e.right);\n        }\n    }\n    return out;\n}; };\nexports.chainRecDepthFirst = chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecDepthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: exports._chainRecDepthFirst\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nvar chainRecBreadthFirst = function (f) { return function (a) {\n    var initial = f(a);\n    var todo = [];\n    var out = [];\n    function go(e) {\n        if (_.isLeft(e)) {\n            f(e.left).forEach(function (v) { return todo.push(v); });\n        }\n        else {\n            out.push(e.right);\n        }\n    }\n    for (var _i = 0, initial_1 = initial; _i < initial_1.length; _i++) {\n        var e = initial_1[_i];\n        go(e);\n    }\n    while (todo.length > 0) {\n        go(todo.shift());\n    }\n    return out;\n}; };\nexports.chainRecBreadthFirst = chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecBreadthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: exports._chainRecBreadthFirst\n};\nvar _wither = \n/*#__PURE__*/\nWitherable_1.witherDefault(exports.Traversable, exports.Compactable);\nvar _wilt = \n/*#__PURE__*/\nWitherable_1.wiltDefault(exports.Traversable, exports.Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * Filter values inside a context.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as T from 'fp-ts/Task'\n *\n * const filterE = RA.filterE(T.ApplicativePar)\n * async function test() {\n *   assert.deepStrictEqual(\n *     await pipe(\n *       [-1, 2, 3],\n *       filterE((n) => T.of(n > 0))\n *     )(),\n *     [2, 3]\n *   )\n * }\n * test()\n *\n * @since 2.11.0\n */\nexports.filterE = \n/*#__PURE__*/\nWitherable_1.filterE(exports.Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.fromEitherK = \n/*#__PURE__*/\nFromEither_1.fromEitherK(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexports.unsafeInsertAt = RNEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    return exports.isNonEmpty(as) ? RNEA.unsafeUpdateAt(i, a, as) : as;\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nvar unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\nexports.unsafeDeleteAt = unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * @category interop\n * @since 2.5.0\n */\nvar toArray = function (as) { return as.slice(); };\nexports.toArray = toArray;\n/**\n * @category interop\n * @since 2.5.0\n */\nvar fromArray = function (as) { return (exports.isEmpty(as) ? exports.empty : as.slice()); };\nexports.fromArray = fromArray;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexports.empty = RNEA.empty;\nfunction every(predicate) {\n    return function (as) { return as.every(predicate); };\n}\nexports.every = every;\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nvar some = function (predicate) { return function (as) {\n    return as.some(predicate);\n}; };\nexports.some = some;\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexports.exists = exports.some;\n/**\n * Places an element in between members of a `ReadonlyArray`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nvar intercalate = function (M) {\n    var intercalateM = RNEA.intercalate(M);\n    return function (middle) { return exports.match(function () { return M.empty; }, intercalateM(middle)); };\n};\nexports.intercalate = intercalate;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use `ReadonlyNonEmptyArray` module instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nexports.range = RNEA.range;\n/**\n * Use [`prepend`](#prepend) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nexports.cons = RNEA.cons;\n/**\n * Use [`append`](#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nexports.snoc = RNEA.snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyArray = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: exports.zero,\n    unfold: exports.unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.copy = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.matchRightW = exports.foldLeft = exports.matchLeft = exports.matchLeftW = exports.match = exports.matchW = exports.fromEither = exports.fromOption = exports.fromPredicate = exports.replicate = exports.makeBy = exports.appendW = exports.append = exports.prependW = exports.prepend = exports.isNonEmpty = exports.isEmpty = void 0;\nexports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = exports.foldMapWithIndex = exports.foldMap = exports.duplicate = exports.extend = exports.filterWithIndex = exports.alt = exports.altW = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.filter = exports.separate = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.mapWithIndex = exports.flatten = exports.chain = exports.ap = exports.map = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.concat = exports.concatW = exports.comprehension = exports.fromOptionK = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = void 0;\nexports.some = exports.every = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.fromEitherK = exports.FromEither = exports.filterE = exports.ChainRecBreadthFirst = exports.chainRecBreadthFirst = exports.ChainRecDepthFirst = exports.chainRecDepthFirst = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.guard = exports.Zero = exports.Alt = exports.Unfoldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getDifferenceMagma = exports.getIntersectionSemigroup = exports.getUnionMonoid = exports.getUnionSemigroup = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = void 0;\nexports.array = exports.prependToAll = exports.snoc = exports.cons = exports.empty = exports.range = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.intercalate = exports.exists = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar NEA = __importStar(require(\"./NonEmptyArray\"));\nvar RA = __importStar(require(\"./ReadonlyArray\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\nvar Zero_1 = require(\"./Zero\");\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n * assert.strictEqual(isEmpty(['a']), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nvar isEmpty = function (as) { return as.length === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @example\n * import { isNonEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isNonEmpty([]), false)\n * assert.strictEqual(isNonEmpty(['a']), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isNonEmpty = NEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.prepend = NEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @example\n * import { prependW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prependW(\"a\")), [\"a\", 2, 3, 4]);\n *\n * @category constructors\n * @since 2.11.0\n */\nexports.prependW = NEA.prependW;\n/**\n * Append an element to the end of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.append = NEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @example\n * import { appendW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], appendW(\"d\")), [1, 2, 3, \"d\"]);\n *\n * @category constructors\n * @since 2.11.0\n */\nexports.appendW = NEA.appendW;\n/**\n * Return a `Array` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (i: number): number => i * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n * assert.deepStrictEqual(makeBy(-3, double), [])\n * assert.deepStrictEqual(makeBy(4.32164, double), [0, 2, 4, 6])\n *\n * @category constructors\n * @since 2.0.0\n */\nvar makeBy = function (n, f) { return (n <= 0 ? [] : NEA.makeBy(f)(n)); };\nexports.makeBy = makeBy;\n/**\n * Create a `Array` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n * assert.deepStrictEqual(replicate(-3, 'a'), [])\n * assert.deepStrictEqual(replicate(2.985647, 'a'), ['a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\nvar replicate = function (n, a) { return exports.makeBy(n, function () { return a; }); };\nexports.replicate = replicate;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : []); };\n}\nexports.fromPredicate = fromPredicate;\n// -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n/**\n * Create an array from an `Option`. The resulting array will contain the content of the\n * `Option` if it is `Some` and it will be empty if the `Option` is `None`.\n *\n * @example\n * import { fromOption } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(option.some(\"a\"), fromOption),[\"a\"])\n * assert.deepStrictEqual(pipe(option.none, fromOption),[])\n *\n * @category natural transformations\n * @since 2.11.0\n */\nvar fromOption = function (ma) { return (_.isNone(ma) ? [] : [ma.value]); };\nexports.fromOption = fromOption;\n/**\n * Create an array from an `Either`. The resulting array will contain the content of the\n * `Either` if it is `Right` and it will be empty if the `Either` is `Left`.\n *\n * @example\n * import { fromEither } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(either.right(\"r\"), fromEither), [\"r\"]);\n * assert.deepStrictEqual(pipe(either.left(\"l\"), fromEither), []);\n *\n * @category natural transformations\n * @since 2.11.0\n */\nvar fromEither = function (e) { return (_.isLeft(e) ? [] : [e.right]); };\nexports.fromEither = fromEither;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match). It will work when `onEmpty` and `onNonEmpty`\n * have different return types.\n *\n * @example\n * import { matchW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcherW = matchW(\n *   () => \"No elements\",\n *   (as) => as.length\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcherW), 4);\n * assert.deepStrictEqual(pipe([], matcherW), \"No elements\");\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchW = function (onEmpty, onNonEmpty) { return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(as) : onEmpty();\n}; };\nexports.matchW = matchW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` and returns the result.\n *\n * @example\n * import { match } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcher = match(\n *   () => \"No elements\",\n *   (as) => `Found ${as.length} element(s)`\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcher), \"Found 4 element(s)\");\n * assert.deepStrictEqual(pipe([], matcher), \"No elements\");\n *\n * @category destructors\n * @since 2.11.0\n */\nexports.match = exports.matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchLeftW } from 'fp-ts/Array'\n *\n * const f = matchLeftW(\n *   () => 0,\n *   (head: string, tail: string[]) => `Found \"${head}\" followed by ${tail.length} elements`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found \"a\" followed by 2 elements');\n * assert.strictEqual(f([]), 0);\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchLeftW = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(NEA.head(as), NEA.tail(as)) : onEmpty()); }; };\nexports.matchLeftW = matchLeftW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchLeft = exports.matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.foldLeft = exports.matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchRightW } from 'fp-ts/Array'\n *\n * const f = matchRightW(\n *   () => 0,\n *   (head: string[], tail: string) => `Found ${head.length} elements folllowed by \"${tail}\"`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found 2 elements folllowed by \"c\"');\n * assert.strictEqual(f([]), 0);\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchRightW = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(NEA.init(as), NEA.last(as)) : onEmpty()); }; };\nexports.matchRightW = matchRightW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken  into its initial elements and the last element.\n *\n * @example\n * import { matchRight } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchRight(\n *   () => 0,\n *   (head, _) => 1 + len(head)\n * );\n * assert.strictEqual(len([1, 2, 3]), 3);\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchRight = exports.matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.foldRight = exports.matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Same as [`chain`](#chain), but passing also the index to the iterating function.\n *\n * @example\n * import { chainWithIndex, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (index: number, x: string) => replicate(2, `${x}${index}`);\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], chainWithIndex(f)), [\"a0\", \"a0\", \"b1\", \"b1\", \"c2\", \"c2\"]);\n *\n * @category combinators\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar scanLeft = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n    for (var i = 0; i < len; i++) {\n        out[i + 1] = f(out[i], as[i]);\n    }\n    return out;\n}; };\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar scanRight = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n    for (var i = len - 1; i >= 0; i--) {\n        out[i] = f(as[i], out[i + 1]);\n    }\n    return out;\n}; };\nexports.scanRight = scanRight;\n/**\n * Calculate the number of elements in a `Array`.\n *\n * @example\n * import { size } from 'fp-ts/Array'\n *\n * assert.strictEqual(size([\"a\",\"b\",\"c\"]),3)\n *\n * @since 2.10.0\n */\nvar size = function (as) { return as.length; };\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @example\n * import { isOutOfBound } from 'fp-ts/Array'\n *\n * assert.strictEqual(isOutOfBound(1,[\"a\",\"b\",\"c\"]),false)\n * assert.strictEqual(isOutOfBound(-1,[\"a\",\"b\",\"c\"]),true)\n * assert.strictEqual(isOutOfBound(3,[\"a\",\"b\",\"c\"]),true)\n *\n * @since 2.0.0\n */\nexports.isOutOfBound = NEA.isOutOfBound;\n// TODO: remove non-curried overloading in v3\n/**\n * This function provides a safe way to read a value at a particular index from an array.\n * It returns a `none` if the index is out of bounds, and a `some` of the element if the\n * index is valid.\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\nexports.lookup = RA.lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nvar tail = function (as) { return (exports.isNonEmpty(as) ? _.some(NEA.tail(as)) : _.none); };\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nvar init = function (as) { return (exports.isNonEmpty(as) ? _.some(NEA.init(as)) : _.none); };\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3, 4, 5]), [1, 2]);\n * assert.deepStrictEqual(takeLeft(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeLeft(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeLeft(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @category combinators\n * @since 2.0.0\n */\nvar takeLeft = function (n) { return function (as) { return (exports.isOutOfBound(n, as) ? exports.copy(as) : as.slice(0, n)); }; };\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5]);\n * assert.deepStrictEqual(takeRight(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeRight(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeRight(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @category combinators\n * @since 2.0.0\n */\nvar takeRight = function (n) { return function (as) {\n    return exports.isOutOfBound(n, as) ? exports.copy(as) : n === 0 ? [] : as.slice(-n);\n}; };\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        return out;\n    };\n}\nexports.takeLeftWhile = takeLeftWhile;\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nfunction spanLeft(predicate) {\n    return function (as) {\n        var _a = exports.splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\nexports.spanLeft = spanLeft;\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the start.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3]);\n * assert.deepStrictEqual(dropLeft(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropLeft(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropLeft(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @category combinators\n * @since 2.0.0\n */\nvar dropLeft = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? exports.copy(as) : n >= as.length ? [] : as.slice(n, as.length);\n}; };\nexports.dropLeft = dropLeft;\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the end.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3]), [1]);\n * assert.deepStrictEqual(dropRight(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropRight(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropRight(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @category combinators\n * @since 2.0.0\n */\nvar dropRight = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? exports.copy(as) : n >= as.length ? [] : as.slice(0, as.length - n);\n}; };\nexports.dropRight = dropRight;\nfunction dropLeftWhile(predicate) {\n    return function (as) { return as.slice(spanLeftIndex(as, predicate)); };\n}\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * `findIndex` returns an `Option` containing the first index for which a predicate holds.\n * It returns `None` if no element satisfies the predicate.\n * Similar to [`findFirst`](#findFirst) but returning the index instead of the element.\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\nexports.findIndex = RA.findIndex;\nfunction findFirst(predicate) {\n    return RA.findFirst(predicate);\n}\nexports.findFirst = findFirst;\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array and\n * returns the first `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove18)(persons), some(\"Mary\"));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove70)(persons), none);\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.findFirstMap = RA.findFirstMap;\nfunction findLast(predicate) {\n    return RA.findLast(predicate);\n}\nexports.findLast = findLast;\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array starting from the\n * end and returns the last `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove18)(persons), some(\"Joey\"));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove70)(persons), none);\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate.\n * It returns an `Option` containing the index or `None` if not found.\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n * @since 2.0.0\n */\nexports.findLastIndex = RA.findLastIndex;\n/**\n * This function takes an array and makes a new array containing the same elements.\n *\n * @category combinators\n * @since 2.0.0\n */\nvar copy = function (as) { return as.slice(); };\nexports.copy = copy;\n/**\n * Insert an element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(exports.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\nvar updateAt = function (i, a) { return exports.modifyAt(i, function () { return a; }); };\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds.\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\nvar deleteAt = function (i) { return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeDeleteAt(i, as));\n}; };\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds.\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\nvar modifyAt = function (i, f) { return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n}; };\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar reverse = function (as) { return (exports.isEmpty(as) ? [] : as.slice().reverse()); };\nexports.reverse = reverse;\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Right` elements in the same order.\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\nexports.rights = rights;\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Left` elements in the same order.\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length <= 1 ? exports.copy(as) : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\nvar unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Creates a new `Array`, prepending an element to every member of the input `Array`.\n *\n * @example\n * import { prependAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    var f = NEA.prependAll(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : []); };\n};\nexports.prependAll = prependAll;\n/**\n * Creates a new `Array` placing an element in between members of the input `Array`.\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    var f = NEA.intersperse(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.intersperse = intersperse;\n/**\n * Creates a new `Array` rotating the input `Array` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar rotate = function (n) {\n    var f = NEA.rotate(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.rotate = rotate;\n// TODO: remove non-curried overloading in v3\n/**\n * Test if a value is a member of an `Array`. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(0)), false)\n *\n * @since 2.0.0\n */\nexports.elem = RA.elem;\n/**\n * Creates a new `Array` removing duplicate elements, keeping the first occurrence of an element,\n * based on a `Eq<A>`.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar uniq = function (E) {\n    var f = NEA.uniq(E);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar sortBy = function (ords) {\n    var f = NEA.sortBy(ords);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as A from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return A.chop(as => {\n *     const { init, rest } = pipe(as, A.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar chop = function (f) {\n    var g = NEA.chop(f);\n    return function (as) { return (exports.isNonEmpty(as) ? g(as) : []); };\n};\nexports.chop = chop;\n/**\n * Splits an `Array` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar splitAt = function (n) { return function (as) {\n    return n >= 1 && exports.isNonEmpty(as) ? NEA.splitAt(n)(as) : exports.isEmpty(as) ? [exports.copy(as), []] : [[], exports.copy(as)];\n}; };\nexports.splitAt = splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar chunksOf = function (n) {\n    var f = NEA.chunksOf(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : []); };\n};\nexports.chunksOf = chunksOf;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar fromOptionK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return exports.fromOption(f.apply(void 0, a));\n}; };\nexports.fromOptionK = fromOptionK;\nfunction comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return exports.isNonEmpty(input)\n            ? function_1.pipe(NEA.head(input), exports.chain(function (x) { return go(function_1.pipe(scope, exports.append(x)), NEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : [];\n    };\n    return go([], input);\n}\nexports.comprehension = comprehension;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar concatW = function (second) { return function (first) {\n    return exports.isEmpty(first) ? exports.copy(second) : exports.isEmpty(second) ? exports.copy(first) : first.concat(second);\n}; };\nexports.concatW = concatW;\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.concat = exports.concatW;\nfunction union(E) {\n    var unionE = NEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return exports.isNonEmpty(first) && exports.isNonEmpty(second)\n            ? unionE(second)(first)\n            : exports.isNonEmpty(first)\n                ? exports.copy(first)\n                : exports.copy(second);\n    };\n}\nexports.union = union;\nfunction intersection(E) {\n    var elemE = exports.elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexports.intersection = intersection;\nfunction difference(E) {\n    var elemE = exports.elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nexports.difference = difference;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _filter = function (fa, predicate) { return function_1.pipe(fa, exports.filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return function_1.pipe(fa, exports.partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\n/* istanbul ignore next */\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _partitionMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.partitionMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _filterMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.filterMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _filterWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _extend = function (fa, f) { return function_1.pipe(fa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\nvar _chainRecDepthFirst = RA._chainRecDepthFirst;\nvar _chainRecBreadthFirst = RA._chainRecBreadthFirst;\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * Given an element of the base type, `of` builds an `Array` containing just that\n * element of the base type (this is useful for building a `Monad`).\n *\n * @example\n * import { of } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(of(\"a\"), [\"a\"]);\n *\n * @category Pointed\n * @since 2.0.0\n */\nexports.of = NEA.of;\n/**\n * Makes an empty `Array`, useful for building a [`Monoid`](#Monoid)\n *\n * @category Zero\n * @since 2.7.0\n */\nvar zero = function () { return []; };\nexports.zero = zero;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: Array<A>) => Array<B>`.\n * In practice it applies the base function to each element of the array and collects the\n * results in a new array.\n *\n * @example\n * import { map } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => n * 2;\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [2, 4, 6]);\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return fa.map(function (a) { return f(a); }); }; };\nexports.map = map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * It can be used to extend the concept of [`map`](#map) to a function that\n * takes more than one parameter as described\n * read [here](https://dev.to/gcanti/getting-started-with-fp-ts-applicative-1kb3)\n *\n * @example\n * import { ap, map, of } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * // a curried function with 3 input parameteres\n * const f = (s1: string) => (n: number) => (s2: string) => s1 + n + s2;\n *\n * // let's use `ap` to iterate `f` over an array for each input parameter\n * assert.deepStrictEqual(pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])), [\n *   \"a1😀\", \"a1😫\", \"a1😎\",\n *   \"a2😀\", \"a2😫\", \"a2😎\",\n *   \"b1😀\", \"b1😫\", \"b1😎\",\n *   \"b2😀\", \"b2😫\", \"b2😎\",\n * ]);\n *\n * // given Array implements the Applicative interface with the `of` method,\n * // we can write exactly the same thing in a more symmetric way\n * // using `of` on `f` and `ap` on each array in input\n * assert.deepStrictEqual(\n *   pipe(of(f), ap([\"a\", \"b\"]), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])),\n *   pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"]))\n * );\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (fa) { return exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); }); };\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to\n * determine the next computation.\n *\n * In other words it takes a function `f` that produces an array from a single element of\n * the base type `A` and returns a new function which applies `f` to each element of the\n * input array (like [`map`](#map)) and, instead of returning an array of arrays, concatenates the\n * results into a single array (like [`flatten`](#flatten)).\n *\n * This is the `chain` component of the array `Monad`.\n *\n * @example\n * import { chain, map, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => replicate(n, `${n}`);\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [[\"1\"], [\"2\", \"2\"], [\"3\", \"3\", \"3\"]]);\n * assert.deepStrictEqual(pipe([1, 2, 3], chain(f)), [\"1\", \"2\", \"2\", \"3\", \"3\", \"3\"]);\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) { return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) { return f(a); }));\n}; };\nexports.chain = chain;\n/**\n * Takes an array of arrays of `A` and flattens them into an array of `A`\n * by concatenating the elements of each array in order.\n *\n * Derivable from [`chain`](#chain).\n *\n * @example\n * import { flatten } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(flatten([[\"a\"], [\"b\", \"c\"], [\"d\", \"e\", \"f\"]]), [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]);\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * Same as [`map`](#map), but the iterating function takes both the index and the value\n * of the element.\n *\n * @example\n * import { mapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (i: number, s: string) => `${s} - ${i}`;\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], mapWithIndex(f)), [\"a - 0\", \"b - 1\", \"c - 2\"]);\n *\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nvar mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * Maps an array with an iterating function that takes the index and the value of\n * each element and returns an `Option`. It keeps only the `Some` values discarding\n * the `None`s.\n *\n * Same as [`filterMap`](#filterMap), but with an iterating function which takes also\n * the index as input.\n *\n * @example\n * import { filterMapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (i: number, s: string) => (i % 2 === 1 ? option.some(s.toUpperCase()) : option.none);\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMapWithIndex(f)), [\"NO\", \"B\"]);\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar filterMapWithIndex = function (f) { return function (fa) {\n    var out = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (_.isSome(optionB)) {\n            out.push(optionB.value);\n        }\n    }\n    return out;\n}; };\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * Maps an array with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (s: string) => s.length === 1 ? option.some(s.toUpperCase()) : option.none;\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMap(f)), [\"A\", \"B\"]);\n *\n * @category Filterable\n * @since 2.0.0\n */\nvar filterMap = function (f) {\n    return exports.filterMapWithIndex(function (_, a) { return f(a); });\n};\nexports.filterMap = filterMap;\n/**\n * Compact an array of `Option`s discarding the `None` values and\n * keeping the `Some` values. It returns a new array containing the values of\n * the `Some` options.\n *\n * @example\n * import { compact } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n *\n * assert.deepStrictEqual(compact([option.some(\"a\"), option.none, option.some(\"b\")]), [\"a\", \"b\"]);\n *\n * @category Compactable\n * @since 2.0.0\n */\nexports.compact = \n/*#__PURE__*/\nexports.filterMap(function_1.identity);\n/**\n * Separate an array of `Either`s into `Left`s and `Right`s, creating two new arrays:\n * one containing all the left values and one containing all the right values.\n *\n * @example\n * import { separate } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n *\n * assert.deepStrictEqual(separate([either.right(\"r1\"), either.left(\"l1\"), either.right(\"r2\")]), {\n *   left: [\"l1\"],\n *   right: [\"r1\", \"r2\"],\n * });\n *\n * @category Compactable\n * @since 2.0.0\n */\nvar separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n};\nexports.separate = separate;\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `filter` creates a new `Array` containing the elements of the original\n * `Array` for which the iterating function is `true`.\n *\n * @example\n * import { filter } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(filter(isString)([\"a\", 1, {}, \"b\", 5]), [\"a\", \"b\"]);\n * assert.deepStrictEqual(filter((x:number) => x > 0)([-3, 1, -2, 5]), [1, 5]);\n *\n * @category Filterable\n * @since 2.0.0\n */\nvar filter = function (predicate) { return function (as) { return as.filter(predicate); }; };\nexports.filter = filter;\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `partition` creates two new `Array`s: `right` containing the elements of the original\n * `Array` for which the iterating function is `true`, `left` containing the elements\n * for which it is false.\n *\n * @example\n * import { partition } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(partition(isString)([\"a\", 1, {}, \"b\", 5]), { left: [1, {}, 5], right: [\"a\", \"b\"] });\n * assert.deepStrictEqual(partition((x: number) => x > 0)([-3, 1, -2, 5]), { left: [-3, -2], right: [1, 5] });\n *\n * @category Filterable\n * @since 2.0.0\n */\nvar partition = function (predicate) {\n    return exports.partitionWithIndex(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * Same as [`partition`](#partition), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionWithIndex } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(partitionWithIndex((index, x: number) => index < 3 && x > 0)([-2, 5, 6, 7]), {\n *   left: [-2, 7],\n *   right: [5, 6],\n * });\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar partitionWithIndex = function (predicateWithIndex) { return function (as) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < as.length; i++) {\n        var b = as[i];\n        if (predicateWithIndex(i, b)) {\n            right.push(b);\n        }\n        else {\n            left.push(b);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * Given an iterating function that returns an `Either`,\n * `partitionMap` applies the iterating function to each element and it creates two `Array`s:\n * `right` containing the values of `Right` results, `left` containing the values of `Left` results.\n *\n * @example\n * import { partitionMap } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfString = <B>(x: B): Either<B, string> =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMap(upperIfString)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7],\n *   right: [ 'HELLO', 'WORLD' ],\n * });\n *\n * @category Filterable\n * @since 2.0.0\n */\nvar partitionMap = function (f) { return exports.partitionMapWithIndex(function (_, a) { return f(a); }); };\nexports.partitionMap = partitionMap;\n/**\n * Same as [`partitionMap`](#partitionMap), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionMapWithIndex } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfStringBefore3 = <B>(index: number, x: B): Either<B, string> =>\n *   index < 3 && typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMapWithIndex(upperIfStringBefore3)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7, \"world\"],\n *   right: [\"HELLO\"],\n * });\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar partitionMapWithIndex = function (f) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * Less strict version of [`alt`](#alt), it can concatenate `Array`s of different base types.\n *\n * @example\n * import { altW } from 'fp-ts/Array';\n *\n * assert.deepStrictEqual(altW(() => [2, 3, 4])([\"a\"]), [\"a\", 2, 3, 4]);\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) { return fa.concat(that()); }; };\nexports.altW = altW;\n/**\n * `alt` implements the `Alt` iterface by concatenation of `Array`s.\n * `Alt` interface is similar to `Semigroup` for higher-kinded types such\n * as `Array` and `Option`: the example below shows both `Alt`'s `alt` and\n * `Semigroup`'s `concat` functions.\n *\n * @example\n * import { alt, concat } from 'fp-ts/Array';\n *\n * assert.deepStrictEqual(alt(() => [2, 3, 4])([1]), [1, 2, 3, 4]);\n * assert.deepStrictEqual(concat([2, 3, 4])([1]), [1, 2, 3, 4]);\n *\n * @category Alt\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * Same as [`filter`](#filter), but passing also the index to the iterating function.\n *\n * @example\n * import { filterWithIndex } from 'fp-ts/Array';\n *\n * const f = (index: number, x: number) => x > 0 && index <= 2;\n * assert.deepStrictEqual(filterWithIndex(f)([-3, 1, -2, 5]), [1]);\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar filterWithIndex = function (predicateWithIndex) { return function (as) {\n    return as.filter(function (b, i) { return predicateWithIndex(i, b); });\n}; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * Given an iterating function that takes `Array<A>` as input, `extend` returns\n * an array containing the results of the iterating function applied to the whole input\n * `Array`, then to the input `Array` without the first element, then to the input\n * `Array` without the first two elements, etc.\n *\n * @example\n * import { extend } from 'fp-ts/Array'\n *\n * const f = (a: string[]) => a.join(\",\");\n * assert.deepStrictEqual(extend(f)([\"a\", \"b\", \"c\"]), [\"a,b,c\", \"b,c\", \"c\"]);\n *\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\nexports.extend = extend;\n/**\n * `duplicate` returns an array containing the whole input `Array`,\n * then to the input `Array` dropping the first element, then to the input\n * `Array` dropping the first two elements, etc.\n * Derivable from `Extend`.\n *\n * @example\n * import { duplicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(duplicate([\"a\", \"b\", \"c\"]), [[\"a\", \"b\", \"c\"], [\"b\", \"c\"], [\"c\"]]);\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * Map and fold an `Array`.\n * Map the `Array` passing each value to the iterating function.\n * Then fold the results using the provided `Monoid`.\n *\n * @example\n * import { foldMap } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (s: string) => s.toUpperCase()\n * assert.deepStrictEqual(foldMap(monoid)(f)([\"a\", \"b\", \"c\"]), \"ABC\");\n *\n * @category Foldable\n * @since 2.0.0\n */\nexports.foldMap = RA.foldMap;\n/**\n * Same as [`foldMap`](#foldMap) but passing also the index to the iterating function.\n *\n * @example\n * import { foldMapWithIndex } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (index:number, s: string) => `${s.toUpperCase()}(${index})`\n * assert.deepStrictEqual(foldMapWithIndex(monoid)(f)([\"a\", \"b\", \"c\"]), \"A(0)B(1)C(2)\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * Reduces an `Array`.\n *\n * `reduce` executes the supplied iterating function on each element of the array,\n * in order, passing in the element and the return value from the calculation on the preceding element.\n *\n * The first time that the iterating function is called there is no \"return value of the\n * previous calculation\", the initial value is used in its place.\n *\n * @example\n * import { reduce } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduce(5, (acc: number, cur: number) => acc * cur)([2, 3]), 5 * 2 * 3);\n *\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduce = RA.reduce;\n/**\n * Same as [`reduce`](#reduce) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, acc: string, cur: unknown) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"A1B2\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceWithIndex = RA.reduceWithIndex;\n/**\n * Same as [`reduce`](#reduce) but applied from the end to the start.\n *\n * *Note*: the iterating function in this case takes the accumulator as the last argument.\n *\n * @example\n * import { reduceRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduceRight(\"\", (cur: string, acc: string) => acc + cur)([\"a\", \"b\", \"c\"]), \"cba\");\n *\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduceRight = RA.reduceRight;\n/**\n * Same as [`reduceRight`](#reduceRight) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceRightWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, cur: unknown, acc: string) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceRightWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"B2A1\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * Given an iterating function that returns a `HKT` (higher kinded type), `traverse`\n * applies the iterating function to each element of the `Array` and then [`sequence`](#sequence)-s\n * the results using the provided `Applicative`.\n *\n * E.g. suppose you have an `Array` and you want to format each element with a function\n * that returns a result or an error as `f = (a: A) => Either<Error, B>`, using `traverse`\n * you can apply `f` to all elements and directly obtain as a result an `Either<Error,Array<B>>`\n * i.e. an `Array<B>` if all the results are `B`, or an `Error` if some of the results\n * are `Error`s.\n *\n * @example\n * import { traverse } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (x: unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", \"b\"]), right([\"A\", \"B\"]));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * `sequence` takes an `Array` where elements are `HKT<A>` (higher kinded type) and,\n * using an applicative of that `HKT`, returns an `HKT` of `Array<A>`.\n * E.g. it can turn an `Array<Either<Error, string>>` into an `Either<Error, Array<string>>`.\n *\n * `sequence` requires an `Applicative` of the `HKT` you are targeting, e.g. to turn an\n * `Array<Either<E, A>>` into an `Either<E, Array<A>>`, it needs an\n * `Applicative` for `Either`, to to turn an `Array<Option<A>>` into an `Option<Array<A>>`,\n * it needs an `Applicative` for `Option`.\n *\n * @example\n * import { sequence } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * assert.deepStrictEqual(sequence(Applicative)([right(\"a\"), right(\"b\")]), right([\"a\", \"b\"]));\n * assert.deepStrictEqual(\n *   sequence(Applicative)([right(\"a\"), left(new Error(\"not a string\"))]),\n *   left(new Error(\"not a string\"))\n * );\n *\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) {\n    return _reduce(ta, F.of(exports.zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return function_1.pipe(as, exports.append(a)); }; }), fa);\n    });\n}; };\nexports.sequence = sequence;\n/**\n * Same as [`traverse`](#traverse) but passing also the index to the iterating function.\n *\n * @example\n * import { traverseWithIndex } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (index:number, x:unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase() + index) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", \"b\"]), right([\"A0\", \"B1\"]));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, a));\n    });\n}; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\nexports.wilt = wilt;\n/**\n * `unfold` takes a function `f` which returns an `Option` of a tuple containing an outcome\n * value and an input for the following iteration.\n * `unfold` applies `f` to the initial value `b` and then recursively to the second\n * element of the tuple contained in the returned `option` of the previous\n * calculation until `f` returns `Option.none`.\n *\n * @example\n * import { unfold } from 'fp-ts/Array'\n * import { option } from 'fp-ts'\n *\n * const f = (n: number) => {\n *   if (n <= 0) return option.none;\n *   const returnValue = n * 2;\n *   const inputForNextRound = n - 1;\n *   return option.some([returnValue, inputForNextRound] as const);\n * };\n * assert.deepStrictEqual(unfold(5, f), [10, 8, 6, 4, 2]);\n *\n * @category Unfoldable\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\nexports.unfold = unfold;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Array';\n/**\n * `getShow` makes a `Show` for an `Array<A>` from a `Show` for\n * an `A`.\n *\n * @example\n * import { getShow } from 'fp-ts/Array'\n *\n * const numShow = { show: (n: number) => (n >= 0 ? `${n}` : `(${-n})`) };\n * assert.deepStrictEqual(getShow(numShow).show([-2, -1, 0, 1]), \"[(2), (1), 0, 1]\");\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = RA.getShow;\n/**\n * Get a `Semigroup` based on the concatenation of `Array`s.\n * See also [`getMonoid`](#getMonoid).\n *\n * @example\n * import { getSemigroup } from 'fp-ts/Array'\n *\n * const S = getSemigroup<number>();\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 2, 3]);\n *\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) { return first.concat(second); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `Array<A>` based on the concatenation of `Array`s.\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: []\n}); };\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getOrd = RA.getOrd;\n/**\n * Get a `Semigroup` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n * See also [`getUnionMonoid`](#getUnionMonoid).\n *\n * @example\n * import { getUnionSemigroup } from 'fp-ts/Array';\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getUnionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 3]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * Get a `Monoid` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n *\n * @example\n * import { getUnionMonoid } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const M = getUnionMonoid<number>(Eq);\n * assert.deepStrictEqual(M.concat([1, 2], [2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(M.empty,[]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getUnionMonoid = function (E) { return ({\n    concat: exports.getUnionSemigroup(E).concat,\n    empty: []\n}); };\nexports.getUnionMonoid = getUnionMonoid;\n/**\n * Get a `Semigroup` based on the intersection of the elements of `Array`s.\n * Only elements present in the two arrays which are equal according to the\n * provided `Eq` are included in the result.\n *\n * @example\n * import { getIntersectionSemigroup } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getIntersectionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [2]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\nexports.getIntersectionSemigroup = getIntersectionSemigroup;\n/**\n * Get a `Magma` for `Array` where the `concat` function is the differnce between\n * the first and the second array, i.e. the result contains all the elements of the\n * first array for which their is no equal element in the second array according\n * to the `Eq` provided.\n *\n *\n * @example\n * import { getDifferenceMagma } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getDifferenceMagma<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\nexports.getDifferenceMagma = getDifferenceMagma;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Given an input an `Array` of functions, `flap` returns an `Array` containing\n * the results of applying each function to the given input.\n *\n * @example\n * import { flap } from 'fp-ts/Array'\n *\n * const funs = [\n *   (n: number) => `Double: ${n * 2}`,\n *   (n: number) => `Triple: ${n * 3}`,\n *   (n: number) => `Square: ${n * n}`,\n * ];\n * assert.deepStrictEqual(flap(4)(funs), ['Double: 8', 'Triple: 12', 'Square: 16']);\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n    URI: exports.URI,\n    unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Zero = {\n    URI: exports.URI,\n    zero: exports.zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\nexports.guard = \n/*#__PURE__*/\nZero_1.guard(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    traverseWithIndex: _traverseWithIndex\n};\nvar _wither = \n/*#__PURE__*/\nWitherable_1.witherDefault(exports.Traversable, exports.Compactable);\nvar _wilt = \n/*#__PURE__*/\nWitherable_1.wiltDefault(exports.Traversable, exports.Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nexports.chainRecDepthFirst = RA.chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecDepthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecDepthFirst\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nexports.chainRecBreadthFirst = RA.chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecBreadthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecBreadthFirst\n};\n/**\n * Filter values inside a context.\n *\n * @since 2.11.0\n */\nexports.filterE = \n/*#__PURE__*/\nWitherable_1.filterE(exports.Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.fromEitherK = \n/*#__PURE__*/\nFromEither_1.fromEitherK(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexports.unsafeInsertAt = NEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    return exports.isNonEmpty(as) ? NEA.unsafeUpdateAt(i, a, as) : [];\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nvar unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\nexports.unsafeDeleteAt = unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * `every` tells if the provided predicate holds true for every element in the `Array`.\n *\n * @example\n * import { every } from 'fp-ts/Array'\n *\n * assert.equal(every((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(every((x: number) => x >= 0)([-1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nexports.every = RA.every;\n/**\n * `some` tells if the provided predicate holds true at least for one element in the `Array`.\n *\n * @example\n * import { some } from 'fp-ts/Array'\n *\n * assert.equal(some((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(some((x: number) => x >= 10)([1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nvar some = function (predicate) { return function (as) { return as.some(predicate); }; };\nexports.some = some;\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexports.exists = exports.some;\n/**\n * Places an element in between members of an `Array`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexports.intercalate = RA.intercalate;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use `NonEmptyArray` module instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.range = NEA.range;\n/**\n * Use a new `[]` instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.empty = [];\n/**\n * Use `prepend` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.cons = NEA.cons;\n/**\n * Use `append` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.snoc = NEA.snoc;\n/**\n * Use `prependAll` instead\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.array = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: exports.zero,\n    unfold: exports.unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n","import { Pokemon } from \"./../../model/pokemon\";\nimport { attackEffectiveness, Effectiveness } from \"../../model/effectiveness\";\nimport { Type } from \"../../model/type\";\nimport { Option } from \"fp-ts/lib/Option\";\nimport { array } from \"fp-ts/lib/Array\";\n\nfunction sum(a: number, b: number) {\n  return a + b;\n}\n\nconst findTypeByName = (typedex: Type[]) => (name: string) =>\n  typedex.find((type: Type) => type.name == name);\n\nexport function teamEffectiveness(\n  attackType: Type,\n  testEffective: Effectiveness,\n  inTeam: Array<Option<Pokemon>>,\n  typedex: Type[]\n): number {\n  const typeLookup = findTypeByName(typedex);\n  const lookupTypes = (mon: Pokemon): Type[] =>\n    mon.types.map(typeLookup).filter((x) => x != null);\n\n  return array\n    .compact(inTeam)\n    .map((member: Pokemon) => {\n      const memberTypes: Type[] = lookupTypes(member);\n      if (attackEffectiveness(attackType, memberTypes) === testEffective) {\n        return 1;\n      } else {\n        return 0;\n      }\n    })\n    .reduce(sum, 0);\n}\n","// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getBooleanAlgebra = function (B) { return function () { return ({\n    meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n    join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n    zero: function () { return B.zero; },\n    one: function () { return B.one; },\n    implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n    not: function (x) { return function (a) { return B.not(x(a)); }; }\n}); }; };\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function (S) { return function () { return ({\n    concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n}); }; };\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getMonoid = function (M) {\n    var getSemigroupM = getSemigroup(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getRing = function (R) {\n    var S = getSemiring(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var apply = function (a) { return function (f) { return f(a); }; };\n/**\n * @since 2.0.0\n */\nexport function identity(a) {\n    return a;\n}\n/**\n * @since 2.0.0\n */\nexport var unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nexport function constant(a) {\n    return function () { return a; };\n}\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexport var constTrue = \n/*#__PURE__*/\nconstant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexport var constFalse = \n/*#__PURE__*/\nconstant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexport var constNull = \n/*#__PURE__*/\nconstant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexport var constUndefined = \n/*#__PURE__*/\nconstant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexport var constVoid = constUndefined;\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\nexport function flip(f) {\n    return function (b, a) { return f(a, b); };\n}\nexport function flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\n/**\n * @since 2.0.0\n */\nexport function tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\n/**\n * @since 2.0.0\n */\nexport function increment(n) {\n    return n + 1;\n}\n/**\n * @since 2.0.0\n */\nexport function decrement(n) {\n    return n - 1;\n}\n/**\n * @since 2.0.0\n */\nexport function absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nexport function tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nexport function untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexport function pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        default:\n            var ret = arguments[0];\n            for (var i = 1; i < arguments.length; i++) {\n                ret = arguments[i](ret);\n            }\n            return ret;\n    }\n}\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexport var hole = absurd;\n/**\n * @since 2.11.0\n */\nexport var SK = function (_, b) { return b; };\n/**\n * Use `Predicate` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexport function not(predicate) {\n    return function (a) { return !predicate(a); };\n}\n/**\n * Use `Endomorphism` module instead.\n *\n * @category instances\n * @since 2.10.0\n * @deprecated\n */\nexport var getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\n","import { tuple } from './function';\nexport function ap(F, G) {\n    return function (fa) { return function (fab) {\n        return F.ap(F.map(fab, function (gab) { return function (ga) { return G.ap(gab, ga); }; }), fa);\n    }; };\n}\nexport function apFirst(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function (a) { return function () { return a; }; }), second);\n    }; };\n}\nexport function apSecond(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function () { return function (b) { return b; }; }), second);\n    }; };\n}\nexport function apS(F) {\n    return function (name, fb) { return function (fa) {\n        return F.ap(F.map(fa, function (a) { return function (b) {\n            var _a;\n            return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n        }; }), fb);\n    }; };\n}\nexport function getApplySemigroup(F) {\n    return function (S) { return ({\n        concat: function (first, second) {\n            return F.ap(F.map(first, function (x) { return function (y) { return S.concat(x, y); }; }), second);\n        }\n    }); };\n}\nfunction curried(f, n, acc) {\n    return function (x) {\n        var combined = Array(acc.length + 1);\n        for (var i = 0; i < acc.length; i++) {\n            combined[i] = acc[i];\n        }\n        combined[acc.length] = x;\n        return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);\n    };\n}\nvar tupleConstructors = {\n    1: function (a) { return [a]; },\n    2: function (a) { return function (b) { return [a, b]; }; },\n    3: function (a) { return function (b) { return function (c) { return [a, b, c]; }; }; },\n    4: function (a) { return function (b) { return function (c) { return function (d) { return [a, b, c, d]; }; }; }; },\n    5: function (a) { return function (b) { return function (c) { return function (d) { return function (e) { return [a, b, c, d, e]; }; }; }; }; }\n};\nfunction getTupleConstructor(len) {\n    if (!tupleConstructors.hasOwnProperty(len)) {\n        tupleConstructors[len] = curried(tuple, len - 1, []);\n    }\n    return tupleConstructors[len];\n}\nexport function sequenceT(F) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var len = args.length;\n        var f = getTupleConstructor(len);\n        var fas = F.map(args[0], f);\n        for (var i = 1; i < len; i++) {\n            fas = F.ap(fas, args[i]);\n        }\n        return fas;\n    };\n}\nfunction getRecordConstructor(keys) {\n    var len = keys.length;\n    switch (len) {\n        case 1:\n            return function (a) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a);\n            };\n        case 2:\n            return function (a) { return function (b) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a);\n            }; };\n        case 3:\n            return function (a) { return function (b) { return function (c) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a);\n            }; }; };\n        case 4:\n            return function (a) { return function (b) { return function (c) { return function (d) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a);\n            }; }; }; };\n        case 5:\n            return function (a) { return function (b) { return function (c) { return function (d) { return function (e) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a[keys[4]] = e,\n                    _a);\n            }; }; }; }; };\n        default:\n            return curried(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var r = {};\n                for (var i = 0; i < len; i++) {\n                    r[keys[i]] = args[i];\n                }\n                return r;\n            }, len - 1, []);\n    }\n}\nexport function sequenceS(F) {\n    return function (r) {\n        var keys = Object.keys(r);\n        var len = keys.length;\n        var f = getRecordConstructor(keys);\n        var fr = F.map(r[keys[0]], f);\n        for (var i = 1; i < len; i++) {\n            fr = F.ap(fr, r[keys[i]]);\n        }\n        return fr;\n    };\n}\n","/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nimport { pipe } from './function';\nexport function map(F, G) {\n    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };\n}\nexport function flap(F) {\n    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };\n}\nexport function bindTo(F) {\n    return function (name) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return (_a = {}, _a[name] = a, _a);\n    }); }; };\n}\n/** @deprecated */\nexport function getFunctorComposition(F, G) {\n    var _map = map(F, G);\n    return {\n        map: function (fga, f) { return pipe(fga, _map(f)); }\n    };\n}\n","/**\n * The `Applicative` type class extends the `Apply` type class with a `of` function, which can be used to create values\n * of type `f a` from values of type `a`.\n *\n * Where `Apply` provides the ability to lift functions of two or more arguments to functions whose arguments are\n * wrapped using `f`, and `Functor` provides the ability to lift functions of one argument, `pure` can be seen as the\n * function which lifts functions of _zero_ arguments. That is, `Applicative` functors support a lifting operation for\n * any number of function arguments.\n *\n * Instances must satisfy the following laws in addition to the `Apply` laws:\n *\n * 1. Identity: `A.ap(A.of(a => a), fa) <-> fa`\n * 2. Homomorphism: `A.ap(A.of(ab), A.of(a)) <-> A.of(ab(a))`\n * 3. Interchange: `A.ap(fab, A.of(a)) <-> A.ap(A.of(ab => ab(a)), fab)`\n *\n * Note. `Functor`'s `map` can be derived: `A.map(x, f) = A.ap(A.of(f), x)`\n *\n * @since 2.0.0\n */\nimport { ap, getApplySemigroup } from './Apply';\nimport { pipe } from './function';\nimport { getFunctorComposition } from './Functor';\nexport function getApplicativeMonoid(F) {\n    var f = getApplySemigroup(F);\n    return function (M) { return ({\n        concat: f(M).concat,\n        empty: F.of(M.empty)\n    }); };\n}\n/** @deprecated */\nexport function getApplicativeComposition(F, G) {\n    var map = getFunctorComposition(F, G).map;\n    var _ap = ap(F, G);\n    return {\n        map: map,\n        of: function (a) { return F.of(G.of(a)); },\n        ap: function (fgab, fga) { return pipe(fgab, _ap(fga)); }\n    };\n}\n","export function chainFirst(M) {\n    return function (f) { return function (first) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); }; };\n}\nexport function bind(M) {\n    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n    }); }); }; };\n}\n","var __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var isNone = function (fa) { return fa._tag === 'None'; };\n/** @internal */\nexport var isSome = function (fa) { return fa._tag === 'Some'; };\n/** @internal */\nexport var none = { _tag: 'None' };\n/** @internal */\nexport var some = function (a) { return ({ _tag: 'Some', value: a }); };\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var isLeft = function (ma) { return ma._tag === 'Left'; };\n/** @internal */\nexport var isRight = function (ma) { return ma._tag === 'Right'; };\n/** @internal */\nexport var left = function (e) { return ({ _tag: 'Left', left: e }); };\n/** @internal */\nexport var right = function (a) { return ({ _tag: 'Right', right: a }); };\n// -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var singleton = function (a) { return [a]; };\n/** @internal */\nexport var isNonEmpty = function (as) { return as.length > 0; };\n/** @internal */\nexport var head = function (as) { return as[0]; };\n/** @internal */\nexport var tail = function (as) { return as.slice(1); };\n// -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var emptyReadonlyArray = [];\n/** @internal */\nexport var emptyRecord = {};\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1)); };\n","/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nimport { chainFirst } from './Chain';\nimport { flow } from './function';\nimport * as _ from './internal';\nexport function fromOption(F) {\n    return function (onNone) { return function (ma) { return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value)); }; };\n}\nexport function fromPredicate(F) {\n    return function (predicate, onFalse) { return function (a) {\n        return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n    }; };\n}\nexport function fromOptionK(F) {\n    var fromOptionF = fromOption(F);\n    return function (onNone) {\n        var from = fromOptionF(onNone);\n        return function (f) { return flow(f, from); };\n    };\n}\nexport function chainOptionK(F, M) {\n    var fromOptionKF = fromOptionK(F);\n    return function (onNone) {\n        var from = fromOptionKF(onNone);\n        return function (f) { return function (ma) { return M.chain(ma, from(f)); }; };\n    };\n}\nexport function fromEitherK(F) {\n    return function (f) { return flow(f, F.fromEither); };\n}\nexport function chainEitherK(F, M) {\n    var fromEitherKF = fromEitherK(F);\n    return function (f) { return function (ma) { return M.chain(ma, fromEitherKF(f)); }; };\n}\nexport function chainFirstEitherK(F, M) {\n    return flow(fromEitherK(F), chainFirst(M));\n}\nexport function filterOrElse(F, M) {\n    return function (predicate, onFalse) { return function (ma) {\n        return M.chain(ma, function (a) { return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a))); });\n    }; };\n}\n","import { constFalse, constTrue, flow, pipe } from './function';\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\nvar contramap_ = function (predicate, f) { return pipe(predicate, contramap(f)); };\n/**\n * @category Contravariant\n * @since 2.11.0\n */\nexport var contramap = function (f) { return function (predicate) { return flow(f, predicate); }; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var URI = 'Predicate';\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getSemigroupAny = function () { return ({\n    concat: function (first, second) { return pipe(first, or(second)); }\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getMonoidAny = function () { return ({\n    concat: getSemigroupAny().concat,\n    empty: constFalse\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getSemigroupAll = function () { return ({\n    concat: function (first, second) { return pipe(first, and(second)); }\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getMonoidAll = function () { return ({\n    concat: getSemigroupAll().concat,\n    empty: constTrue\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var not = function (predicate) { return function (a) { return !predicate(a); }; };\n/**\n * @since 2.11.0\n */\nexport var or = function (second) { return function (first) { return function (a) { return first(a) || second(a); }; }; };\n/**\n * @since 2.11.0\n */\nexport var and = function (second) { return function (first) { return function (a) { return first(a) && second(a); }; }; };\n","/**\n * A `Magma` is a pair `(A, concat)` in which `A` is a non-empty set and `concat` is a binary operation on `A`\n *\n * See [Semigroup](https://gcanti.github.io/fp-ts/modules/Semigroup.ts.html) for some instances.\n *\n * @since 2.0.0\n */\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Magma`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse, concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(reverse(N.MagmaSub))(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), 2)\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var reverse = function (M) { return ({\n    concat: function (first, second) { return M.concat(second, first); }\n}); };\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var filterFirst = function (predicate) { return function (M) { return ({\n    concat: function (first, second) { return (predicate(first) ? M.concat(first, second) : second); }\n}); }; };\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var filterSecond = function (predicate) { return function (M) { return ({\n    concat: function (first, second) { return (predicate(second) ? M.concat(first, second) : first); }\n}); }; };\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var endo = function (f) { return function (M) { return ({\n    concat: function (first, second) { return M.concat(f(first), f(second)); }\n}); }; };\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(N.MagmaSub)(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), -6)\n *\n * @since 2.11.0\n */\nexport var concatAll = function (M) { return function (startWith) { return function (as) {\n    return as.reduce(function (a, acc) { return M.concat(a, acc); }, startWith);\n}; }; };\n","import { pipe } from './function';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var fromEquals = function (equals) { return ({\n    equals: function (x, y) { return x === y || equals(x, y); }\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.10.0\n */\nexport var struct = function (eqs) {\n    return fromEquals(function (first, second) {\n        for (var key in eqs) {\n            if (!eqs[key].equals(first[key], second[key])) {\n                return false;\n            }\n        }\n        return true;\n    });\n};\n/**\n * Given a tuple of `Eq`s returns a `Eq` for the tuple\n *\n * @example\n * import { tuple } from 'fp-ts/Eq'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import * as B from 'fp-ts/boolean'\n *\n * const E = tuple(S.Eq, N.Eq, B.Eq)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, true]), true)\n * assert.strictEqual(E.equals(['a', 1, true], ['b', 1, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 2, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, false]), false)\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var eqs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        eqs[_i] = arguments[_i];\n    }\n    return fromEquals(function (first, second) { return eqs.every(function (E, i) { return E.equals(first[i], second[i]); }); });\n};\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return pipe(fa, contramap(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nexport var contramap = function (f) { return function (fa) {\n    return fromEquals(function (x, y) { return fa.equals(f(x), f(y)); });\n}; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Eq';\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var eqStrict = {\n    equals: function (a, b) { return a === b; }\n};\nvar empty = {\n    equals: function () { return true; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (x, y) { return fromEquals(function (a, b) { return x.equals(a, b) && y.equals(a, b); }); }\n}); };\n/**\n * @category instances\n * @since 2.6.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: empty\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleEq = tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getStructEq = struct;\n/**\n * Use [`eqStrict`](#eqstrict) instead\n *\n * @since 2.0.0\n * @deprecated\n */\nexport var strictEqual = eqStrict.equals;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var eq = Contravariant;\n/**\n * Use [`Eq`](./boolean.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var eqBoolean = eqStrict;\n/**\n * Use [`Eq`](./string.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var eqString = eqStrict;\n/**\n * Use [`Eq`](./number.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var eqNumber = eqStrict;\n/**\n * Use [`Eq`](./Date.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var eqDate = {\n    equals: function (first, second) { return first.valueOf() === second.valueOf(); }\n};\n","import { eqStrict } from './Eq';\nimport { constant, constTrue, pipe } from './function';\n// -------------------------------------------------------------------------------------\n// defaults\n// -------------------------------------------------------------------------------------\n/**\n * @category defaults\n * @since 2.10.0\n */\nexport var equalsDefault = function (compare) { return function (first, second) {\n    return first === second || compare(first, second) === 0;\n}; };\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var fromCompare = function (compare) { return ({\n    equals: equalsDefault(compare),\n    compare: function (first, second) { return (first === second ? 0 : compare(first, second)); }\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Ord'\n * import * as B from 'fp-ts/boolean'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n *\n * const O = tuple(S.Ord, N.Ord, B.Ord)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var ords = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ords[_i] = arguments[_i];\n    }\n    return fromCompare(function (first, second) {\n        var i = 0;\n        for (; i < ords.length - 1; i++) {\n            var r = ords[i].compare(first[i], second[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return ords[i].compare(first[i], second[i]);\n    });\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\nexport var reverse = function (O) { return fromCompare(function (first, second) { return O.compare(second, first); }); };\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return pipe(fa, contramap(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nexport var contramap = function (f) { return function (fa) {\n    return fromCompare(function (first, second) { return fa.compare(f(first), f(second)); });\n}; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Ord';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (first, second) {\n        return fromCompare(function (a, b) {\n            var ox = first.compare(a, b);\n            return ox !== 0 ? ox : second.compare(a, b);\n        });\n    }\n}); };\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, reverse, getMonoid } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as B from 'fp-ts/boolean'\n * import { pipe } from 'fp-ts/function'\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface User {\n *   readonly id: number\n *   readonly name: string\n *   readonly age: number\n *   readonly rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   S.Ord,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   N.Ord,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   B.Ord,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = concatAll(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = concatAll(M)([reverse(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: fromCompare(function () { return 0; })\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var trivial = {\n    equals: constTrue,\n    compare: \n    /*#__PURE__*/\n    constant(0)\n};\n/**\n * @since 2.11.0\n */\nexport var equals = function (O) { return function (second) { return function (first) {\n    return first === second || O.compare(first, second) === 0;\n}; }; };\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\nexport var lt = function (O) { return function (first, second) { return O.compare(first, second) === -1; }; };\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\nexport var gt = function (O) { return function (first, second) { return O.compare(first, second) === 1; }; };\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\nexport var leq = function (O) { return function (first, second) { return O.compare(first, second) !== 1; }; };\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\nexport var geq = function (O) { return function (first, second) { return O.compare(first, second) !== -1; }; };\n// TODO: curry in v3\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nexport var min = function (O) { return function (first, second) {\n    return first === second || O.compare(first, second) < 1 ? first : second;\n}; };\n// TODO: curry in v3\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nexport var max = function (O) { return function (first, second) {\n    return first === second || O.compare(first, second) > -1 ? first : second;\n}; };\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\nexport var clamp = function (O) {\n    var minO = min(O);\n    var maxO = max(O);\n    return function (low, hi) { return function (a) { return maxO(minO(a, hi), low); }; };\n};\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\nexport var between = function (O) {\n    var ltO = lt(O);\n    var gtO = gt(O);\n    return function (low, hi) { return function (a) { return (ltO(a, low) || gtO(a, hi) ? false : true); }; };\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleOrd = tuple;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getDualOrd = reverse;\n/**\n * Use [`Contravariant`](#contravariant) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var ord = Contravariant;\n// default compare for primitive types\nfunction compare(first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n}\nvar strictOrd = {\n    equals: eqStrict.equals,\n    compare: compare\n};\n/**\n * Use [`Ord`](./boolean.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var ordBoolean = strictOrd;\n/**\n * Use [`Ord`](./string.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var ordString = strictOrd;\n/**\n * Use [`Ord`](./number.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var ordNumber = strictOrd;\n/**\n * Use [`Ord`](./Date.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var ordDate = \n/*#__PURE__*/\npipe(ordNumber, \n/*#__PURE__*/\ncontramap(function (date) { return date.valueOf(); }));\n","/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\nimport { getSemigroup, identity } from './function';\nimport * as _ from './internal';\nimport * as M from './Magma';\nimport * as Or from './Ord';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.min(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var min = function (O) { return ({\n    concat: Or.min(O)\n}); };\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.max(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var max = function (O) { return ({\n    concat: Or.max(O)\n}); };\n/**\n * @category constructors\n * @since 2.10.0\n */\nexport var constant = function (a) { return ({\n    concat: function () { return a; }\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Semigroup).concat('a', 'b'), 'ba')\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var reverse = M.reverse;\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const S = struct<Point>({\n *   x: N.SemigroupSum,\n *   y: N.SemigroupSum\n * })\n *\n * assert.deepStrictEqual(S.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var struct = function (semigroups) { return ({\n    concat: function (first, second) {\n        var r = {};\n        for (var k in semigroups) {\n            if (_.has.call(semigroups, k)) {\n                r[k] = semigroups[k].concat(first[k], second[k]);\n            }\n        }\n        return r;\n    }\n}); };\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Semigroup'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const S1 = tuple(S.Semigroup, N.SemigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = tuple(S.Semigroup, N.SemigroupSum, B.SemigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var semigroups = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        semigroups[_i] = arguments[_i];\n    }\n    return ({\n        concat: function (first, second) { return semigroups.map(function (s, i) { return s.concat(first[i], second[i]); }); }\n    });\n};\n/**\n * Between each pair of elements insert `middle`.\n *\n * @example\n * import { intercalate } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * const S1 = pipe(S.Semigroup, intercalate(' + '))\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a + b')\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var intercalate = function (middle) { return function (S) { return ({\n    concat: function (x, y) { return S.concat(x, S.concat(middle, y)); }\n}); }; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.first<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var first = function () { return ({ concat: identity }); };\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.last<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var last = function () { return ({ concat: function (_, y) { return y; } }); };\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * const sum = concatAll(N.SemigroupSum)(0)\n *\n * assert.deepStrictEqual(sum([1, 2, 3]), 6)\n * assert.deepStrictEqual(sum([]), 0)\n *\n * @since 2.10.0\n */\nexport var concatAll = M.concatAll;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `void` module instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupVoid = constant(undefined);\n/**\n * Use [`getAssignSemigroup`](./struct.ts.html#getAssignSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getObjectSemigroup = function () { return ({\n    concat: function (first, second) { return Object.assign({}, first, second); }\n}); };\n/**\n * Use [`last`](#last) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getLastSemigroup = last;\n/**\n * Use [`first`](#first) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getFirstSemigroup = first;\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleSemigroup = tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getStructSemigroup = struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getDualSemigroup = reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var getJoinSemigroup = max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var getMeetSemigroup = min;\n/**\n * Use [`intercalate`](#intercalate) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nexport var getIntercalateSemigroup = intercalate;\nexport function fold(S) {\n    var concatAllS = concatAll(S);\n    return function (startWith, as) { return (as === undefined ? concatAllS(startWith) : concatAllS(startWith)(as)); };\n}\n/**\n * Use [`SemigroupAll`](./boolean.ts.html#SemigroupAll) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupAll = {\n    concat: function (x, y) { return x && y; }\n};\n/**\n * Use [`SemigroupAny`](./boolean.ts.html#SemigroupAny) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupAny = {\n    concat: function (x, y) { return x || y; }\n};\n/**\n * Use [`getSemigroup`](./function.ts.html#getSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getFunctionSemigroup = getSemigroup;\n/**\n * Use [`Semigroup`](./string.ts.html#Semigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupString = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupSum`](./number.ts.html#SemigroupSum) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupSum = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupProduct`](./number.ts.html#SemigroupProduct) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupProduct = {\n    concat: function (x, y) { return x * y; }\n};\n","/**\n * ```ts\n * interface Separated<E, A> {\n *    readonly left: E\n *    readonly right: A\n * }\n * ```\n *\n * Represents a result of separating a whole into two parts.\n *\n * @since 2.10.0\n */\nimport { pipe } from './function';\nimport { flap as flap_ } from './Functor';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nexport var separated = function (left, right) { return ({ left: left, right: right }); };\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _mapLeft = function (fa, f) { return pipe(fa, mapLeft(f)); };\nvar _bimap = function (fa, g, f) { return pipe(fa, bimap(g, f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.10.0\n */\nexport var map = function (f) { return function (fa) {\n    return separated(left(fa), f(right(fa)));\n}; };\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\nexport var mapLeft = function (f) { return function (fa) {\n    return separated(f(left(fa)), right(fa));\n}; };\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\nexport var bimap = function (f, g) { return function (fa) {\n    return separated(f(left(fa)), g(right(fa)));\n}; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var URI = 'Separated';\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Bifunctor = {\n    URI: URI,\n    mapLeft: _mapLeft,\n    bimap: _bimap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var flap = \n/*#__PURE__*/\nflap_(Functor);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nexport var left = function (s) { return s.left; };\n/**\n * @since 2.10.0\n */\nexport var right = function (s) { return s.right; };\n","import * as _ from './internal';\nexport function wiltDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.separate); };\n    };\n}\nexport function witherDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.compact); };\n    };\n}\nexport function filterE(W) {\n    return function (F) {\n        var witherF = W.wither(F);\n        return function (predicate) { return function (ga) { return witherF(ga, function (a) { return F.map(predicate(a), function (b) { return (b ? _.some(a) : _.none); }); }); }; };\n    };\n}\n","export function guard(F, P) {\n    return function (b) { return (b ? P.of(undefined) : F.zero()); };\n}\n","import { getApplicativeMonoid } from './Applicative';\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_, getApplySemigroup as getApplySemigroup_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { chainEitherK as chainEitherK_, fromEitherK as fromEitherK_, chainFirstEitherK as chainFirstEitherK_ } from './FromEither';\nimport { constNull, constUndefined, flow, identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { not } from './Predicate';\nimport { first, last } from './Semigroup';\nimport { separated } from './Separated';\nimport { wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var none = _.none;\n/**\n * Constructs a `Some`. Represents an optional value that exists.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var some = _.some;\nexport function fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? some(a) : none); };\n}\n/**\n * Returns the `Left` value of an `Either` if possible.\n *\n * @example\n * import { getLeft, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var getLeft = function (ma) { return (ma._tag === 'Right' ? none : some(ma.left)); };\n/**\n * Returns the `Right` value of an `Either` if possible.\n *\n * @example\n * import { getRight, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(left('a')), none)\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var getRight = function (ma) { return (ma._tag === 'Left' ? none : some(ma.right)); };\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\nvar _filter = function (fa, predicate) { return pipe(fa, filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return pipe(fa, filterMap(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return pipe(fa, partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return pipe(fa, partitionMap(f)); };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = function (S) { return ({\n    show: function (ma) { return (isNone(ma) ? 'none' : \"some(\" + S.show(ma.value) + \")\"); }\n}); };\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = function (E) { return ({\n    equals: function (x, y) { return x === y || (isNone(x) ? isNone(y) : isNone(y) ? false : E.equals(x.value, y.value)); }\n}); };\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const O = getOrd(N.Ord)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getOrd = function (O) { return ({\n    equals: getEq(O).equals,\n    compare: function (x, y) { return (x === y ? 0 : isSome(x) ? (isSome(y) ? O.compare(x.value, y.value) : 1) : -1); }\n}); };\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(b) | some(b)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const M = getMonoid(SemigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getMonoid = function (S) { return ({\n    concat: function (x, y) { return (isNone(x) ? y : isNone(y) ? x : some(S.concat(x.value, y.value))); },\n    empty: none\n}); };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) {\n    return isNone(fa) ? none : some(f(fa.value));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nexport var of = some;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var ap = function (fa) { return function (fab) {\n    return isNone(fab) ? none : isNone(fa) ? none : some(fab.value(fa.value));\n}; };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var chain = function (f) { return function (ma) {\n    return isNone(ma) ? none : f(ma.value);\n}; };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var reduce = function (b, f) { return function (fa) {\n    return isNone(fa) ? b : f(b, fa.value);\n}; };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var foldMap = function (M) { return function (f) { return function (fa) {\n    return isNone(fa) ? M.empty : f(fa.value);\n}; }; };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var reduceRight = function (b, f) { return function (fa) {\n    return isNone(fa) ? b : f(fa.value, b);\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category instance operations\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) {\n    return isNone(fa) ? that() : fa;\n}; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Option` returns the left-most non-`None` value.\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('a')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('b')\n * )\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nexport var zero = function () { return none; };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Zero = {\n    URI: URI,\n    zero: zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\nexport var guard = \n/*#__PURE__*/\nguard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    alt: _alt,\n    zero: zero\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return isNone(wa) ? none : some(f(wa));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var compact = \n/*#__PURE__*/\nchain(identity);\nvar defaultSeparated = \n/*#__PURE__*/\nseparated(none, none);\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var separate = function (ma) {\n    return isNone(ma) ? defaultSeparated : separated(getLeft(ma.value), getRight(ma.value));\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var filter = function (predicate) { return function (fa) { return (isNone(fa) ? none : predicate(fa.value) ? fa : none); }; };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var filterMap = function (f) { return function (fa) {\n    return isNone(fa) ? none : f(fa.value);\n}; };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var partition = function (predicate) { return function (fa) { return separated(_filter(fa, not(predicate)), _filter(fa, predicate)); }; };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var partitionMap = function (f) { return flow(map(f), separate); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instance operations\n * @since 2.6.3\n */\nexport var traverse = function (F) { return function (f) { return function (ta) { return (isNone(ta) ? F.of(none) : F.map(f(ta.value), some)); }; }; };\n/**\n * @category instance operations\n * @since 2.6.3\n */\nexport var sequence = function (F) { return function (ta) { return (isNone(ta) ? F.of(none) : F.map(ta.value, some)); }; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\nvar _wither = \n/*#__PURE__*/\nwitherDefault(Traversable, Compactable);\nvar _wilt = \n/*#__PURE__*/\nwiltDefault(Traversable, Compactable);\n/**\n * @category instance operations\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\n/**\n * @category instance operations\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nexport var throwError = function () { return none; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var MonadThrow = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    throwError: throwError\n};\n/**\n * Transforms an `Either` to an `Option` discarding the error.\n *\n * Alias of [getRight](#getright)\n *\n * @category natural transformations\n * @since 2.0.0\n */\nexport var fromEither = getRight;\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: fromEither\n};\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise.\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isSome = _.isSome;\n/**\n * Returns `true` if the option is `None`, `false` otherwise.\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isNone = function (fa) { return fa._tag === 'None'; };\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var matchW = function (onNone, onSome) { return function (ma) {\n    return isNone(ma) ? onNone() : onSome(ma.value);\n}; };\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var foldW = matchW;\n/**\n * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, match } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var match = matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var fold = match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\nexport var getOrElseW = function (onNone) { return function (ma) { return (isNone(ma) ? onNone() : ma.value); }; };\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var getOrElse = getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var flap = \n/*#__PURE__*/\nflap_(Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apFirst = \n/*#__PURE__*/\napFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apSecond = \n/*#__PURE__*/\napSecond_(Apply);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var flatten = compact;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chainFirst = \n/*#__PURE__*/\nchainFirst_(Chain);\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var fromEitherK = \n/*#__PURE__*/\nfromEitherK_(FromEither);\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var chainEitherK = \n/*#__PURE__*/\nchainEitherK_(FromEither, Chain);\n/**\n * @category combinators\n * @since 2.12.0\n */\nexport var chainFirstEitherK = \n/*#__PURE__*/\nchainFirstEitherK_(FromEither, Chain);\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nexport var fromNullable = function (a) { return (a == null ? none : some(a)); };\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a\n * `Some`.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nexport var tryCatch = function (f) {\n    try {\n        return some(f());\n    }\n    catch (e) {\n        return none;\n    }\n};\n/**\n * Converts a function that may throw to one returning a `Option`.\n *\n * @category interop\n * @since 2.10.0\n */\nexport var tryCatchK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return tryCatch(function () { return f.apply(void 0, a); });\n}; };\n/**\n * Returns a *smart constructor* from a function that returns a nullable value.\n *\n * @example\n * import { fromNullableK, none, some } from 'fp-ts/Option'\n *\n * const f = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const g = fromNullableK(f)\n *\n * assert.deepStrictEqual(g('1'), some(1))\n * assert.deepStrictEqual(g('a'), none)\n *\n * @category interop\n * @since 2.9.0\n */\nexport var fromNullableK = function (f) { return flow(f, fromNullable); };\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   readonly company?: {\n *     readonly address?: {\n *       readonly street?: {\n *         readonly name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category interop\n * @since 2.9.0\n */\nexport var chainNullableK = function (f) { return function (ma) {\n    return isNone(ma) ? none : fromNullable(f(ma.value));\n}; };\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category interop\n * @since 2.0.0\n */\nexport var toNullable = \n/*#__PURE__*/\nmatch(constNull, identity);\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category interop\n * @since 2.0.0\n */\nexport var toUndefined = \n/*#__PURE__*/\nmatch(constUndefined, identity);\nexport function elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return isNone(ma) ? false : E.equals(a, ma.value);\n    };\n}\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\nexport var exists = function (predicate) { return function (ma) {\n    return isNone(ma) ? false : predicate(ma.value);\n}; };\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexport var bindTo = \n/*#__PURE__*/\nbindTo_(Functor);\n/**\n * @since 2.8.0\n */\nexport var bind = \n/*#__PURE__*/\nbind_(Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = \n/*#__PURE__*/\napS_(Apply);\n// -------------------------------------------------------------------------------------\n// sequence T\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var ApT = \n/*#__PURE__*/\nof(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nexport var traverseReadonlyNonEmptyArrayWithIndex = function (f) { return function (as) {\n    var o = f(0, _.head(as));\n    if (isNone(o)) {\n        return none;\n    }\n    var out = [o.value];\n    for (var i = 1; i < as.length; i++) {\n        var o_1 = f(i, as[i]);\n        if (isNone(o_1)) {\n            return none;\n        }\n        out.push(o_1.value);\n    }\n    return some(out);\n}; };\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nexport var traverseReadonlyArrayWithIndex = function (f) {\n    var g = traverseReadonlyNonEmptyArrayWithIndex(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : ApT); };\n};\n/**\n * @since 2.9.0\n */\nexport var traverseArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * @since 2.9.0\n */\nexport var traverseArray = function (f) {\n    return traverseReadonlyArrayWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @since 2.9.0\n */\nexport var sequenceArray = \n/*#__PURE__*/\ntraverseArray(identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use `Refinement` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexport function getRefinement(getOption) {\n    return function (a) { return isSome(getOption(a)); };\n}\n/**\n * Use [`chainNullableK`](#chainnullablek) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var mapNullable = chainNullableK;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var option = {\n    URI: URI,\n    map: _map,\n    of: of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    zero: zero,\n    alt: _alt,\n    extend: _extend,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt,\n    throwError: throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplySemigroup = \n/*#__PURE__*/\ngetApplySemigroup_(Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplyMonoid = \n/*#__PURE__*/\ngetApplicativeMonoid(Applicative);\n/**\n * Use\n *\n * ```ts\n * import { first } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(first())\n * ```\n *\n * instead.\n *\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getFirstMonoid = function () { return getMonoid(first()); };\n/**\n * Use\n *\n * ```ts\n * import { last } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(last())\n * ```\n *\n * instead.\n *\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getLastMonoid = function () { return getMonoid(last()); };\n","/* components/effectiveness/Effectiveness.svelte generated by Svelte v3.48.0 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tcomponent_subscribe,\n\tdestroy_each,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tnoop,\n\tsafe_not_equal,\n\tset_data,\n\tspace,\n\ttext\n} from \"svelte/internal\";\n\nimport { typedex } from \"../store\";\nimport { Effectiveness } from \"../../model/effectiveness\";\nimport { teamEffectiveness } from \"./index\";\nimport \"fp-ts/es6/Option\";\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[8] = list[i];\n\treturn child_ctx;\n}\n\n// (22:4) {#each $typedex as type}\nfunction create_each_block(ctx) {\n\tlet tr;\n\tlet th;\n\tlet t0_value = /*type*/ ctx[8].name + \"\";\n\tlet t0;\n\tlet t1;\n\tlet td0;\n\tlet t2_value = teamEffectiveness(/*type*/ ctx[8], /*Immune*/ ctx[4], /*team*/ ctx[0], /*$typedex*/ ctx[1]) + \"\";\n\tlet t2;\n\tlet t3;\n\tlet td1;\n\tlet t4_value = teamEffectiveness(/*type*/ ctx[8], /*Quarter*/ ctx[7], /*team*/ ctx[0], /*$typedex*/ ctx[1]) + \"\";\n\tlet t4;\n\tlet t5;\n\tlet td2;\n\tlet t6_value = teamEffectiveness(/*type*/ ctx[8], /*Half*/ ctx[2], /*team*/ ctx[0], /*$typedex*/ ctx[1]) + \"\";\n\tlet t6;\n\tlet t7;\n\tlet td3;\n\tlet t8_value = teamEffectiveness(/*type*/ ctx[8], /*Neutral*/ ctx[5], /*team*/ ctx[0], /*$typedex*/ ctx[1]) + \"\";\n\tlet t8;\n\tlet t9;\n\tlet td4;\n\tlet t10_value = teamEffectiveness(/*type*/ ctx[8], /*Double*/ ctx[3], /*team*/ ctx[0], /*$typedex*/ ctx[1]) + \"\";\n\tlet t10;\n\tlet t11;\n\tlet td5;\n\tlet t12_value = teamEffectiveness(/*type*/ ctx[8], /*Quadrouple*/ ctx[6], /*team*/ ctx[0], /*$typedex*/ ctx[1]) + \"\";\n\tlet t12;\n\tlet t13;\n\n\treturn {\n\t\tc() {\n\t\t\ttr = element(\"tr\");\n\t\t\tth = element(\"th\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\ttd0 = element(\"td\");\n\t\t\tt2 = text(t2_value);\n\t\t\tt3 = space();\n\t\t\ttd1 = element(\"td\");\n\t\t\tt4 = text(t4_value);\n\t\t\tt5 = space();\n\t\t\ttd2 = element(\"td\");\n\t\t\tt6 = text(t6_value);\n\t\t\tt7 = space();\n\t\t\ttd3 = element(\"td\");\n\t\t\tt8 = text(t8_value);\n\t\t\tt9 = space();\n\t\t\ttd4 = element(\"td\");\n\t\t\tt10 = text(t10_value);\n\t\t\tt11 = space();\n\t\t\ttd5 = element(\"td\");\n\t\t\tt12 = text(t12_value);\n\t\t\tt13 = space();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, tr, anchor);\n\t\t\tappend(tr, th);\n\t\t\tappend(th, t0);\n\t\t\tappend(tr, t1);\n\t\t\tappend(tr, td0);\n\t\t\tappend(td0, t2);\n\t\t\tappend(tr, t3);\n\t\t\tappend(tr, td1);\n\t\t\tappend(td1, t4);\n\t\t\tappend(tr, t5);\n\t\t\tappend(tr, td2);\n\t\t\tappend(td2, t6);\n\t\t\tappend(tr, t7);\n\t\t\tappend(tr, td3);\n\t\t\tappend(td3, t8);\n\t\t\tappend(tr, t9);\n\t\t\tappend(tr, td4);\n\t\t\tappend(td4, t10);\n\t\t\tappend(tr, t11);\n\t\t\tappend(tr, td5);\n\t\t\tappend(td5, t12);\n\t\t\tappend(tr, t13);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*$typedex*/ 2 && t0_value !== (t0_value = /*type*/ ctx[8].name + \"\")) set_data(t0, t0_value);\n\t\t\tif (dirty & /*$typedex, team*/ 3 && t2_value !== (t2_value = teamEffectiveness(/*type*/ ctx[8], /*Immune*/ ctx[4], /*team*/ ctx[0], /*$typedex*/ ctx[1]) + \"\")) set_data(t2, t2_value);\n\t\t\tif (dirty & /*$typedex, team*/ 3 && t4_value !== (t4_value = teamEffectiveness(/*type*/ ctx[8], /*Quarter*/ ctx[7], /*team*/ ctx[0], /*$typedex*/ ctx[1]) + \"\")) set_data(t4, t4_value);\n\t\t\tif (dirty & /*$typedex, team*/ 3 && t6_value !== (t6_value = teamEffectiveness(/*type*/ ctx[8], /*Half*/ ctx[2], /*team*/ ctx[0], /*$typedex*/ ctx[1]) + \"\")) set_data(t6, t6_value);\n\t\t\tif (dirty & /*$typedex, team*/ 3 && t8_value !== (t8_value = teamEffectiveness(/*type*/ ctx[8], /*Neutral*/ ctx[5], /*team*/ ctx[0], /*$typedex*/ ctx[1]) + \"\")) set_data(t8, t8_value);\n\t\t\tif (dirty & /*$typedex, team*/ 3 && t10_value !== (t10_value = teamEffectiveness(/*type*/ ctx[8], /*Double*/ ctx[3], /*team*/ ctx[0], /*$typedex*/ ctx[1]) + \"\")) set_data(t10, t10_value);\n\t\t\tif (dirty & /*$typedex, team*/ 3 && t12_value !== (t12_value = teamEffectiveness(/*type*/ ctx[8], /*Quadrouple*/ ctx[6], /*team*/ ctx[0], /*$typedex*/ ctx[1]) + \"\")) set_data(t12, t12_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(tr);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet table;\n\tlet thead;\n\tlet t12;\n\tlet tbody;\n\tlet each_value = /*$typedex*/ ctx[1];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\ttable = element(\"table\");\n\t\t\tthead = element(\"thead\");\n\n\t\t\tthead.innerHTML = `<tr><th></th> \n      <th>0</th> \n      <th>1/4</th> \n      <th>1/2</th> \n      <th>Neutral</th> \n      <th>2x</th> \n      <th>4x</th></tr>`;\n\n\t\t\tt12 = space();\n\t\t\ttbody = element(\"tbody\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, table, anchor);\n\t\t\tappend(table, thead);\n\t\t\tappend(table, t12);\n\t\t\tappend(table, tbody);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(tbody, null);\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*teamEffectiveness, $typedex, Quadrouple, team, Double, Neutral, Half, Quarter, Immune*/ 255) {\n\t\t\t\teach_value = /*$typedex*/ ctx[1];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\teach_blocks[i].m(tbody, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks.length; i += 1) {\n\t\t\t\t\teach_blocks[i].d(1);\n\t\t\t\t}\n\n\t\t\t\teach_blocks.length = each_value.length;\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(table);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet $typedex;\n\tcomponent_subscribe($$self, typedex, $$value => $$invalidate(1, $typedex = $$value));\n\tconst { Half, Double, Immune, Neutral, Quadrouple, Quarter } = Effectiveness;\n\tlet { team } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('team' in $$props) $$invalidate(0, team = $$props.team);\n\t};\n\n\treturn [team, $typedex, Half, Double, Immune, Neutral, Quadrouple, Quarter];\n}\n\nclass Effectiveness_1 extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { team: 0 });\n\t}\n}\n\nexport default Effectiveness_1;","/* App.svelte generated by Svelte v3.48.0 */\nimport {\n\tSvelteComponent,\n\tadd_flush_callback,\n\tattr,\n\tbind,\n\tbinding_callbacks,\n\tcheck_outros,\n\tcomponent_subscribe,\n\tcreate_component,\n\tdestroy_component,\n\tdestroy_each,\n\tdetach,\n\telement,\n\tgroup_outros,\n\tinit,\n\tinsert,\n\tmount_component,\n\tsafe_not_equal,\n\tspace,\n\ttransition_in,\n\ttransition_out\n} from \"svelte/internal\";\n\nimport { team } from \"./components/store\";\nimport Member from \"./components/Member.svelte\";\nimport Effectiveness from \"./components/effectiveness/Effectiveness.svelte\";\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[3] = list[i];\n\tchild_ctx[4] = list;\n\tchild_ctx[5] = i;\n\treturn child_ctx;\n}\n\n// (14:2) {#each selecteds as member, i}\nfunction create_each_block(ctx) {\n\tlet member;\n\tlet updating_selected;\n\tlet current;\n\n\tfunction member_selected_binding(value) {\n\t\t/*member_selected_binding*/ ctx[2](value, /*member*/ ctx[3], /*each_value*/ ctx[4], /*i*/ ctx[5]);\n\t}\n\n\tlet member_props = { index: /*i*/ ctx[5] };\n\n\tif (/*member*/ ctx[3] !== void 0) {\n\t\tmember_props.selected = /*member*/ ctx[3];\n\t}\n\n\tmember = new Member({ props: member_props });\n\tbinding_callbacks.push(() => bind(member, 'selected', member_selected_binding));\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(member.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(member, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tconst member_changes = {};\n\n\t\t\tif (!updating_selected && dirty & /*selecteds*/ 1) {\n\t\t\t\tupdating_selected = true;\n\t\t\t\tmember_changes.selected = /*member*/ ctx[3];\n\t\t\t\tadd_flush_callback(() => updating_selected = false);\n\t\t\t}\n\n\t\t\tmember.$set(member_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(member.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(member.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(member, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet div;\n\tlet t;\n\tlet effectiveness;\n\tlet current;\n\tlet each_value = /*selecteds*/ ctx[0];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\teffectiveness = new Effectiveness({ props: { team: /*$team*/ ctx[1] } });\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tt = space();\n\t\t\tcreate_component(effectiveness.$$.fragment);\n\t\t\tattr(div, \"id\", \"team\");\n\t\t\tattr(div, \"class\", \"svelte-1eo7nnp\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(div, null);\n\t\t\t}\n\n\t\t\tinsert(target, t, anchor);\n\t\t\tmount_component(effectiveness, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*selecteds*/ 1) {\n\t\t\t\teach_value = /*selecteds*/ ctx[0];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(div, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tconst effectiveness_changes = {};\n\t\t\tif (dirty & /*$team*/ 2) effectiveness_changes.team = /*$team*/ ctx[1];\n\t\t\teffectiveness.$set(effectiveness_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\ttransition_in(effectiveness.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\ttransition_out(effectiveness.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tif (detaching) detach(t);\n\t\t\tdestroy_component(effectiveness, detaching);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet $team;\n\tcomponent_subscribe($$self, team, $$value => $$invalidate(1, $team = $$value));\n\tconst selecteds = Array(6).fill(\"\");\n\n\tfunction member_selected_binding(value, member, each_value, i) {\n\t\teach_value[i] = value;\n\t\t$$invalidate(0, selecteds);\n\t}\n\n\treturn [selecteds, $team, member_selected_binding];\n}\n\nclass App extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, {});\n\t}\n}\n\nexport default App;","import './initialize';\nimport App from './App.svelte';\n\nconst app = new App({\n    target: document.body,\n    props: {},\n});\n\nexport default app;\n"]}